<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_program_8h" kind="file" language="C++">
    <compoundname>Program.h</compoundname>
    <includes refid="_token_8h" local="yes">Token.h</includes>
    <includes refid="_tabels_8h" local="yes">Tabels.h</includes>
    <includes refid="_name_table_8h" local="yes">NameTable.h</includes>
    <includedby refid="_ast_to_i_r_8cpp" local="yes">src/IR/AstToIR/AstToIR.cpp</includedby>
    <includedby refid="_ast_to_i_r_8h" local="yes">src/IR/AstToIR/AstToIR.h</includedby>
    <includedby refid="_builder_8cpp" local="yes">src/IR/AstToIR/Builder.cpp</includedby>
    <includedby refid="_asm_ctx_8h" local="yes">src/Legacy/AsmCtx.h</includedby>
    <includedby refid="_lexical_ctx_8cpp" local="yes">src/Legacy/Common/LexicalCtx/LexicalCtx.cpp</includedby>
    <includedby refid="_standart_a_w_p_8h" local="yes">src/Legacy/Common/StandartAWP/StandartAWP.h</includedby>
    <includedby refid="_program_8cpp" local="yes">src/Legacy/Common/Structures/Program/Program.cpp</includedby>
    <includedby refid="_def_graph_vis_8h" local="yes">src/Legacy/Common/Utils/DefGraphVis.h</includedby>
    <includedby refid="_lang_utils_8h" local="yes">src/Legacy/Common/Utils/LangUtils.h</includedby>
    <includedby refid="_set_token_tree_8h" local="yes">src/Legacy/SetTokenTree.h</includedby>
    <includedby refid="_translate_to_asm_8h" local="yes">src/Legacy/TranslateToAsm.h</includedby>
    <incdepgraph>
      <node id="5">
        <label>Tabels.h</label>
        <link refid="_tabels_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="3">
        <label>NameTable.h</label>
        <link refid="_name_table_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Token.h</label>
        <link refid="_token_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/Legacy/Common/Structures/Program/Program.h</label>
        <link refid="_program_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7">
        <label>src/Legacy/SetTokenTree.h</label>
        <link refid="_set_token_tree_8h_source"/>
      </node>
      <node id="5">
        <label>src/Legacy/Common/Utils/DefGraphVis.h</label>
        <link refid="_def_graph_vis_8h_source"/>
      </node>
      <node id="6">
        <label>src/Legacy/Common/Utils/LangUtils.h</label>
        <link refid="_lang_utils_8h_source"/>
      </node>
      <node id="8">
        <label>src/Legacy/TranslateToAsm.h</label>
        <link refid="_translate_to_asm_8h_source"/>
      </node>
      <node id="4">
        <label>src/Legacy/Common/StandartAWP/StandartAWP.h</label>
        <link refid="_standart_a_w_p_8h_source"/>
      </node>
      <node id="1">
        <label>src/Legacy/Common/Structures/Program/Program.h</label>
        <link refid="_program_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/IR/AstToIR/AstToIR.h</label>
        <link refid="_ast_to_i_r_8h_source"/>
      </node>
      <node id="3">
        <label>src/Legacy/AsmCtx.h</label>
        <link refid="_asm_ctx_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_program" prot="public">Program</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_program_8h_1a036ba0a0e5c03d360ce48f023d801d1b" prot="public" static="no">
        <name>GLOBAL_VAR_TABLE</name>
        <param><defname>PROGRAM</defname></param>
        <initializer>((PROGRAM)-&gt;name_table_arr-&gt;arr[0])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Legacy/Common/Structures/Program/Program.h" line="29" column="9" bodyfile="src/Legacy/Common/Structures/Program/Program.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_program_8h_1a5b59e4fa20c8d6e3b8b04bb654b1a66c" prot="public" static="no">
        <name>NUMBER_OF_GLOBAL_VARS</name>
        <param><defname>PROGRAM</defname></param>
        <initializer>((PROGRAM)-&gt;number_of_global_vars)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Legacy/Common/Structures/Program/Program.h" line="30" column="9" bodyfile="src/Legacy/Common/Structures/Program/Program.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_program_8h_1abdd2784cea9d34c359c5e03cedb0ab2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ProgramCtor</definition>
        <argsstring>(Program *program, const char *path_to_src_file)</argsstring>
        <name>ProgramCtor</name>
        <param>
          <type><ref refid="struct_program" kindref="compound">Program</ref> *</type>
          <declname>program</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path_to_src_file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Legacy/Common/Structures/Program/Program.h" line="23" column="6" bodyfile="src/Legacy/Common/Structures/Program/Program.cpp" bodystart="6" bodyend="20" declfile="src/Legacy/Common/Structures/Program/Program.h" declline="23" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_program_8h_1a4915b4722df983c8f1afc02653b90372" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ProgramDtor</definition>
        <argsstring>(Program *program)</argsstring>
        <name>ProgramDtor</name>
        <param>
          <type><ref refid="struct_program" kindref="compound">Program</ref> *</type>
          <declname>program</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Legacy/Common/Structures/Program/Program.h" line="24" column="6" bodyfile="src/Legacy/Common/Structures/Program/Program.cpp" bodystart="22" bodyend="48" declfile="src/Legacy/Common/Structures/Program/Program.h" declline="24" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_program_8h_1a0d8eee5602e840b8e56f1c0640c4bed0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CleanStringArr</definition>
        <argsstring>(const char **string_arr, int number_of_strings)</argsstring>
        <name>CleanStringArr</name>
        <param>
          <type>const char **</type>
          <declname>string_arr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>number_of_strings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Legacy/Common/Structures/Program/Program.h" line="26" column="5" bodyfile="src/Legacy/Common/Structures/Program/Program.cpp" bodystart="52" bodyend="68" declfile="src/Legacy/Common/Structures/Program/Program.h" declline="26" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Token.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Tabels.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;NameTable.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="struct_program" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_program" kindref="compound">Program</ref></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_token" kindref="compound">Token</ref>*<sp/>token_arr;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number_of_tokens;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_token" kindref="compound">Token</ref>*<sp/>root;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>string_arr;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number_of_strings;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path_to_src_file;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_name_table_arr" kindref="compound">NameTableArr</ref>*<sp/>name_table_arr;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number_of_global_vars;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>ProgramCtor(<ref refid="struct_program" kindref="compound">Program</ref>*<sp/>program,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>path_to_src_file);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>ProgramDtor(<ref refid="struct_program" kindref="compound">Program</ref>*<sp/>program);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CleanStringArr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>string_arr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number_of_strings);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GLOBAL_VAR_TABLE(PROGRAM)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((PROGRAM)-&gt;name_table_arr-&gt;arr[0])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUMBER_OF_GLOBAL_VARS(PROGRAM)<sp/><sp/>((PROGRAM)-&gt;number_of_global_vars)</highlight></codeline>
    </programlisting>
    <location file="src/Legacy/Common/Structures/Program/Program.h"/>
  </compounddef>
</doxygen>
