<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_storage_8h" kind="file" language="C++">
    <compoundname>Storage.h</compoundname>
    <includes refid="_no_copyable_8h" local="yes">NoCopyable.h</includes>
    <includes refid="_type_defs_8h" local="yes">TypeDefs.h</includes>
    <includes refid="_registers_usage_8h" local="yes">RegistersUsage.h</includes>
    <includedby refid="_storage_8cpp" local="yes">src/IR/Storage/Storage.cpp</includedby>
    <includedby refid="_value_8h" local="yes">src/IR/Value/Value.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>src/IR/Storage/Storage.h</label>
        <link refid="_storage_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>TypeDefs.h</label>
        <link refid="_type_defs_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="5">
        <label>RegistersUsage.h</label>
        <link refid="_registers_usage_8h_source"/>
      </node>
      <node id="2">
        <label>NoCopyable.h</label>
        <link refid="_no_copyable_8h_source"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8">
        <label>src/IR/DumpIR/DumpIR.h</label>
        <link refid="_dump_i_r_8h_source"/>
      </node>
      <node id="5">
        <label>src/IR/Instructions/Instructions.h</label>
        <link refid="_instructions_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/IR/Storage/Storage.h</label>
        <link refid="_storage_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>src/IR/TranslateTox86/IRContext.h</label>
        <link refid="_i_r_context_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/IR/AstToIR/ValueTable.h</label>
        <link refid="_value_table_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/IR/AstToIR/Builder.h</label>
        <link refid="_builder_8h_source"/>
      </node>
      <node id="6">
        <label>src/IR/Module/Module.h</label>
        <link refid="_module_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>src/IR/TranslateTox86/Commands.h</label>
        <link refid="_commands_8h_source"/>
      </node>
      <node id="7">
        <label>src/IR/AstToIR/AstToIR.h</label>
        <link refid="_ast_to_i_r_8h_source"/>
      </node>
      <node id="2">
        <label>src/IR/Value/Value.h</label>
        <link refid="_value_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_storage_data" prot="public">StorageData</innerclass>
    <innerclass refid="class_storage" prot="public">Storage</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_storage_8h_1a6c29de45529a1faaf6cf960d318acb1a" prot="public" static="no" strong="yes">
        <type></type>
        <name>StorageType</name>
        <enumvalue id="_storage_8h_1a6c29de45529a1faaf6cf960d318acb1aa2187e1021a911b3807cc1bea2eb1a9ca" prot="public">
          <name>Stack</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_storage_8h_1a6c29de45529a1faaf6cf960d318acb1aa0ba7583639a274c434bbe6ef797115a4" prot="public">
          <name>Register</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_storage_8h_1a6c29de45529a1faaf6cf960d318acb1aa4789f23283b3a61f858b641a1bef19a3" prot="public">
          <name>Memory</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_storage_8h_1a6c29de45529a1faaf6cf960d318acb1aacb17869fe51048b5a5c4c6106551a255" prot="public">
          <name>Constant</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_storage_8h_1a6c29de45529a1faaf6cf960d318acb1aadf56883a94a0a84a2f22fc41717de8a8" prot="public">
          <name>NoWhere</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Storage/Storage.h" line="9" column="1" bodyfile="src/IR/Storage/Storage.h" bodystart="10" bodyend="17"/>
      </memberdef>
      <memberdef kind="enum" id="_storage_8h_1ac62972ff1b21a037e56530cde67309ab" prot="public" static="no" strong="yes">
        <type></type>
        <name>VariableType</name>
        <enumvalue id="_storage_8h_1ac62972ff1b21a037e56530cde67309aba509820290d57f333403f490dde7316f4" prot="public">
          <name>Local</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_storage_8h_1ac62972ff1b21a037e56530cde67309aba4cc6684df7b4a92b1dec6fce3264fac8" prot="public">
          <name>Global</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_storage_8h_1ac62972ff1b21a037e56530cde67309aba9a438bd942f1f19e6a641028bcfb43ff" prot="public">
          <name>Temp</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_storage_8h_1ac62972ff1b21a037e56530cde67309aba055b2ea260c550b74aae5c1e537e2f81" prot="public">
          <name>NotVariable</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Storage/Storage.h" line="19" column="1" bodyfile="src/IR/Storage/Storage.h" bodystart="20" bodyend="26"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;NoCopyable.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TypeDefs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;RegistersUsage.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_context" kindref="compound">Context</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>StorageType</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>Stack,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>Register,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>Memory,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_constant" kindref="compound">Constant</ref>,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>NoWhere</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>VariableType</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>Local,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>Global,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>Temp,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>NotVariable,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO<sp/>rename<sp/>storage_data<sp/>to<sp/>storage_info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="struct_storage_data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_storage_data" kindref="compound">StorageData</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>address_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>address;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>it<sp/>is<sp/>GlobalVar,<sp/>BaseBlock<sp/>or<sp/>Function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>data_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it<sp/>is<sp/>Constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>GPRegisterNumber<sp/>reg_num;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>in<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>in<sp/>stack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="class_storage" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_storage" kindref="compound">Storage</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_no_copyable" kindref="compound">NoCopyable</ref><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><sp/><sp/>StorageType<sp/><sp/>storage_type;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><sp/><sp/>VariableType<sp/>variable_type;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_storage_data" kindref="compound">StorageData</ref><sp/><sp/>storage_data;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>storage<sp/>data<sp/>interpretation<sp/>depends<sp/>on<sp/>StorageType<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_usage;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>name_t<sp/>owner_name;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>debug<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_storage" kindref="compound">Storage</ref><sp/>(StorageType<sp/>type,<sp/>VariableType<sp/>var_type,<sp/>name_t<sp/>owner_name<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~<ref refid="class_storage" kindref="compound">Storage</ref><sp/>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_storage_type<sp/>(StorageType<sp/>type);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StorageType<sp/><sp/>get_storage_type<sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_var_type<sp/>(VariableType<sp/>var_type);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VariableType<sp/>get_var_type<sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_storage_data" kindref="compound">StorageData</ref>*<sp/>set_storage_data<sp/>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>increase_usage<sp/>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decrease_usage<sp/>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>get_usage<sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_data<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GPRegisterNumber<sp/><sp/>get_reg_num<sp/><sp/><sp/><sp/><sp/><sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_stack_offset<sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>address_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_address<sp/><sp/><sp/><sp/><sp/><sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_with_reg<sp/>(<ref refid="struct_reg" kindref="compound">Reg</ref>*<sp/>reg);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print<sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>move_to_reg<sp/>(<ref refid="struct_context" kindref="compound">Context</ref>*<sp/>ctx,<sp/><ref refid="struct_reg" kindref="compound">Reg</ref>*<sp/>dest_reg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>comment<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
    </programlisting>
    <location file="src/IR/Storage/Storage.h"/>
  </compounddef>
</doxygen>
