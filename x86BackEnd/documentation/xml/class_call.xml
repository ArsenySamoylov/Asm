<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_call" kind="class" language="C++" prot="public">
    <compoundname>Call</compoundname>
    <basecompoundref refid="class_instruction" prot="public" virt="non-virtual">Instruction</basecompoundref>
    <includes refid="_instructions_8h" local="no">Instructions.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_call_1acdb59436a393ff891c0dcc6a895ee75e" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_function" kindref="compound">Function</ref> *</type>
        <definition>const Function* Call::function</definition>
        <argsstring></argsstring>
        <name>function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Instructions/Instructions.h" line="129" column="26" bodyfile="src/IR/Instructions/Instructions.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_call_1aef8ebb78133583215bc5b571709d46cf" prot="private" static="no" mutable="no">
        <type><ref refid="class_value_arr" kindref="compound">ValueArr</ref>&lt; <ref refid="class_value" kindref="compound">Value</ref> &gt;</type>
        <definition>ValueArr&lt;Value&gt; Call::argv</definition>
        <argsstring></argsstring>
        <name>argv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Instructions/Instructions.h" line="130" column="20" bodyfile="src/IR/Instructions/Instructions.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_call_1a4c9f2884fe26546f87e2a6d1df80ec2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Call::Call</definition>
        <argsstring>(name_t name_param, const Function *function_param)</argsstring>
        <name>Call</name>
        <param>
          <type>name_t</type>
          <declname>name_param</declname>
        </param>
        <param>
          <type>const <ref refid="class_function" kindref="compound">Function</ref> *</type>
          <declname>function_param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Instructions/Instructions.h" line="133" column="9" bodyfile="src/IR/Instructions/Instruction.cpp" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_call_1a27bd3886614453da89255704e5f37d6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Call::~Call</definition>
        <argsstring>()=default</argsstring>
        <name>~Call</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Instructions/Instructions.h" line="134" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_call_1a54ed26dbf1e6cc76bff3b57c9c696e10" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Call::dump</definition>
        <argsstring>() const override</argsstring>
        <name>dump</name>
        <reimplements refid="class_instruction_1a8b89720a9e81b5034f384acf2584fe74">dump</reimplements>
        <briefdescription>
<para>Print <ref refid="class_value" kindref="compound">Value</ref> in human-readable format to file DUMP. </para>
        </briefdescription>
        <detaileddescription>
<para>Print <ref refid="class_value" kindref="compound">Value</ref> in human-readable format to file DUMP. PRINT_NEW_LINES regulates if printed <ref refid="class_value" kindref="compound">Value</ref> generates extra new line chars </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Instructions/Instructions.h" line="136" column="24" bodyfile="src/IR/DumpIR/DumpIR.cpp" bodystart="222" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="class_call_1a4b586a9f4be19d3700b48c9211d4ce29" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>InstructionType</type>
        <definition>InstructionType Call::get_instr_type</definition>
        <argsstring>() const override</argsstring>
        <name>get_instr_type</name>
        <reimplements refid="class_instruction_1a5794ed6986bad233a819137af502519a">get_instr_type</reimplements>
        <briefdescription>
<para>Get instr_type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>debug purpose only </para>
</simplesect>
<simplesect kind="return"><para>InstructionType </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Instructions/Instructions.h" line="137" column="24" bodyfile="src/IR/Instructions/Instruction.cpp" bodystart="98" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_call_1a559c642d08f5d45404a4ab550714a91b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Call::translate_x86</definition>
        <argsstring>(Context *ctx) const override</argsstring>
        <name>translate_x86</name>
        <reimplements refid="class_instruction_1a490849f5712f281da374de8de683069b">translate_x86</reimplements>
        <param>
          <type><ref refid="struct_context" kindref="compound">Context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Translate <ref refid="class_value" kindref="compound">Value</ref> to x86 code. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Instructions/Instructions.h" line="139" column="13" bodyfile="src/IR/TranslateTox86/TranslateIRTox86.cpp" bodystart="439" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="class_call_1a9839f2f2c88928629f80bd2df0f49cd3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Call::set_storage</definition>
        <argsstring>() const override</argsstring>
        <name>set_storage</name>
        <reimplements refid="class_instruction_1a4d0dfb9af1468c0ad0c5e3b0b39df7ac">set_storage</reimplements>
        <briefdescription>
<para>Set the <emphasis>storage</emphasis> </para>
        </briefdescription>
        <detaileddescription>
<para>This functions sets <emphasis>storage_type</emphasis> for value In <ref refid="class_function" kindref="compound">Function</ref> and <ref refid="class_base_block" kindref="compound">BaseBlock</ref> this function call this this function for all objects from their ValueArr&lt;&gt; members <simplesect kind="note"><para>for <ref refid="class_constant" kindref="compound">Constant</ref> this function only checks <emphasis>storage_type</emphasis> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Instructions/Instructions.h" line="140" column="13" bodyfile="src/IR/Storage/Storage.cpp" bodystart="199" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="class_call_1a4120c1a4162254cef3b9fec9a174868a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_value_arr" kindref="compound">ValueArr</ref>&lt; <ref refid="class_value" kindref="compound">Value</ref> &gt; *</type>
        <definition>ValueArr&lt; Value &gt; * Call::get_argv</definition>
        <argsstring>()</argsstring>
        <name>get_argv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Instructions/Instructions.h" line="142" column="17" bodyfile="src/IR/Instructions/Instruction.cpp" bodystart="105" bodyend="105"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_instruction" kindref="compound">Instruction</ref> to call another function. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Instruction</label>
        <link refid="class_instruction"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Call</label>
        <link refid="class_call"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>NoCopyable</label>
        <link refid="class_no_copyable"/>
      </node>
      <node id="3">
        <label>Value</label>
        <link refid="class_value"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>Storage</label>
        <link refid="class_storage"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Instruction</label>
        <link refid="class_instruction"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Call</label>
        <link refid="class_call"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>NoCopyable</label>
        <link refid="class_no_copyable"/>
      </node>
      <node id="3">
        <label>Value</label>
        <link refid="class_value"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>storage</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/IR/Instructions/Instructions.h" line="126" column="1" bodyfile="src/IR/Instructions/Instructions.h" bodystart="127" bodyend="143"/>
    <listofallmembers>
      <member refid="class_call_1aef8ebb78133583215bc5b571709d46cf" prot="private" virt="non-virtual"><scope>Call</scope><name>argv</name></member>
      <member refid="class_call_1a4c9f2884fe26546f87e2a6d1df80ec2d" prot="public" virt="non-virtual"><scope>Call</scope><name>Call</name></member>
      <member refid="class_call_1a54ed26dbf1e6cc76bff3b57c9c696e10" prot="public" virt="virtual"><scope>Call</scope><name>dump</name></member>
      <member refid="class_call_1acdb59436a393ff891c0dcc6a895ee75e" prot="private" virt="non-virtual"><scope>Call</scope><name>function</name></member>
      <member refid="class_call_1a4120c1a4162254cef3b9fec9a174868a" prot="public" virt="non-virtual"><scope>Call</scope><name>get_argv</name></member>
      <member refid="class_call_1a4b586a9f4be19d3700b48c9211d4ce29" prot="public" virt="virtual"><scope>Call</scope><name>get_instr_type</name></member>
      <member refid="class_value_1a86a3eef266571401ec6c189abaaf106d" prot="public" virt="non-virtual"><scope>Call</scope><name>get_name</name></member>
      <member refid="class_value_1ad8439f42b7727f74160f4d4233300b73" prot="public" virt="non-virtual"><scope>Call</scope><name>get_storage</name></member>
      <member refid="class_instruction_1a1834df9dd269df28fd946671d29e1e0d" prot="public" virt="virtual"><scope>Call</scope><name>get_type</name></member>
      <member refid="class_instruction_1a84d2688e801420c6d6df3aec3e33fef7" prot="public" virt="non-virtual"><scope>Call</scope><name>Instruction</name></member>
      <member refid="class_value_1a62d78645b07ba16cce8dbaec863b13ab" prot="protected" virt="non-virtual"><scope>Call</scope><name>name</name></member>
      <member refid="class_no_copyable_1ade9c96e3484b122001dd4f42e6c28047" prot="public" virt="non-virtual"><scope>Call</scope><name>NoCopyable</name></member>
      <member refid="class_no_copyable_1a00d3c509a77e0c5e25d92714551c54d1" prot="public" virt="non-virtual"><scope>Call</scope><name>NoCopyable</name></member>
      <member refid="class_no_copyable_1a976985434b31929677d366614d803157" prot="public" virt="non-virtual"><scope>Call</scope><name>operator=</name></member>
      <member refid="class_value_1ab68f4bce225da0bdba8085c85b90ca0f" prot="public" virt="non-virtual"><scope>Call</scope><name>put_to_reg</name></member>
      <member refid="class_call_1a9839f2f2c88928629f80bd2df0f49cd3" prot="public" virt="virtual"><scope>Call</scope><name>set_storage</name></member>
      <member refid="class_value_1a3cb086c23a5174753c024a49ed180ab3" prot="protected" virt="non-virtual"><scope>Call</scope><name>storage</name></member>
      <member refid="class_call_1a559c642d08f5d45404a4ab550714a91b" prot="public" virt="virtual"><scope>Call</scope><name>translate_x86</name></member>
      <member refid="class_instruction_1ab4921a8785d375412dfb1505a7265926" prot="protected" virt="non-virtual"><scope>Call</scope><name>type</name></member>
      <member refid="class_value_1a34b3fd7da89c8da39158746671fff0f6" prot="public" virt="non-virtual"><scope>Call</scope><name>Value</name></member>
      <member refid="class_call_1a27bd3886614453da89255704e5f37d6d" prot="public" virt="non-virtual"><scope>Call</scope><name>~Call</name></member>
      <member refid="class_instruction_1abb33fefaac04fc6794349ec8a6d68304" prot="public" virt="non-virtual"><scope>Call</scope><name>~Instruction</name></member>
      <member refid="class_no_copyable_1a6704c3bd291a78054b26b83a63af0756" prot="public" virt="virtual"><scope>Call</scope><name>~NoCopyable</name></member>
      <member refid="class_value_1a71443c24b0e8b94a71c3315b11c30e98" prot="public" virt="virtual"><scope>Call</scope><name>~Value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
