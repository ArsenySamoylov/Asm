<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_lang_utils_8h" kind="file" language="C++">
    <compoundname>LangUtils.h</compoundname>
    <includes refid="_program_8h" local="yes">Program.h</includes>
    <includedby refid="_ast_to_i_r_8cpp" local="yes">src/IR/AstToIR/AstToIR.cpp</includedby>
    <includedby refid="_put_std_8cpp" local="yes">src/Legacy/Common/StandartAWP/PutStd.cpp</includedby>
    <includedby refid="_graph_vis_8cpp" local="yes">src/Legacy/Common/Utils/GraphVis.cpp</includedby>
    <includedby refid="_lang_utils_8cpp" local="yes">src/Legacy/Common/Utils/LangUtils.cpp</includedby>
    <includedby refid="_translate_to_asm_8cpp" local="yes">src/Legacy/TranslateToAsm.cpp</includedby>
    <incdepgraph>
      <node id="6">
        <label>Tabels.h</label>
        <link refid="_tabels_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/Legacy/Common/Utils/LangUtils.h</label>
        <link refid="_lang_utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="4">
        <label>NameTable.h</label>
        <link refid="_name_table_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Token.h</label>
        <link refid="_token_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Program.h</label>
        <link refid="_program_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_lang_utils_8h_1a61b090999d3dd93e5424072b7cb5cdec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PrintToken</definition>
        <argsstring>(const Token *const token, const char **string_arr=NULL)</argsstring>
        <name>PrintToken</name>
        <param>
          <type>const <ref refid="struct_token" kindref="compound">Token</ref> *const</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>string_arr</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Legacy/Common/Utils/LangUtils.h" line="5" column="6" bodyfile="src/Legacy/Common/Utils/LangUtils.cpp" bodystart="10" bodyend="41" declfile="src/Legacy/Common/Utils/LangUtils.h" declline="5" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_lang_utils_8h_1a9752fef034590adcb09c7aaeea827af1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LogToken</definition>
        <argsstring>(const Token *const token, const char *name, const char **STRING_ARR=NULL)</argsstring>
        <name>LogToken</name>
        <param>
          <type>const <ref refid="struct_token" kindref="compound">Token</ref> *const</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>STRING_ARR</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Legacy/Common/Utils/LangUtils.h" line="7" column="6" bodyfile="src/Legacy/Common/Utils/LangUtils.cpp" bodystart="43" bodyend="81" declfile="src/Legacy/Common/Utils/LangUtils.h" declline="7" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Program.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PrintToken<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_token" kindref="compound">Token</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>string_arr<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LogToken<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_token" kindref="compound">Token</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>token,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>STRING_ARR<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>$LOG_TOKEN(token,<sp/>...)<sp/>LogToken(token,<sp/>#token<sp/>__VA_OPT__(,)<sp/>__VA_ARGS__);</highlight></codeline>
    </programlisting>
    <location file="src/Legacy/Common/Utils/LangUtils.h"/>
  </compounddef>
</doxygen>
