<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_value" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Value</compoundname>
    <basecompoundref refid="class_no_copyable" prot="public" virt="non-virtual">NoCopyable</basecompoundref>
    <derivedcompoundref refid="class_base_block" prot="public" virt="non-virtual">BaseBlock</derivedcompoundref>
    <derivedcompoundref refid="class_constant" prot="public" virt="non-virtual">Constant</derivedcompoundref>
    <derivedcompoundref refid="class_function" prot="public" virt="non-virtual">Function</derivedcompoundref>
    <derivedcompoundref refid="class_global_var" prot="public" virt="non-virtual">GlobalVar</derivedcompoundref>
    <derivedcompoundref refid="class_instruction" prot="public" virt="non-virtual">Instruction</derivedcompoundref>
    <includes refid="_value_8h" local="no">Value.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_value_1a0353abaaf3f5a0bf5a01c8daad238449" prot="protected" static="no" mutable="no">
        <type>enum ValueType</type>
        <definition>enum ValueType Value::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Value/Value.h" line="122" column="14" bodyfile="src/IR/Value/Value.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_value_1a62d78645b07ba16cce8dbaec863b13ab" prot="protected" static="no" mutable="no">
        <type>const name_t</type>
        <definition>const name_t Value::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Value/Value.h" line="33" column="22" bodyfile="src/IR/Value/Value.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_value_1a3cb086c23a5174753c024a49ed180ab3" prot="protected" static="no" mutable="yes">
        <type><ref refid="class_storage" kindref="compound">Storage</ref></type>
        <definition>Storage Value::storage</definition>
        <argsstring></argsstring>
        <name>storage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Value/Value.h" line="35" column="25" bodyfile="src/IR/Value/Value.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_value_1a34b3fd7da89c8da39158746671fff0f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Value::Value</definition>
        <argsstring>(ValueType type_param, name_t name_param)</argsstring>
        <name>Value</name>
        <param>
          <type>ValueType</type>
          <declname>type_param</declname>
        </param>
        <param>
          <type>name_t</type>
          <declname>name_param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Value/Value.h" line="38" column="18" bodyfile="src/IR/Value/Value.cpp" bodystart="12" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="class_value_1a71443c24b0e8b94a71c3315b11c30e98" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Value::~Value</definition>
        <argsstring>()=default</argsstring>
        <name>~Value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Value/Value.h" line="39" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_value_1a86a3eef266571401ec6c189abaaf106d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>name_t</type>
        <definition>name_t Value::get_name</definition>
        <argsstring>() const</argsstring>
        <name>get_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Value/Value.h" line="41" column="16" bodyfile="src/IR/Value/Value.cpp" bodystart="18" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="class_value_1ad58adc30ecd6e33f8344b76bb94ad9a9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Value::dump</definition>
        <argsstring>() const =0</argsstring>
        <name>dump</name>
        <reimplementedby refid="class_store_1af9f11c9b5e26c934fdc8d1cdf34069de">dump</reimplementedby>
        <reimplementedby refid="class_load_1a2ffe39a4cc70a22934d4619754d8da5b">dump</reimplementedby>
        <reimplementedby refid="class_branch_1a14d5e915388e5a1a63b6ff33ba8e942f">dump</reimplementedby>
        <reimplementedby refid="class_call_1a54ed26dbf1e6cc76bff3b57c9c696e10">dump</reimplementedby>
        <reimplementedby refid="struct_return_1ac88922f7e3bab1ece0eec23eefe4726b">dump</reimplementedby>
        <reimplementedby refid="struct_operator_1ab38ae88a168aa17a8227f5598a5a216a">dump</reimplementedby>
        <reimplementedby refid="class_base_block_1ab90a362d8bcd71c015102a5965843d79">dump</reimplementedby>
        <reimplementedby refid="class_constant_1afdecb02c8d897255c1c8884c6fa607a0">dump</reimplementedby>
        <reimplementedby refid="class_global_var_1a296cd305d43993d19d262c98f6c158cc">dump</reimplementedby>
        <reimplementedby refid="class_function_1aef307ac19141a13c5d3cbe9d6fad6551">dump</reimplementedby>
        <reimplementedby refid="class_instruction_1a8b89720a9e81b5034f384acf2584fe74">dump</reimplementedby>
        <briefdescription>
<para>Print <ref refid="class_value" kindref="compound">Value</ref> in human-readable format to file DUMP. </para>
        </briefdescription>
        <detaileddescription>
<para>Print <ref refid="class_value" kindref="compound">Value</ref> in human-readable format to file DUMP. PRINT_NEW_LINES regulates if printed <ref refid="class_value" kindref="compound">Value</ref> generates extra new line chars </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Value/Value.h" line="49" column="27"/>
      </memberdef>
      <memberdef kind="function" id="class_value_1a81566c2e0f8d9c81fe18ad4ae251e471" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>ValueType</type>
        <definition>virtual ValueType Value::get_type</definition>
        <argsstring>() const =0</argsstring>
        <name>get_type</name>
        <reimplementedby refid="class_base_block_1ab680e5829bf197f7828b6261ac62e5f7">get_type</reimplementedby>
        <reimplementedby refid="class_constant_1a6abd835079904cba7f9a4271475facc1">get_type</reimplementedby>
        <reimplementedby refid="class_global_var_1a568dd05f7dcd53d1533b143891bb6fc5">get_type</reimplementedby>
        <reimplementedby refid="class_function_1a6aa5d64a586011de3b15a82350538ae8">get_type</reimplementedby>
        <reimplementedby refid="class_instruction_1a1834df9dd269df28fd946671d29e1e0d">get_type</reimplementedby>
        <briefdescription>
<para>Get <ref refid="class_value" kindref="compound">Value</ref> type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>debug purpose only </para>
</simplesect>
<simplesect kind="return"><para>ValueType </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Value/Value.h" line="57" column="27"/>
      </memberdef>
      <memberdef kind="function" id="class_value_1a5c80febbb8171e7c60cdd1598c47fe53" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Value::translate_x86</definition>
        <argsstring>(Context *ctx) const =0</argsstring>
        <name>translate_x86</name>
        <reimplementedby refid="class_store_1a356cbb050d01381df30a3e135dfd4e3f">translate_x86</reimplementedby>
        <reimplementedby refid="class_load_1a33776e091c7c4f20fa15a03c367c9acf">translate_x86</reimplementedby>
        <reimplementedby refid="class_branch_1a3139dda417192232452f7e330fe497dc">translate_x86</reimplementedby>
        <reimplementedby refid="class_call_1a559c642d08f5d45404a4ab550714a91b">translate_x86</reimplementedby>
        <reimplementedby refid="struct_return_1aa83609e0489201eead089f31bdb4216d">translate_x86</reimplementedby>
        <reimplementedby refid="struct_operator_1a980a9871f1ae7b2091a0893acee001c6">translate_x86</reimplementedby>
        <reimplementedby refid="class_base_block_1ace2f438ad119bd610183103a39131101">translate_x86</reimplementedby>
        <reimplementedby refid="class_constant_1a7308dce78679606aa72467fe63de5426">translate_x86</reimplementedby>
        <reimplementedby refid="class_global_var_1a07c47abeb2f0c4c18f2abaf2aca26cff">translate_x86</reimplementedby>
        <reimplementedby refid="class_function_1afa24b0a4286dffad077c985708b97cbd">translate_x86</reimplementedby>
        <reimplementedby refid="class_instruction_1a490849f5712f281da374de8de683069b">translate_x86</reimplementedby>
        <param>
          <type><ref refid="struct_context" kindref="compound">Context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Translate <ref refid="class_value" kindref="compound">Value</ref> to x86 code. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Value/Value.h" line="64" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_value_1ab68f4bce225da0bdba8085c85b90ca0f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GPRegisterNumber</type>
        <definition>GPRegisterNumber Value::put_to_reg</definition>
        <argsstring>(Context *ctx) const</argsstring>
        <name>put_to_reg</name>
        <param>
          <type><ref refid="struct_context" kindref="compound">Context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Puts <ref refid="class_value" kindref="compound">Value</ref> to reg. </para>
        </briefdescription>
        <detaileddescription>
<para>Depending on <emphasis>storage</emphasis> field this functions puts <ref refid="class_value" kindref="compound">Value</ref> to register <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GPRegisterNumber </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Value/Value.h" line="73" column="26" bodyfile="src/IR/TranslateTox86/TranslateIRTox86.cpp" bodystart="19" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_value_1a8bc56c2cc9d6cb4aade7084277d9df26" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Value::set_storage</definition>
        <argsstring>() const =0</argsstring>
        <name>set_storage</name>
        <reimplementedby refid="class_store_1ab07b234554d2c9ae8b7cd758077c9c1f">set_storage</reimplementedby>
        <reimplementedby refid="class_load_1a1ca0f3a03d0885c059ca3516e9519e42">set_storage</reimplementedby>
        <reimplementedby refid="class_branch_1a5612f299d00d99a2499c961bb739aec5">set_storage</reimplementedby>
        <reimplementedby refid="class_call_1a9839f2f2c88928629f80bd2df0f49cd3">set_storage</reimplementedby>
        <reimplementedby refid="struct_return_1ab83a398c3a53e45be73a43534a6e5e19">set_storage</reimplementedby>
        <reimplementedby refid="struct_operator_1a0e2f9342c0bbdaaee61db08fe34b9787">set_storage</reimplementedby>
        <reimplementedby refid="class_base_block_1aaf4bb16294f85cab75262a9fc80ca83c">set_storage</reimplementedby>
        <reimplementedby refid="class_constant_1a68fdf766ec2a3afb147835ffc6f9b12f">set_storage</reimplementedby>
        <reimplementedby refid="class_global_var_1a2dd9e26d905287e8112b0a3e877326de">set_storage</reimplementedby>
        <reimplementedby refid="class_function_1a4e01eeef439880175f203f92f223213e">set_storage</reimplementedby>
        <reimplementedby refid="class_instruction_1a4d0dfb9af1468c0ad0c5e3b0b39df7ac">set_storage</reimplementedby>
        <briefdescription>
<para>Set the <emphasis>storage</emphasis> </para>
        </briefdescription>
        <detaileddescription>
<para>This functions sets <emphasis>storage_type</emphasis> for value In <ref refid="class_function" kindref="compound">Function</ref> and <ref refid="class_base_block" kindref="compound">BaseBlock</ref> this function call this this function for all objects from their ValueArr&lt;&gt; members <simplesect kind="note"><para>for <ref refid="class_constant" kindref="compound">Constant</ref> this function only checks <emphasis>storage_type</emphasis> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Value/Value.h" line="83" column="24"/>
      </memberdef>
      <memberdef kind="function" id="class_value_1ad8439f42b7727f74160f4d4233300b73" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_storage" kindref="compound">Storage</ref> *</type>
        <definition>Storage * Value::get_storage</definition>
        <argsstring>() const</argsstring>
        <name>get_storage</name>
        <briefdescription>
<para>Get the storage member. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Storage* </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Value/Value.h" line="90" column="23" bodyfile="src/IR/Value/Value.cpp" bodystart="19" bodyend="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Abstract class for IR object. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>Function</label>
        <link refid="class_function"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>GlobalVar</label>
        <link refid="class_global_var"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>Operator</label>
        <link refid="struct_operator"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>Load</label>
        <link refid="class_load"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Instruction</label>
        <link refid="class_instruction"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>Call</label>
        <link refid="class_call"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BaseBlock</label>
        <link refid="class_base_block"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>Branch</label>
        <link refid="class_branch"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>NoCopyable</label>
        <link refid="class_no_copyable"/>
      </node>
      <node id="12">
        <label>Return</label>
        <link refid="struct_return"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Constant</label>
        <link refid="class_constant"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>Store</label>
        <link refid="class_store"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Value</label>
        <link refid="class_value"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>Storage</label>
        <link refid="class_storage"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>NoCopyable</label>
        <link refid="class_no_copyable"/>
      </node>
      <node id="1">
        <label>Value</label>
        <link refid="class_value"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>storage</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/IR/Value/Value.h" line="29" column="1" bodyfile="src/IR/Value/Value.h" bodystart="30" bodyend="91"/>
    <listofallmembers>
      <member refid="class_value_1ad58adc30ecd6e33f8344b76bb94ad9a9" prot="public" virt="pure-virtual"><scope>Value</scope><name>dump</name></member>
      <member refid="class_value_1a86a3eef266571401ec6c189abaaf106d" prot="public" virt="non-virtual"><scope>Value</scope><name>get_name</name></member>
      <member refid="class_value_1ad8439f42b7727f74160f4d4233300b73" prot="public" virt="non-virtual"><scope>Value</scope><name>get_storage</name></member>
      <member refid="class_value_1a81566c2e0f8d9c81fe18ad4ae251e471" prot="public" virt="pure-virtual"><scope>Value</scope><name>get_type</name></member>
      <member refid="class_value_1a62d78645b07ba16cce8dbaec863b13ab" prot="protected" virt="non-virtual"><scope>Value</scope><name>name</name></member>
      <member refid="class_no_copyable_1ade9c96e3484b122001dd4f42e6c28047" prot="public" virt="non-virtual"><scope>Value</scope><name>NoCopyable</name></member>
      <member refid="class_no_copyable_1a00d3c509a77e0c5e25d92714551c54d1" prot="public" virt="non-virtual"><scope>Value</scope><name>NoCopyable</name></member>
      <member refid="class_no_copyable_1a976985434b31929677d366614d803157" prot="public" virt="non-virtual"><scope>Value</scope><name>operator=</name></member>
      <member refid="class_value_1ab68f4bce225da0bdba8085c85b90ca0f" prot="public" virt="non-virtual"><scope>Value</scope><name>put_to_reg</name></member>
      <member refid="class_value_1a8bc56c2cc9d6cb4aade7084277d9df26" prot="public" virt="pure-virtual"><scope>Value</scope><name>set_storage</name></member>
      <member refid="class_value_1a3cb086c23a5174753c024a49ed180ab3" prot="protected" virt="non-virtual"><scope>Value</scope><name>storage</name></member>
      <member refid="class_value_1a5c80febbb8171e7c60cdd1598c47fe53" prot="public" virt="pure-virtual"><scope>Value</scope><name>translate_x86</name></member>
      <member refid="class_value_1a0353abaaf3f5a0bf5a01c8daad238449" prot="protected" virt="non-virtual"><scope>Value</scope><name>type</name></member>
      <member refid="class_value_1a34b3fd7da89c8da39158746671fff0f6" prot="public" virt="non-virtual"><scope>Value</scope><name>Value</name></member>
      <member refid="class_no_copyable_1a6704c3bd291a78054b26b83a63af0756" prot="public" virt="virtual"><scope>Value</scope><name>~NoCopyable</name></member>
      <member refid="class_value_1a71443c24b0e8b94a71c3315b11c30e98" prot="public" virt="virtual"><scope>Value</scope><name>~Value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
