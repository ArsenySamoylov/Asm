<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_binary_tree_8h" kind="file" language="C++">
    <compoundname>BinaryTree.h</compoundname>
    <includedby refid="_data_base_8h" local="yes">ATC/Trees/Akinator/DataBase.h</includedby>
    <invincdepgraph>
      <node id="1">
        <label>ATC/Trees/Akinator/BinaryTree.h</label>
        <link refid="_binary_tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ATC/Trees/Akinator/DataBase.h</label>
        <link refid="_data_base_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_node" prot="public">Node</innerclass>
    <innerclass refid="struct_binary_tree" prot="public">BinaryTree</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_binary_tree_8h_1ad51608f45248c413ed04802d387225a4" prot="public" static="no">
        <type>char</type>
        <definition>typedef char elemen_t</definition>
        <argsstring></argsstring>
        <name>elemen_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/Trees/Akinator/BinaryTree.h" line="3" column="14" bodyfile="ATC/Trees/Akinator/BinaryTree.h" bodystart="3" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_binary_tree_8h_1a5de0325d8153dec907a2e8a9f598fa7c" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int DATA_SIZE</definition>
        <argsstring></argsstring>
        <name>DATA_SIZE</name>
        <initializer>= 256</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/Trees/Akinator/BinaryTree.h" line="4" column="11" bodyfile="ATC/Trees/Akinator/BinaryTree.h" bodystart="4" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_binary_tree_8h_1a398ed8d86fefccabbf2b042f82cbd97f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ctor</definition>
        <argsstring>(BinaryTree *tree)</argsstring>
        <name>Ctor</name>
        <param>
          <type><ref refid="struct_binary_tree" kindref="compound">BinaryTree</ref> *</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/Trees/Akinator/BinaryTree.h" line="23" column="5" declfile="ATC/Trees/Akinator/BinaryTree.h" declline="23" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_binary_tree_8h_1aa96b930c88db2dbdd34aefa139dec33f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Dtor</definition>
        <argsstring>(BinaryTree *tree)</argsstring>
        <name>Dtor</name>
        <param>
          <type><ref refid="struct_binary_tree" kindref="compound">BinaryTree</ref> *</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/Trees/Akinator/BinaryTree.h" line="24" column="5" declfile="ATC/Trees/Akinator/BinaryTree.h" declline="24" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_binary_tree_8h_1a7dd7d3a801c153a9a3e1017cb3d1d3cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int AddChildren</definition>
        <argsstring>(Node *node)</argsstring>
        <name>AddChildren</name>
        <param>
          <type><ref refid="struct_node" kindref="compound">Node</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/Trees/Akinator/BinaryTree.h" line="26" column="5" declfile="ATC/Trees/Akinator/BinaryTree.h" declline="26" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>elemen_t;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DATA_SIZE<sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="struct_node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_node" kindref="compound">Node</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_node" kindref="compound">Node</ref>*<sp/><sp/><sp/><sp/>parent;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>elemen_t<sp/>data[DATA_SIZE]<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_node" kindref="compound">Node</ref>*<sp/><sp/>first_child;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_node" kindref="compound">Node</ref>*<sp/>second_child;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="struct_binary_tree" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_binary_tree" kindref="compound">BinaryTree</ref></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_node" kindref="compound">Node</ref>*<sp/>root;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status;<sp/></highlight><highlight class="comment">//<sp/>=<sp/>UNITIALIZED;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ctor<sp/>(<ref refid="struct_binary_tree" kindref="compound">BinaryTree</ref>*<sp/>tree);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Dtor<sp/>(<ref refid="struct_binary_tree" kindref="compound">BinaryTree</ref>*<sp/>tree);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>AddChildren<sp/>(<ref refid="struct_node" kindref="compound">Node</ref>*<sp/>node);</highlight></codeline>
    </programlisting>
    <location file="ATC/Trees/Akinator/BinaryTree.h"/>
  </compounddef>
</doxygen>
