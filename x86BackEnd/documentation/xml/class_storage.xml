<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_storage" kind="class" language="C++" prot="public">
    <compoundname>Storage</compoundname>
    <basecompoundref refid="class_no_copyable" prot="public" virt="non-virtual">NoCopyable</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_storage_1a39e67d8d831642be207909643794a58b" prot="private" static="no" mutable="no">
        <type>enum StorageType</type>
        <definition>enum StorageType Storage::storage_type</definition>
        <argsstring></argsstring>
        <name>storage_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Storage/Storage.h" line="34" column="12" bodyfile="src/IR/Storage/Storage.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_storage_1a8d8c45ec6286d706f2a303f6d826256b" prot="private" static="no" mutable="no">
        <type>enum VariableType</type>
        <definition>enum VariableType Storage::variable_type</definition>
        <argsstring></argsstring>
        <name>variable_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Storage/Storage.h" line="34" column="12" bodyfile="src/IR/Storage/Storage.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_storage_1af0576a6d2e294836b665af521855efc7" prot="private" static="no" mutable="no">
        <type>struct <ref refid="struct_storage_data" kindref="compound">StorageData</ref></type>
        <definition>struct StorageData Storage::storage_data</definition>
        <argsstring></argsstring>
        <name>storage_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Storage/Storage.h" line="34" column="12" bodyfile="src/IR/Storage/Storage.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_storage_1ae1871cf772ec0a47848e1fa4c8b2523f" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Storage::n_usage</definition>
        <argsstring></argsstring>
        <name>n_usage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Storage/Storage.h" line="44" column="16" bodyfile="src/IR/Storage/Storage.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_storage_1ad2a02dd3afb0dfcad9aec8e7937cae33" prot="private" static="no" mutable="no">
        <type>const name_t</type>
        <definition>const name_t Storage::owner_name</definition>
        <argsstring></argsstring>
        <name>owner_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Storage/Storage.h" line="46" column="22" bodyfile="src/IR/Storage/Storage.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_storage_1afafa9906b0dfb206bd3439b00c015b5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Storage::Storage</definition>
        <argsstring>(StorageType type, VariableType var_type, name_t owner_name=NULL)</argsstring>
        <name>Storage</name>
        <param>
          <type>StorageType</type>
          <declname>type</declname>
        </param>
        <param>
          <type>VariableType</type>
          <declname>var_type</declname>
        </param>
        <param>
          <type>name_t</type>
          <declname>owner_name</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Storage/Storage.h" line="49" column="10" bodyfile="src/IR/Storage/Storage.cpp" bodystart="10" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="class_storage_1abe04a4c50447d0127247d9401857f167" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Storage::~Storage</definition>
        <argsstring>()=default</argsstring>
        <name>~Storage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Storage/Storage.h" line="50" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_storage_1a7ea4bbbf207a2d9a0dcb1a0ba570f5d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Storage::set_storage_type</definition>
        <argsstring>(StorageType type)</argsstring>
        <name>set_storage_type</name>
        <param>
          <type>StorageType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Storage/Storage.h" line="52" column="22" bodyfile="src/IR/Storage/Storage.cpp" bodystart="18" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="class_storage_1aa98cab1019b84afee59b82948bfe9eef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>StorageType</type>
        <definition>StorageType Storage::get_storage_type</definition>
        <argsstring>() const</argsstring>
        <name>get_storage_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Storage/Storage.h" line="53" column="22" bodyfile="src/IR/Storage/Storage.cpp" bodystart="21" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="class_storage_1a4e753b01678f4d3523794870370ec089" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Storage::set_var_type</definition>
        <argsstring>(VariableType var_type)</argsstring>
        <name>set_var_type</name>
        <param>
          <type>VariableType</type>
          <declname>var_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Storage/Storage.h" line="55" column="22" bodyfile="src/IR/Storage/Storage.cpp" bodystart="24" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_storage_1ae9e19e025adbbfdce38dce5534020073" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>VariableType</type>
        <definition>VariableType Storage::get_var_type</definition>
        <argsstring>() const</argsstring>
        <name>get_var_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Storage/Storage.h" line="56" column="22" bodyfile="src/IR/Storage/Storage.cpp" bodystart="27" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_storage_1a4013000b1d16ce8a36f5c21170c8b1a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_storage_data" kindref="compound">StorageData</ref> *</type>
        <definition>StorageData * Storage::set_storage_data</definition>
        <argsstring>()</argsstring>
        <name>set_storage_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Storage/Storage.h" line="58" column="21" bodyfile="src/IR/Storage/Storage.cpp" bodystart="30" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_storage_1a610e29b3ab2bad5f711263ec1d3e0edc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Storage::increase_usage</definition>
        <argsstring>()</argsstring>
        <name>increase_usage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Storage/Storage.h" line="60" column="14" bodyfile="src/IR/Storage/Storage.cpp" bodystart="33" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_storage_1a2716097a6f34afbffd00f0b04fabccdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Storage::decrease_usage</definition>
        <argsstring>()</argsstring>
        <name>decrease_usage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Storage/Storage.h" line="61" column="14" bodyfile="src/IR/Storage/Storage.cpp" bodystart="44" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_storage_1a33328eae92797ca0321649c17fd55461" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Storage::get_usage</definition>
        <argsstring>() const</argsstring>
        <name>get_usage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Storage/Storage.h" line="62" column="16" bodyfile="src/IR/Storage/Storage.cpp" bodystart="59" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_storage_1ad31e895e0ca778ba6e1e9466abe94f4f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>data_t</type>
        <definition>data_t Storage::get_data</definition>
        <argsstring>() const</argsstring>
        <name>get_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Storage/Storage.h" line="64" column="27" bodyfile="src/IR/Storage/Storage.cpp" bodystart="65" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_storage_1a11bffb6316a9598f52a94d9e9fdbe016" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GPRegisterNumber</type>
        <definition>GPRegisterNumber Storage::get_reg_num</definition>
        <argsstring>() const</argsstring>
        <name>get_reg_num</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Storage/Storage.h" line="65" column="27" bodyfile="src/IR/Storage/Storage.cpp" bodystart="71" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_storage_1ad4eceb225276bdd1c7cc87180c34eee2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Storage::get_stack_offset</definition>
        <argsstring>() const</argsstring>
        <name>get_stack_offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Storage/Storage.h" line="66" column="27" bodyfile="src/IR/Storage/Storage.cpp" bodystart="77" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_storage_1a6fe5a5bab571dba9231e55bf5424c5d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>address_t</type>
        <definition>address_t Storage::get_address</definition>
        <argsstring>() const</argsstring>
        <name>get_address</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Storage/Storage.h" line="67" column="27" bodyfile="src/IR/Storage/Storage.cpp" bodystart="83" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_storage_1a2badd5291fcf1f21d3182a5f4e73533f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Storage::set_with_reg</definition>
        <argsstring>(Reg *reg)</argsstring>
        <name>set_with_reg</name>
        <param>
          <type><ref refid="struct_reg" kindref="compound">Reg</ref> *</type>
          <declname>reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Storage/Storage.h" line="69" column="14" bodyfile="src/IR/Storage/Storage.cpp" bodystart="89" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_storage_1a491713e42e55922412c64ea9d35120dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Storage::print</definition>
        <argsstring>() const</argsstring>
        <name>print</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Storage/Storage.h" line="70" column="14" bodyfile="src/IR/Storage/Storage.cpp" bodystart="102" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_storage_1a381256ebbb1a1a926e9dbcfd86d39c0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Storage::move_to_reg</definition>
        <argsstring>(Context *ctx, Reg *dest_reg, const char *comment=NULL)</argsstring>
        <name>move_to_reg</name>
        <param>
          <type><ref refid="struct_context" kindref="compound">Context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="struct_reg" kindref="compound">Reg</ref> *</type>
          <declname>dest_reg</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>comment</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Storage/Storage.h" line="72" column="14" bodyfile="src/IR/TranslateTox86/TranslateIRTox86.cpp" bodystart="45" bodyend="79"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Storage</label>
        <link refid="class_storage"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>NoCopyable</label>
        <link refid="class_no_copyable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Storage</label>
        <link refid="class_storage"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>NoCopyable</label>
        <link refid="class_no_copyable"/>
      </node>
    </collaborationgraph>
    <location file="src/IR/Storage/Storage.h" line="37" column="1" bodyfile="src/IR/Storage/Storage.h" bodystart="38" bodyend="73"/>
    <listofallmembers>
      <member refid="class_storage_1a2716097a6f34afbffd00f0b04fabccdc" prot="public" virt="non-virtual"><scope>Storage</scope><name>decrease_usage</name></member>
      <member refid="class_storage_1a6fe5a5bab571dba9231e55bf5424c5d9" prot="public" virt="non-virtual"><scope>Storage</scope><name>get_address</name></member>
      <member refid="class_storage_1ad31e895e0ca778ba6e1e9466abe94f4f" prot="public" virt="non-virtual"><scope>Storage</scope><name>get_data</name></member>
      <member refid="class_storage_1a11bffb6316a9598f52a94d9e9fdbe016" prot="public" virt="non-virtual"><scope>Storage</scope><name>get_reg_num</name></member>
      <member refid="class_storage_1ad4eceb225276bdd1c7cc87180c34eee2" prot="public" virt="non-virtual"><scope>Storage</scope><name>get_stack_offset</name></member>
      <member refid="class_storage_1aa98cab1019b84afee59b82948bfe9eef" prot="public" virt="non-virtual"><scope>Storage</scope><name>get_storage_type</name></member>
      <member refid="class_storage_1a33328eae92797ca0321649c17fd55461" prot="public" virt="non-virtual"><scope>Storage</scope><name>get_usage</name></member>
      <member refid="class_storage_1ae9e19e025adbbfdce38dce5534020073" prot="public" virt="non-virtual"><scope>Storage</scope><name>get_var_type</name></member>
      <member refid="class_storage_1a610e29b3ab2bad5f711263ec1d3e0edc" prot="public" virt="non-virtual"><scope>Storage</scope><name>increase_usage</name></member>
      <member refid="class_storage_1a381256ebbb1a1a926e9dbcfd86d39c0f" prot="public" virt="non-virtual"><scope>Storage</scope><name>move_to_reg</name></member>
      <member refid="class_storage_1ae1871cf772ec0a47848e1fa4c8b2523f" prot="private" virt="non-virtual"><scope>Storage</scope><name>n_usage</name></member>
      <member refid="class_no_copyable_1ade9c96e3484b122001dd4f42e6c28047" prot="public" virt="non-virtual"><scope>Storage</scope><name>NoCopyable</name></member>
      <member refid="class_no_copyable_1a00d3c509a77e0c5e25d92714551c54d1" prot="public" virt="non-virtual"><scope>Storage</scope><name>NoCopyable</name></member>
      <member refid="class_no_copyable_1a976985434b31929677d366614d803157" prot="public" virt="non-virtual"><scope>Storage</scope><name>operator=</name></member>
      <member refid="class_storage_1ad2a02dd3afb0dfcad9aec8e7937cae33" prot="private" virt="non-virtual"><scope>Storage</scope><name>owner_name</name></member>
      <member refid="class_storage_1a491713e42e55922412c64ea9d35120dd" prot="public" virt="non-virtual"><scope>Storage</scope><name>print</name></member>
      <member refid="class_storage_1a4013000b1d16ce8a36f5c21170c8b1a6" prot="public" virt="non-virtual"><scope>Storage</scope><name>set_storage_data</name></member>
      <member refid="class_storage_1a7ea4bbbf207a2d9a0dcb1a0ba570f5d1" prot="public" virt="non-virtual"><scope>Storage</scope><name>set_storage_type</name></member>
      <member refid="class_storage_1a4e753b01678f4d3523794870370ec089" prot="public" virt="non-virtual"><scope>Storage</scope><name>set_var_type</name></member>
      <member refid="class_storage_1a2badd5291fcf1f21d3182a5f4e73533f" prot="public" virt="non-virtual"><scope>Storage</scope><name>set_with_reg</name></member>
      <member refid="class_storage_1afafa9906b0dfb206bd3439b00c015b5c" prot="public" virt="non-virtual"><scope>Storage</scope><name>Storage</name></member>
      <member refid="class_storage_1af0576a6d2e294836b665af521855efc7" prot="private" virt="non-virtual"><scope>Storage</scope><name>storage_data</name></member>
      <member refid="class_storage_1a39e67d8d831642be207909643794a58b" prot="private" virt="non-virtual"><scope>Storage</scope><name>storage_type</name></member>
      <member refid="class_storage_1a8d8c45ec6286d706f2a303f6d826256b" prot="private" virt="non-virtual"><scope>Storage</scope><name>variable_type</name></member>
      <member refid="class_no_copyable_1a6704c3bd291a78054b26b83a63af0756" prot="public" virt="virtual"><scope>Storage</scope><name>~NoCopyable</name></member>
      <member refid="class_storage_1abe04a4c50447d0127247d9401857f167" prot="public" virt="non-virtual"><scope>Storage</scope><name>~Storage</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
