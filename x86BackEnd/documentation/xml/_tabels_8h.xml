<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_tabels_8h" kind="file" language="C++">
    <compoundname>Tabels.h</compoundname>
    <includes refid="_token_8h" local="yes">Token.h</includes>
    <includes local="no">stddef.h</includes>
    <includedby refid="_program_8h" local="yes">src/Legacy/Common/Structures/Program/Program.h</includedby>
    <includedby refid="_tabels_8cpp" local="yes">src/Legacy/Common/Structures/Tabels/Tabels.cpp</includedby>
    <includedby refid="_super_stack_config_8h" local="yes">src/Legacy/SuperStackConfig.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>src/Legacy/Common/Structures/Tabels/Tabels.h</label>
        <link refid="_tabels_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="3">
        <label>NameTable.h</label>
        <link refid="_name_table_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Token.h</label>
        <link refid="_token_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8">
        <label>src/Legacy/SetTokenTree.h</label>
        <link refid="_set_token_tree_8h_source"/>
      </node>
      <node id="6">
        <label>src/Legacy/Common/Utils/DefGraphVis.h</label>
        <link refid="_def_graph_vis_8h_source"/>
      </node>
      <node id="12">
        <label>ATC/SuperStack/SuperStack.h</label>
        <link refid="_super_stack_8h_source"/>
      </node>
      <node id="11">
        <label>ATC/SuperStack/DebugFunctions.h</label>
        <link refid="_debug_functions_8h_source"/>
      </node>
      <node id="1">
        <label>src/Legacy/Common/Structures/Tabels/Tabels.h</label>
        <link refid="_tabels_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/Legacy/Common/Utils/LangUtils.h</label>
        <link refid="_lang_utils_8h_source"/>
      </node>
      <node id="10">
        <label>src/Legacy/SuperStackConfig.h</label>
        <link refid="_super_stack_config_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>src/Legacy/TranslateToAsm.h</label>
        <link refid="_translate_to_asm_8h_source"/>
      </node>
      <node id="5">
        <label>src/Legacy/Common/StandartAWP/StandartAWP.h</label>
        <link refid="_standart_a_w_p_8h_source"/>
      </node>
      <node id="2">
        <label>src/Legacy/Common/Structures/Program/Program.h</label>
        <link refid="_program_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/IR/AstToIR/AstToIR.h</label>
        <link refid="_ast_to_i_r_8h_source"/>
      </node>
      <node id="4">
        <label>src/Legacy/AsmCtx.h</label>
        <link refid="_asm_ctx_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_var_label" prot="public">VarLabel</innerclass>
    <innerclass refid="struct_var_tabel" prot="public">VarTabel</innerclass>
    <innerclass refid="struct_func_label" prot="public">FuncLabel</innerclass>
    <innerclass refid="struct_func_tabel" prot="public">FuncTabel</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_tabels_8h_1a08559da62ced3e412f39c37d25fe27be" prot="public" static="no" strong="no">
        <type></type>
        <name>VarStorageType</name>
        <enumvalue id="_tabels_8h_1a08559da62ced3e412f39c37d25fe27beaceb7c305772dab23a260960771180df3" prot="public">
          <name>REGISTER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_tabels_8h_1a08559da62ced3e412f39c37d25fe27bea4e7c1c21b6fbbb620bd79131aabc22ab" prot="public">
          <name>RAM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Legacy/Common/Structures/Tabels/Tabels.h" line="13" column="1" bodyfile="src/Legacy/Common/Structures/Tabels/Tabels.h" bodystart="14" bodyend="17"/>
      </memberdef>
      <memberdef kind="enum" id="_tabels_8h_1afa95821de9590840a05b22bfee959940" prot="public" static="no" strong="no">
        <type></type>
        <name>FuncType</name>
        <enumvalue id="_tabels_8h_1afa95821de9590840a05b22bfee959940a2d43c639134f874f2897c39299936132" prot="public">
          <name>DECLARED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_tabels_8h_1afa95821de9590840a05b22bfee959940a8f8ad6619cb26aa9565964158fbd3c73" prot="public">
          <name>DEFINED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Legacy/Common/Structures/Tabels/Tabels.h" line="19" column="1" bodyfile="src/Legacy/Common/Structures/Tabels/Tabels.h" bodystart="20" bodyend="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_tabels_8h_1a1c8a8946b02d5e57b60e652de1d69c7f" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int NOT_DECLARED</definition>
        <argsstring></argsstring>
        <name>NOT_DECLARED</name>
        <initializer>= - 111</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Legacy/Common/Structures/Tabels/Tabels.h" line="10" column="11" bodyfile="src/Legacy/Common/Structures/Tabels/Tabels.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_tabels_8h_1ac2f7558b6de03dcb4070421e2e14da56" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int NOT_A_LABEL</definition>
        <argsstring></argsstring>
        <name>NOT_A_LABEL</name>
        <initializer>= -9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Legacy/Common/Structures/Tabels/Tabels.h" line="11" column="11" bodyfile="src/Legacy/Common/Structures/Tabels/Tabels.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_tabels_8h_1a97e55ffe605a97185faad6072f872ac2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_func_tabel" kindref="compound">FuncTabel</ref> *</type>
        <definition>FuncTabel* NewFuncTabel</definition>
        <argsstring>()</argsstring>
        <name>NewFuncTabel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Legacy/Common/Structures/Tabels/Tabels.h" line="61" column="12" bodyfile="src/Legacy/Common/Structures/Tabels/Tabels.cpp" bodystart="16" bodyend="33" declfile="src/Legacy/Common/Structures/Tabels/Tabels.h" declline="61" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="_tabels_8h_1ab067ffb1d44b483d519173cf8b540c2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CloseFuncTabel</definition>
        <argsstring>(FuncTabel *tabel)</argsstring>
        <name>CloseFuncTabel</name>
        <param>
          <type><ref refid="struct_func_tabel" kindref="compound">FuncTabel</ref> *</type>
          <declname>tabel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Legacy/Common/Structures/Tabels/Tabels.h" line="62" column="5" bodyfile="src/Legacy/Common/Structures/Tabels/Tabels.cpp" bodystart="37" bodyend="72" declfile="src/Legacy/Common/Structures/Tabels/Tabels.h" declline="62" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_tabels_8h_1a88256cb0b3bf389bdc0ea606f83a8c1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int IsFuncLabel</definition>
        <argsstring>(int name_id, FuncTabel *func_tabel)</argsstring>
        <name>IsFuncLabel</name>
        <param>
          <type>int</type>
          <declname>name_id</declname>
        </param>
        <param>
          <type><ref refid="struct_func_tabel" kindref="compound">FuncTabel</ref> *</type>
          <declname>func_tabel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Legacy/Common/Structures/Tabels/Tabels.h" line="68" column="5" bodyfile="src/Legacy/Common/Structures/Tabels/Tabels.cpp" bodystart="74" bodyend="96" declfile="src/Legacy/Common/Structures/Tabels/Tabels.h" declline="68" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_tabels_8h_1a924a4355bc421473ce536c6f3f4ed75a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int AddFuncLabel</definition>
        <argsstring>(FuncLabel *label, FuncTabel *tabel)</argsstring>
        <name>AddFuncLabel</name>
        <param>
          <type><ref refid="struct_func_label" kindref="compound">FuncLabel</ref> *</type>
          <declname>label</declname>
        </param>
        <param>
          <type><ref refid="struct_func_tabel" kindref="compound">FuncTabel</ref> *</type>
          <declname>tabel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Legacy/Common/Structures/Tabels/Tabels.h" line="70" column="5" bodyfile="src/Legacy/Common/Structures/Tabels/Tabels.cpp" bodystart="125" bodyend="136" declfile="src/Legacy/Common/Structures/Tabels/Tabels.h" declline="70" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_tabels_8h_1a7a80a195285388e6b7fbdcbb7d437641" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int AddFuncLabel</definition>
        <argsstring>(int name_id, int return_type, int body_status, FuncTabel *func_tabel)</argsstring>
        <name>AddFuncLabel</name>
        <param>
          <type>int</type>
          <declname>name_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>return_type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>body_status</declname>
        </param>
        <param>
          <type><ref refid="struct_func_tabel" kindref="compound">FuncTabel</ref> *</type>
          <declname>func_tabel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Legacy/Common/Structures/Tabels/Tabels.h" line="71" column="5" bodyfile="src/Legacy/Common/Structures/Tabels/Tabels.cpp" bodystart="98" bodyend="123" declfile="src/Legacy/Common/Structures/Tabels/Tabels.h" declline="71" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_tabels_8h_1a7c246b00f2cfe7a3b5520c66290a9c07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_func_label" kindref="compound">FuncLabel</ref> *</type>
        <definition>FuncLabel* NewFuncLabel</definition>
        <argsstring>(int name_id, int return_type)</argsstring>
        <name>NewFuncLabel</name>
        <param>
          <type>int</type>
          <declname>name_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>return_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Legacy/Common/Structures/Tabels/Tabels.h" line="73" column="11" bodyfile="src/Legacy/Common/Structures/Tabels/Tabels.cpp" bodystart="138" bodyend="155" declfile="src/Legacy/Common/Structures/Tabels/Tabels.h" declline="73" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="_tabels_8h_1af6d70b81ed951c2069ec5c2e4063c6f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CompareFuncLabels</definition>
        <argsstring>(FuncLabel *label1, FuncLabel *label2)</argsstring>
        <name>CompareFuncLabels</name>
        <param>
          <type><ref refid="struct_func_label" kindref="compound">FuncLabel</ref> *</type>
          <declname>label1</declname>
        </param>
        <param>
          <type><ref refid="struct_func_label" kindref="compound">FuncLabel</ref> *</type>
          <declname>label2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Legacy/Common/Structures/Tabels/Tabels.h" line="76" column="5" bodyfile="src/Legacy/Common/Structures/Tabels/Tabels.cpp" bodystart="157" bodyend="176" declfile="src/Legacy/Common/Structures/Tabels/Tabels.h" declline="76" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_tabels_8h_1adadf2b6f3b10fecf35e21883da96d620" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_var_tabel" kindref="compound">VarTabel</ref> *</type>
        <definition>VarTabel* NewVarTabel</definition>
        <argsstring>()</argsstring>
        <name>NewVarTabel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Legacy/Common/Structures/Tabels/Tabels.h" line="79" column="10" bodyfile="src/Legacy/Common/Structures/Tabels/Tabels.cpp" bodystart="195" bodyend="212" declfile="src/Legacy/Common/Structures/Tabels/Tabels.h" declline="79" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="_tabels_8h_1a3b75e9ac61f455138750075d82207e66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CloseVarTabel</definition>
        <argsstring>(VarTabel *tabel)</argsstring>
        <name>CloseVarTabel</name>
        <param>
          <type><ref refid="struct_var_tabel" kindref="compound">VarTabel</ref> *</type>
          <declname>tabel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Legacy/Common/Structures/Tabels/Tabels.h" line="80" column="5" bodyfile="src/Legacy/Common/Structures/Tabels/Tabels.cpp" bodystart="214" bodyend="248" declfile="src/Legacy/Common/Structures/Tabels/Tabels.h" declline="80" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_tabels_8h_1a718044c2f9cf56fc7d5fba12ef4714ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_var_label" kindref="compound">VarLabel</ref> *</type>
        <definition>VarLabel* IsVarLabel</definition>
        <argsstring>(int name_id, VarTabel *tabel)</argsstring>
        <name>IsVarLabel</name>
        <param>
          <type>int</type>
          <declname>name_id</declname>
        </param>
        <param>
          <type><ref refid="struct_var_tabel" kindref="compound">VarTabel</ref> *</type>
          <declname>tabel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Legacy/Common/Structures/Tabels/Tabels.h" line="85" column="10" bodyfile="src/Legacy/Common/Structures/Tabels/Tabels.cpp" bodystart="250" bodyend="272" declfile="src/Legacy/Common/Structures/Tabels/Tabels.h" declline="85" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="_tabels_8h_1a75a647eabcac5505fd4305ad143d15d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int AddVarLabel</definition>
        <argsstring>(VarLabel *label, VarTabel *tabel)</argsstring>
        <name>AddVarLabel</name>
        <param>
          <type><ref refid="struct_var_label" kindref="compound">VarLabel</ref> *</type>
          <declname>label</declname>
        </param>
        <param>
          <type><ref refid="struct_var_tabel" kindref="compound">VarTabel</ref> *</type>
          <declname>tabel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Legacy/Common/Structures/Tabels/Tabels.h" line="87" column="5" bodyfile="src/Legacy/Common/Structures/Tabels/Tabels.cpp" bodystart="274" bodyend="286" declfile="src/Legacy/Common/Structures/Tabels/Tabels.h" declline="87" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_tabels_8h_1a5097552b26e9fe56cee9602202c23501" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int AddVarLabel</definition>
        <argsstring>(int name_id, VarTabel *tabel)</argsstring>
        <name>AddVarLabel</name>
        <param>
          <type>int</type>
          <declname>name_id</declname>
        </param>
        <param>
          <type><ref refid="struct_var_tabel" kindref="compound">VarTabel</ref> *</type>
          <declname>tabel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Legacy/Common/Structures/Tabels/Tabels.h" line="88" column="5" bodyfile="src/Legacy/Common/Structures/Tabels/Tabels.cpp" bodystart="288" bodyend="306" declfile="src/Legacy/Common/Structures/Tabels/Tabels.h" declline="88" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Token.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO<sp/>tablE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NOT_DECLARED<sp/>=<sp/>-<sp/>111;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NOT_A_LABEL<sp/>=<sp/>-9;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>VarStorageType</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>REGISTER,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>RAM,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>FuncType</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>DECLARED,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>DEFINED,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="struct_var_label" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_var_label" kindref="compound">VarLabel</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>name_id;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>position;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>maybe<sp/>add<sp/>special<sp/>elemet<sp/>to<sp/>control<sp/>end<sp/>od<sp/>label_arr<sp/>instead<sp/>arr_size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="struct_var_tabel" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_var_tabel" kindref="compound">VarTabel</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_var_label" kindref="compound">VarLabel</ref>**<sp/>label_arr;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>arr_size;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>number_of_labels;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="struct_func_label" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_func_label" kindref="compound">FuncLabel</ref></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>name;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret_type;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>body_status;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number_of_return;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>number_of_local_variables;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number_of_parametrs;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="struct_func_tabel" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_func_tabel" kindref="compound">FuncTabel</ref></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_func_label" kindref="compound">FuncLabel</ref>**<sp/>label_arr;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>arr_size;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>number_of_labels;<sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="struct_func_tabel" kindref="compound">FuncTabel</ref>*<sp/><sp/>NewFuncTabel();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CloseFuncTabel<sp/>(<ref refid="struct_func_tabel" kindref="compound">FuncTabel</ref>*<sp/>tabel);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>int<sp/>FuncTabelCtor<sp/>(FuncTabel*<sp/>tabel);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>Func<sp/>Labels<sp/>must<sp/>be<sp/>Calloced</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>int<sp/>FuncTabelDtor<sp/>(FuncTabel*<sp/>tabel);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>IsFuncLabel<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>name_id,<sp/><ref refid="struct_func_tabel" kindref="compound">FuncTabel</ref>*<sp/>func_tabel);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>AddFuncLabel<sp/>(<ref refid="struct_func_label" kindref="compound">FuncLabel</ref>*<sp/>label,<sp/><ref refid="struct_func_tabel" kindref="compound">FuncTabel</ref>*<sp/>tabel);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>AddFuncLabel<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>name_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>return_type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>body_status,<sp/><ref refid="struct_func_tabel" kindref="compound">FuncTabel</ref>*<sp/>func_tabel);<sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><ref refid="struct_func_label" kindref="compound">FuncLabel</ref>*<sp/>NewFuncLabel<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>name_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>return_type);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compares<sp/>only<sp/>name,<sp/>ret<sp/>type<sp/>and<sp/>body<sp/>status<sp/><sp/>(number_of_argumetns<sp/>in<sp/>future)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CompareFuncLabels<sp/>(<ref refid="struct_func_label" kindref="compound">FuncLabel</ref>*<sp/>label1,<sp/><ref refid="struct_func_label" kindref="compound">FuncLabel</ref>*<sp/>label2);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="struct_var_tabel" kindref="compound">VarTabel</ref>*<sp/>NewVarTabel();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CloseVarTabel<sp/>(<ref refid="struct_var_tabel" kindref="compound">VarTabel</ref>*<sp/>tabel);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>int<sp/>VarTabelCtor<sp/>(VarTabel*<sp/>tabel);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>int<sp/>VarTabelDtor<sp/>(VarTabel*<sp/>tabel);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><ref refid="struct_var_label" kindref="compound">VarLabel</ref>*<sp/>IsVarLabel<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>name_id,<sp/><ref refid="struct_var_tabel" kindref="compound">VarTabel</ref>*<sp/>tabel);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>AddVarLabel<sp/>(<ref refid="struct_var_label" kindref="compound">VarLabel</ref>*<sp/>label,<sp/><ref refid="struct_var_tabel" kindref="compound">VarTabel</ref>*<sp/>tabel);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>AddVarLabel<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>name_id,<sp/><sp/><sp/><sp/><sp/><ref refid="struct_var_tabel" kindref="compound">VarTabel</ref>*<sp/>tabel);</highlight></codeline>
    </programlisting>
    <location file="src/Legacy/Common/Structures/Tabels/Tabels.h"/>
  </compounddef>
</doxygen>
