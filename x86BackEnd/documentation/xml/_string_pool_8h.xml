<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_string_pool_8h" kind="file" language="C++">
    <compoundname>StringPool.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includedby refid="_ast_to_i_r_8cpp" local="yes">src/IR/AstToIR/AstToIR.cpp</includedby>
    <includedby refid="_builder_8cpp" local="yes">src/IR/AstToIR/Builder.cpp</includedby>
    <includedby refid="_string_pool_8cpp" local="yes">src/IR/AstToIR/StringPool.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>src/IR/AstToIR/StringPool.h</label>
        <link refid="_string_pool_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_string_pool" prot="public">StringPool</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="_string_pool_8h_1aa7450976c2e5bcb014fb2840224d5982" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SetStringPool</definition>
        <argsstring>(StringPool *pool)</argsstring>
        <name>SetStringPool</name>
        <param>
          <type><ref refid="struct_string_pool" kindref="compound">StringPool</ref> *</type>
          <declname>pool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/AstToIR/StringPool.h" line="13" column="5" bodyfile="src/IR/AstToIR/StringPool.cpp" bodystart="36" bodyend="40" declfile="src/IR/AstToIR/StringPool.h" declline="13" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_string_pool_8h_1a83470c8a1fc885b88e07c467cc6d76ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char **</type>
        <definition>const char** GetStringPool</definition>
        <argsstring>()</argsstring>
        <name>GetStringPool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/AstToIR/StringPool.h" line="14" column="12" bodyfile="src/IR/AstToIR/StringPool.cpp" bodystart="42" bodyend="45" declfile="src/IR/AstToIR/StringPool.h" declline="14" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="_string_pool_8h_1aca3ed784d9a74c655e9f2a1bcb9a99c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GetStringPoolSize</definition>
        <argsstring>()</argsstring>
        <name>GetStringPoolSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/AstToIR/StringPool.h" line="15" column="14" bodyfile="src/IR/AstToIR/StringPool.cpp" bodystart="47" bodyend="50" declfile="src/IR/AstToIR/StringPool.h" declline="15" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="_string_pool_8h_1a5e92396c29477b704ee527a9a44971b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* GetString</definition>
        <argsstring>(int id)</argsstring>
        <name>GetString</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/AstToIR/StringPool.h" line="17" column="13" bodyfile="src/IR/AstToIR/StringPool.cpp" bodystart="52" bodyend="55" declfile="src/IR/AstToIR/StringPool.h" declline="17" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="_string_pool_8h_1aa1fda4afc19aa0208d11e7db97bdaf85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int AddString</definition>
        <argsstring>(const char *string)</argsstring>
        <name>AddString</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/AstToIR/StringPool.h" line="18" column="14" bodyfile="src/IR/AstToIR/StringPool.cpp" bodystart="13" bodyend="34" declfile="src/IR/AstToIR/StringPool.h" declline="18" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="_string_pool_8h_1affabf1104de0fa7ec9e22686f9a942ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* CreateString</definition>
        <argsstring>(const char *format,...)</argsstring>
        <name>CreateString</name>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/AstToIR/StringPool.h" line="20" column="6" bodyfile="src/IR/AstToIR/StringPool.cpp" bodystart="72" bodyend="96" declfile="src/IR/AstToIR/StringPool.h" declline="20" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="struct_string_pool" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_string_pool" kindref="compound">StringPool</ref></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>string_arr;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>capacity;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SetStringPool<sp/>(<ref refid="struct_string_pool" kindref="compound">StringPool</ref>*<sp/>pool);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>GetStringPool<sp/>();</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetStringPoolSize<sp/>();</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/>GetString<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddString<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>CreateString<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>format,<sp/>...);</highlight></codeline>
    </programlisting>
    <location file="src/IR/AstToIR/StringPool.h"/>
  </compounddef>
</doxygen>
