<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="my__safety_8h" kind="file" language="C++">
    <compoundname>my_safety.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">inttypes.h</includes>
    <includedby refid="my__safety_8cpp" local="yes">ATC/my_safety/my_safety.cpp</includedby>
    <includedby refid="_super_stack_8h" local="yes">ATC/SuperStack/SuperStack.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>stddef.h</label>
      </node>
      <node id="1">
        <label>ATC/my_safety/my_safety.h</label>
        <link refid="my__safety_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>ATC/SuperStack/SuperStack.h</label>
        <link refid="_super_stack_8h_source"/>
      </node>
      <node id="1">
        <label>ATC/my_safety/my_safety.h</label>
        <link refid="my__safety_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="my__safety_8h_1a821c466c0bf7c79db9490305a8ad7892" prot="public" static="no">
        <type>long long</type>
        <definition>typedef long long CANARY</definition>
        <argsstring></argsstring>
        <name>CANARY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/my_safety/my_safety.h" line="7" column="19" bodyfile="ATC/my_safety/my_safety.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="my__safety_8h_1a9c6c8f8bdc871f27cb7fce0c99eee03e" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int _CANARY_SIZE_</definition>
        <argsstring></argsstring>
        <name>_CANARY_SIZE_</name>
        <initializer>= sizeof(CANARY)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/my_safety/my_safety.h" line="9" column="11" bodyfile="ATC/my_safety/my_safety.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="my__safety_8h_1ab78ace9fa683e6bc050699263610fe0e" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int _OPENING_CANARY_</definition>
        <argsstring></argsstring>
        <name>_OPENING_CANARY_</name>
        <initializer>= 0xABCDEF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/my_safety/my_safety.h" line="11" column="11" bodyfile="ATC/my_safety/my_safety.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="my__safety_8h_1aa62fb03b365cb9c2d38c717215fcedce" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int _CLOSING_CANARY_</definition>
        <argsstring></argsstring>
        <name>_CLOSING_CANARY_</name>
        <initializer>= 0xFEDCBA</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/my_safety/my_safety.h" line="12" column="11" bodyfile="ATC/my_safety/my_safety.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="my__safety_8h_1ac0964ec2faf5f1601e1b492e29d85d50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* canary_calloc</definition>
        <argsstring>(size_t numbers_of_elements, size_t size_of_element)</argsstring>
        <name>canary_calloc</name>
        <param>
          <type>size_t</type>
          <declname>numbers_of_elements</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size_of_element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/my_safety/my_safety.h" line="15" column="6" bodyfile="ATC/my_safety/my_safety.cpp" bodystart="8" bodyend="32" declfile="ATC/my_safety/my_safety.h" declline="15" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="my__safety_8h_1a12f2ff721e94a2be568009071a0f8ea5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* canary_realloc</definition>
        <argsstring>(void *ptr, size_t new_numbers_of_elements, size_t size_of_element)</argsstring>
        <name>canary_realloc</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>new_numbers_of_elements</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size_of_element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/my_safety/my_safety.h" line="16" column="6" bodyfile="ATC/my_safety/my_safety.cpp" bodystart="34" bodyend="54" declfile="ATC/my_safety/my_safety.h" declline="16" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="my__safety_8h_1a174e67df4ee7b5f7f1c65a21554e97ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void canary_free</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>canary_free</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/my_safety/my_safety.h" line="17" column="7" bodyfile="ATC/my_safety/my_safety.cpp" bodystart="56" bodyend="59" declfile="ATC/my_safety/my_safety.h" declline="17" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="my__safety_8h_1a0e59ade113663f3410017538ba308eb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int generateHash</definition>
        <argsstring>(const void *start, const void *end)</argsstring>
        <name>generateHash</name>
        <param>
          <type>const void *</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/my_safety/my_safety.h" line="19" column="5" bodyfile="ATC/my_safety/my_safety.cpp" bodystart="61" bodyend="72" declfile="ATC/my_safety/my_safety.h" declline="19" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>MY_SAFETY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MY_SAFETY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;inttypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>CANARY;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_CANARY_SIZE_<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(CANARY);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_OPENING_CANARY_<sp/>=<sp/>0xABCDEF;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_CLOSING_CANARY_<sp/>=<sp/>0xFEDCBA;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//hash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>canary_calloc<sp/><sp/><sp/>(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>numbers_of_elements,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size_of_element);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>canary_realloc<sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>new_numbers_of_elements,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size_of_element);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/>canary_free<sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>generateHash(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*end);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="ATC/my_safety/my_safety.h"/>
  </compounddef>
</doxygen>
