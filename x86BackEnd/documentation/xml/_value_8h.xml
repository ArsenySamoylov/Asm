<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_value_8h" kind="file" language="C++">
    <compoundname>Value.h</compoundname>
    <includes local="no">cstddef</includes>
    <includes refid="_value_arr_template_8h" local="yes">ValueArrTemplate.h</includes>
    <includes refid="_storage_8h" local="yes">Storage.h</includes>
    <includedby refid="_value_table_8h" local="yes">src/IR/AstToIR/ValueTable.h</includedby>
    <includedby refid="_instructions_8h" local="yes">src/IR/Instructions/Instructions.h</includedby>
    <includedby refid="_module_8h" local="yes">src/IR/Module/Module.h</includedby>
    <includedby refid="_storage_8cpp" local="yes">src/IR/Storage/Storage.cpp</includedby>
    <includedby refid="_i_r_context_8h" local="yes">src/IR/TranslateTox86/IRContext.h</includedby>
    <includedby refid="_value_8cpp" local="yes">src/IR/Value/Value.cpp</includedby>
    <incdepgraph>
      <node id="7">
        <label>Storage.h</label>
        <link refid="_storage_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cassert</label>
      </node>
      <node id="9">
        <label>TypeDefs.h</label>
        <link refid="_type_defs_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stddef.h</label>
      </node>
      <node id="11">
        <label>RegistersUsage.h</label>
        <link refid="_registers_usage_8h_source"/>
      </node>
      <node id="3">
        <label>ValueArrTemplate.h</label>
        <link refid="_value_arr_template_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cstdio</label>
      </node>
      <node id="4">
        <label>cstdlib</label>
      </node>
      <node id="2">
        <label>cstddef</label>
      </node>
      <node id="1">
        <label>src/IR/Value/Value.h</label>
        <link refid="_value_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>NoCopyable.h</label>
        <link refid="_no_copyable_8h_source"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7">
        <label>src/IR/DumpIR/DumpIR.h</label>
        <link refid="_dump_i_r_8h_source"/>
      </node>
      <node id="4">
        <label>src/IR/Instructions/Instructions.h</label>
        <link refid="_instructions_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>src/IR/TranslateTox86/IRContext.h</label>
        <link refid="_i_r_context_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/IR/AstToIR/ValueTable.h</label>
        <link refid="_value_table_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/IR/AstToIR/Builder.h</label>
        <link refid="_builder_8h_source"/>
      </node>
      <node id="5">
        <label>src/IR/Module/Module.h</label>
        <link refid="_module_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/IR/TranslateTox86/Commands.h</label>
        <link refid="_commands_8h_source"/>
      </node>
      <node id="6">
        <label>src/IR/AstToIR/AstToIR.h</label>
        <link refid="_ast_to_i_r_8h_source"/>
      </node>
      <node id="1">
        <label>src/IR/Value/Value.h</label>
        <link refid="_value_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_value" prot="public">Value</innerclass>
    <innerclass refid="class_base_block" prot="public">BaseBlock</innerclass>
    <innerclass refid="class_constant" prot="public">Constant</innerclass>
    <innerclass refid="class_global_var" prot="public">GlobalVar</innerclass>
    <innerclass refid="class_function" prot="public">Function</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_value_8h_1ad9971b6ef33e02ba2c75d19c1d2518a1" prot="public" static="no" strong="yes">
        <type></type>
        <name>ValueType</name>
        <enumvalue id="_value_8h_1ad9971b6ef33e02ba2c75d19c1d2518a1a86408593c34af77fdd90df932f8b5261" prot="public">
          <name>Function</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_value_8h_1ad9971b6ef33e02ba2c75d19c1d2518a1ab00ca28f640c35e4add68ec4f671b614" prot="public">
          <name>GlobalVar</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_value_8h_1ad9971b6ef33e02ba2c75d19c1d2518a1a4b70cc0fd1cf9aa70086ec3f0e942fa8" prot="public">
          <name>BaseBlock</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_value_8h_1ad9971b6ef33e02ba2c75d19c1d2518a1acb17869fe51048b5a5c4c6106551a255" prot="public">
          <name>Constant</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_value_8h_1ad9971b6ef33e02ba2c75d19c1d2518a1ac742c5a36b6307267bb709355feb2c41" prot="public">
          <name>Instruction</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_value_8h_1ad9971b6ef33e02ba2c75d19c1d2518a1a689202409e48743b914713f96d93947c" prot="public">
          <name>Value</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Value/Value.h" line="14" column="1" bodyfile="src/IR/Value/Value.h" bodystart="15" bodyend="23"/>
      </memberdef>
      <memberdef kind="enum" id="_value_8h_1ab69f6b76e623d3ec3e1b2b4bd287548d" prot="public" static="no" strong="yes">
        <type></type>
        <name>VariableBaseType</name>
        <enumvalue id="_value_8h_1ab69f6b76e623d3ec3e1b2b4bd287548dad909d38d705ce75386dd86e611a82f5b" prot="public">
          <name>Double</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_value_8h_1ab69f6b76e623d3ec3e1b2b4bd287548da1686a6c336b71b36d77354cea19a8b52" prot="public">
          <name>Int</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_value_8h_1ab69f6b76e623d3ec3e1b2b4bd287548da8e95e84813830072b7516cfaa7dbc1a9" prot="public">
          <name>Char</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Value/Value.h" line="151" column="1" bodyfile="src/IR/Value/Value.h" bodystart="152" bodyend="156"/>
      </memberdef>
      <memberdef kind="enum" id="_value_8h_1ab1a8647a116596fb6e8dedc1eff3b813" prot="public" static="no" strong="yes">
        <type></type>
        <name>FunctionRetType</name>
        <enumvalue id="_value_8h_1ab1a8647a116596fb6e8dedc1eff3b813ad909d38d705ce75386dd86e611a82f5b" prot="public">
          <name>Double</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_value_8h_1ab1a8647a116596fb6e8dedc1eff3b813a81ceb48a978444906d80119200aa358d" prot="public">
          <name>Void</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Value/Value.h" line="180" column="1" bodyfile="src/IR/Value/Value.h" bodystart="181" bodyend="184"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_value_8h_1ac96357b1d5d7d9565e41d8fab5a07a60" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int PRECISION</definition>
        <argsstring></argsstring>
        <name>PRECISION</name>
        <initializer>= 100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Value/Value.h" line="121" column="14" bodyfile="src/IR/Value/Value.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_value_8h_1a824fe1dd118c50bb9ebc7295932b5457" prot="public" static="no" mutable="no">
        <type>const data_t</type>
        <definition>const data_t BAD_VALUE</definition>
        <argsstring></argsstring>
        <name>BAD_VALUE</name>
        <initializer>= -666</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Value/Value.h" line="122" column="14" bodyfile="src/IR/Value/Value.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This file contains declaration of <ref refid="class_value" kindref="compound">Value</ref> class and its derived classes (only exception is <ref refid="class_instruction" kindref="compound">Instruction</ref>; it declared in <ref refid="_instructions_8h" kindref="compound">Instructions.h</ref>) </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ValueArrTemplate.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Storage.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>ValueType</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_function" kindref="compound">Function</ref>,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_global_var" kindref="compound">GlobalVar</ref>,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_base_block" kindref="compound">BaseBlock</ref>,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_constant" kindref="compound">Constant</ref>,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_instruction" kindref="compound">Instruction</ref>,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_value" kindref="compound">Value</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_value" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_value" kindref="compound">Value</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_no_copyable" kindref="compound">NoCopyable</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ValueType<sp/>type;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>name_t<sp/>name;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/><ref refid="class_storage" kindref="compound">Storage</ref><sp/>storage;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_value" kindref="compound">Value</ref><sp/>(ValueType<sp/>type_param,<sp/>name_t<sp/>name_param);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_value" kindref="compound">Value</ref><sp/>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name_t<sp/>get_name()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49" refid="class_value_1ad58adc30ecd6e33f8344b76bb94ad9a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_value_1ad58adc30ecd6e33f8344b76bb94ad9a9" kindref="member">dump</ref><sp/><sp/><sp/><sp/><sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;<sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_value_1a81566c2e0f8d9c81fe18ad4ae251e471" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>ValueType<sp/><ref refid="class_value_1a81566c2e0f8d9c81fe18ad4ae251e471" kindref="member">get_type</ref><sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="class_value_1a5c80febbb8171e7c60cdd1598c47fe53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_value_1a5c80febbb8171e7c60cdd1598c47fe53" kindref="member">translate_x86</ref><sp/><sp/>(<ref refid="struct_context" kindref="compound">Context</ref>*<sp/>ctx)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GPRegisterNumber<sp/><ref refid="class_value_1ab68f4bce225da0bdba8085c85b90ca0f" kindref="member">put_to_reg</ref><sp/>(<ref refid="struct_context" kindref="compound">Context</ref>*<sp/>ctx)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83" refid="class_value_1a8bc56c2cc9d6cb4aade7084277d9df26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="class_value_1a8bc56c2cc9d6cb4aade7084277d9df26" kindref="member">set_storage</ref><sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_storage" kindref="compound">Storage</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_value_1ad8439f42b7727f74160f4d4233300b73" kindref="member">get_storage</ref><sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_instruction" kindref="compound">Instruction</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="class_base_block" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_base_block" kindref="compound">BaseBlock</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_value" kindref="compound">Value</ref></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_value_arr" kindref="compound">ValueArr &lt;Instruction&gt;</ref><sp/>inst_arr;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_base_block" kindref="compound">BaseBlock</ref><sp/>(name_t<sp/>name_param);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~<ref refid="class_base_block" kindref="compound">BaseBlock</ref><sp/>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_base_block_1ab90a362d8bcd71c015102a5965843d79" kindref="member">dump</ref><sp/><sp/><sp/><sp/><sp/>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ValueType<sp/><ref refid="class_base_block_1ab680e5829bf197f7828b6261ac62e5f7" kindref="member">get_type</ref><sp/>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_base_block_1ace2f438ad119bd610183103a39131101" kindref="member">translate_x86</ref><sp/>(<ref refid="struct_context" kindref="compound">Context</ref>*<sp/>ctx)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_base_block_1aaf4bb16294f85cab75262a9fc80ca83c" kindref="member">set_storage</ref><sp/><sp/><sp/>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_instruction" kindref="compound">Instruction</ref>*<sp/>add_instr<sp/>(<ref refid="class_instruction" kindref="compound">Instruction</ref>*<sp/>instr);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_address<sp/>(address_t<sp/>address)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>PRECISION<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>data_t<sp/>BAD_VALUE<sp/>=<sp/>-666;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="class_constant" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_constant" kindref="compound">Constant</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_value" kindref="compound">Value</ref></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constant_1a9992e73f21e41ef252842ad3b415e114" kindref="member">Constant</ref><sp/>(name_t<sp/>name_param,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>data_t<sp/>data_param);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~<ref refid="class_constant" kindref="compound">Constant</ref><sp/>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_constant_1afdecb02c8d897255c1c8884c6fa607a0" kindref="member">dump</ref><sp/><sp/><sp/><sp/><sp/>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ValueType<sp/><ref refid="class_constant_1a6abd835079904cba7f9a4271475facc1" kindref="member">get_type</ref><sp/>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_constant_1a7308dce78679606aa72467fe63de5426" kindref="member">translate_x86</ref><sp/>(<ref refid="struct_context" kindref="compound">Context</ref>*<sp/>ctx)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_constant_1a68fdf766ec2a3afb147835ffc6f9b12f" kindref="member">set_storage</ref><sp/><sp/><sp/>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_t<sp/>get_data<sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>VariableBaseType</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>Double,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>Int,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>Char,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="class_global_var" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_global_var" kindref="compound">GlobalVar</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_value" kindref="compound">Value</ref></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>VariableBaseType<sp/>var_type;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_constant" kindref="compound">Constant</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_val;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_global_var" kindref="compound">GlobalVar</ref><sp/>(name_t<sp/>name_param,<sp/>VariableBaseType<sp/>var_type_param,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_constant" kindref="compound">Constant</ref>*<sp/>init_val_param);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~<ref refid="class_global_var" kindref="compound">GlobalVar</ref><sp/>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_global_var_1a296cd305d43993d19d262c98f6c158cc" kindref="member">dump</ref><sp/><sp/><sp/><sp/><sp/>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ValueType<sp/><ref refid="class_global_var_1a568dd05f7dcd53d1533b143891bb6fc5" kindref="member">get_type</ref><sp/>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_global_var_1a07c47abeb2f0c4c18f2abaf2aca26cff" kindref="member">translate_x86</ref><sp/>(<ref refid="struct_context" kindref="compound">Context</ref>*<sp/>ctx)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_global_var_1a2dd9e26d905287e8112b0a3e877326de" kindref="member">set_storage</ref><sp/><sp/><sp/>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>FunctionRetType</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>Double,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>Void,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="class_function" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_function" kindref="compound">Function</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_value" kindref="compound">Value</ref></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>FunctionRetType<sp/>ret_type;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_value_arr" kindref="compound">ValueArr&lt;Value&gt;</ref><sp/><sp/><sp/><sp/><sp/>argv;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_value_arr" kindref="compound">ValueArr&lt;BaseBlock&gt;</ref><sp/>body;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_local_vars;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_function" kindref="compound">Function</ref><sp/>(name_t<sp/>name_param,<sp/>FunctionRetType<sp/>ret_type_param);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~<ref refid="class_function" kindref="compound">Function</ref><sp/>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_function_1aef307ac19141a13c5d3cbe9d6fad6551" kindref="member">dump</ref><sp/><sp/><sp/><sp/><sp/>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ValueType<sp/><ref refid="class_function_1a6aa5d64a586011de3b15a82350538ae8" kindref="member">get_type</ref><sp/>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_function_1afa24b0a4286dffad077c985708b97cbd" kindref="member">translate_x86</ref><sp/>(<ref refid="struct_context" kindref="compound">Context</ref>*<sp/>ctx)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_function_1a4e01eeef439880175f203f92f223213e" kindref="member">set_storage</ref><sp/><sp/><sp/>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_value_arr" kindref="compound">ValueArr&lt;Value&gt;</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_argv<sp/>();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_value_arr" kindref="compound">ValueArr&lt;BaseBlock&gt;</ref>*<sp/><sp/><sp/>get_body<sp/>();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FunctionRetType<sp/>get_ret_type<sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/>increase_n_local_vars<sp/>();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>get_n_local_vars<sp/><sp/><sp/><sp/><sp/><sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_function_1ac1385c30b742829f88d5da77133e54dc" kindref="member">set_address</ref><sp/>(address_t<sp/>address)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
    </programlisting>
    <location file="src/IR/Value/Value.h"/>
  </compounddef>
</doxygen>
