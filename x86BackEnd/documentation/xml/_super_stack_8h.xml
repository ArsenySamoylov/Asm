<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_super_stack_8h" kind="file" language="C++">
    <compoundname>SuperStack.h</compoundname>
    <includes refid="_super_stack_config_8h" local="yes">SuperStackConfig.h</includes>
    <includes refid="my__safety_8h" local="yes">my_safety.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">sys/types.h</includes>
    <includedby refid="_debug_functions_8cpp" local="yes">ATC/SuperStack/DebugFunctions.cpp</includedby>
    <includedby refid="_super_stack_8cpp" local="yes">ATC/SuperStack/SuperStack.cpp</includedby>
    <includedby refid="_super_stack_dump_8cpp" local="yes">ATC/SuperStack/SuperStackDump.cpp</includedby>
    <includedby refid="_set_token_tree_8cpp" local="yes">src/Legacy/SetTokenTree.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>ATC/SuperStack/SuperStack.h</label>
        <link refid="_super_stack_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Tabels.h</label>
        <link refid="_tabels_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>SuperStackConfig.h</label>
        <link refid="_super_stack_config_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="5">
        <label>NameTable.h</label>
        <link refid="_name_table_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Token.h</label>
        <link refid="_token_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>sys/types.h</label>
      </node>
      <node id="7">
        <label>my_safety.h</label>
        <link refid="my__safety_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_super_stack" prot="public">SuperStack</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_super_stack_8h_1a645963135acaae8058f669991209cf2a" prot="public" static="no">
        <name>ON_SUPERDEBUG</name>
        <param><defname>...</defname></param>
        <initializer>__VA_ARGS__</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>if you want to change settings than look up in <ref refid="_super_stack_config_8h_source" kindref="compound">SuperStackConfig.h</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/SuperStack/SuperStack.h" line="16" column="9" bodyfile="ATC/SuperStack/SuperStack.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_super_stack_8h_1aa2dfecc30c6b65bae47231b17d2184cf" prot="public" static="no">
        <name>StackCtor</name>
        <param><defname>stk_ptr</defname></param>
        <param><defname>capacity</defname></param>
        <initializer>                                            SuperStackCtor (stk_ptr, capacity                \
                                            ON_SUPERDEBUG(, init_inf(stk_ptr)) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/SuperStack/SuperStack.h" line="89" column="9" bodyfile="ATC/SuperStack/SuperStack.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_super_stack_8h_1add996341f133ef309084068080763db7" prot="public" static="no">
        <name>StackDtor</name>
        <param><defname>stk_ptr</defname></param>
        <initializer>                                            SuperStackDtor (stk_ptr                          \
                                            ON_SUPERDEBUG(, src_loc(stk_ptr))  )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/SuperStack/SuperStack.h" line="92" column="9" bodyfile="ATC/SuperStack/SuperStack.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_super_stack_8h_1a4aedb83bdca61048c5ab60603cb87c0b" prot="public" static="no">
        <name>StackPush</name>
        <param><defname>stk_ptr</defname></param>
        <param><defname>value</defname></param>
        <initializer>                                            SSpush     (stk_ptr, value                   \
                                            ON_SUPERDEBUG(, src_loc(stk_ptr))  )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/SuperStack/SuperStack.h" line="95" column="9" bodyfile="ATC/SuperStack/SuperStack.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_super_stack_8h_1a00008adb2c36594feaa38c8db823bbd4" prot="public" static="no">
        <name>StackPop</name>
        <param><defname>stk_ptr</defname></param>
        <initializer>                                            SSpop      (stk_ptr                          \
                                            ON_SUPERDEBUG(, src_loc(stk_ptr))  )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/SuperStack/SuperStack.h" line="98" column="9" bodyfile="ATC/SuperStack/SuperStack.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_super_stack_8h_1a54a570001ba9c30880df39cf2e6ec1d6" prot="public" static="no">
        <name>StackTop</name>
        <param><defname>stk_ptr</defname></param>
        <initializer>                                            SStop      (stk_ptr                          \
                                            ON_SUPERDEBUG(, src_loc(stk_ptr))  )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/SuperStack/SuperStack.h" line="101" column="9" bodyfile="ATC/SuperStack/SuperStack.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_super_stack_8h_1a7eb4cafd3c2c17d4bc76020409fd0b86" prot="public" static="no">
        <name>fuckDump</name>
        <param><defname>stk</defname></param>
        <initializer>    SSdump(stk, MedComissionSS(stk), init_inf(stk), __func__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/SuperStack/SuperStack.h" line="109" column="9" bodyfile="ATC/SuperStack/SuperStack.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_super_stack_8h_1a0c303526221696ec65a0f0d2724e2840" prot="public" static="no" strong="no">
        <type></type>
        <name>super_stack_status</name>
        <enumvalue id="_super_stack_8h_1a0c303526221696ec65a0f0d2724e2840af096820742c38363e9d6c33e7c932780" prot="public">
          <name>UNINITIALIZED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_super_stack_8h_1a0c303526221696ec65a0f0d2724e2840a86c6d557ad5cb9dcbb3e20515cdb6dbe" prot="public">
          <name>INITIALIZATION_ERR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_super_stack_8h_1a0c303526221696ec65a0f0d2724e2840ab024afff63618bee4968dda9a8a80d60" prot="public">
          <name>DESTRUCTOR_ERR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/SuperStack/SuperStack.h" line="24" column="1" bodyfile="ATC/SuperStack/SuperStack.h" bodystart="25" bodyend="31"/>
      </memberdef>
      <memberdef kind="enum" id="_super_stack_8h_1a950b89c37b8693a8fd651ceb0f9137ed" prot="public" static="no" strong="no">
        <type></type>
        <name>SuperStackCtorErr</name>
        <enumvalue id="_super_stack_8h_1a950b89c37b8693a8fd651ceb0f9137edac77f5116006fa2068bc4799b15ffb579" prot="public">
          <name>NULL_STK_PTR_CTR</name>
          <initializer>= -2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_super_stack_8h_1a950b89c37b8693a8fd651ceb0f9137eda20f3a9cf289adbed878d0a361ea864dd" prot="public">
          <name>WRONG_CAPACITY</name>
          <initializer>= -3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_super_stack_8h_1a950b89c37b8693a8fd651ceb0f9137eda9ea2720ee66ea25aa0ae906fa382c95e" prot="public">
          <name>INITIALIZED_STACK</name>
          <initializer>= -4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_super_stack_8h_1a950b89c37b8693a8fd651ceb0f9137edaf76dd8b0042abc659717428b0643215e" prot="public">
          <name>ERROR_INITIALIZATION</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_super_stack_8h_1a950b89c37b8693a8fd651ceb0f9137eda7233324c86acad5a2adc3ae3bfe82f81" prot="public">
          <name>SUCCESS_INITIALIZATION</name>
          <initializer>=  1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/SuperStack/SuperStack.h" line="33" column="1" bodyfile="ATC/SuperStack/SuperStack.h" bodystart="34" bodyend="41"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_super_stack_8h_1a821c466c0bf7c79db9490305a8ad7892" prot="public" static="no">
        <type>long long</type>
        <definition>typedef long long CANARY</definition>
        <argsstring></argsstring>
        <name>CANARY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/SuperStack/SuperStack.h" line="43" column="19" bodyfile="ATC/SuperStack/SuperStack.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_super_stack_8h_1a7ac9958f94d3f9c9278222a430707b3f" prot="public" static="no" mutable="no">
        <type>const size_t</type>
        <definition>const size_t _HEAP_MIN_CAPACITY_</definition>
        <argsstring></argsstring>
        <name>_HEAP_MIN_CAPACITY_</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/SuperStack/SuperStack.h" line="21" column="14" bodyfile="ATC/SuperStack/SuperStack.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_super_stack_8h_1aa2f9c46808c1263b83eb813541498b6a" prot="public" static="no" mutable="no">
        <type>const size_t</type>
        <definition>const size_t _ELEMENT_T_SIZE_</definition>
        <argsstring></argsstring>
        <name>_ELEMENT_T_SIZE_</name>
        <initializer>= sizeof(<ref refid="struct_name_table" kindref="compound">element_t</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/SuperStack/SuperStack.h" line="22" column="14" bodyfile="ATC/SuperStack/SuperStack.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_super_stack_8h_1ad86be160ff98b05f819f1278bf8385eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SuperStackCtor</definition>
        <argsstring>(SuperStack *stk, size_t capacity ON_SUPERDEBUG(, SrcLocationInfo init_inf))</argsstring>
        <name>SuperStackCtor</name>
        <param>
          <type><ref refid="struct_super_stack" kindref="compound">SuperStack</ref> *</type>
          <declname>stk</declname>
        </param>
        <param>
          <type>size_t capacity </type>
          <declname>ON_SUPERDEBUG</declname>
          <array>, SrcLocationInfo init_inf</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/SuperStack/SuperStack.h" line="70" column="6" bodyfile="ATC/SuperStack/SuperStack.cpp" bodystart="41" bodyend="66" declfile="ATC/SuperStack/SuperStack.h" declline="70" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_super_stack_8h_1a43b59bf9baac97e9f18f55928adf850b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SuperStackDtor</definition>
        <argsstring>(SuperStack *stk ON_SUPERDEBUG(, SrcLocationInfo location))</argsstring>
        <name>SuperStackDtor</name>
        <param>
          <type><ref refid="struct_super_stack" kindref="compound">SuperStack</ref> *stk </type>
          <declname>ON_SUPERDEBUG</declname>
          <array>, SrcLocationInfo location</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/SuperStack/SuperStack.h" line="73" column="6" bodyfile="ATC/SuperStack/SuperStack.cpp" bodystart="68" bodyend="80" declfile="ATC/SuperStack/SuperStack.h" declline="73" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="_super_stack_8h_1a7069d5c3f0940eb4ddfa94e8234c0a3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SSpush</definition>
        <argsstring>(SuperStack *stk, element_t value ON_SUPERDEBUG(, SrcLocationInfo location))</argsstring>
        <name>SSpush</name>
        <param>
          <type><ref refid="struct_super_stack" kindref="compound">SuperStack</ref> *</type>
          <declname>stk</declname>
        </param>
        <param>
          <type><ref refid="struct_name_table" kindref="compound">element_t</ref> value </type>
          <declname>ON_SUPERDEBUG</declname>
          <array>, SrcLocationInfo location</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/SuperStack/SuperStack.h" line="76" column="11" bodyfile="ATC/SuperStack/SuperStack.cpp" bodystart="83" bodyend="121" declfile="ATC/SuperStack/SuperStack.h" declline="76" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="_super_stack_8h_1af20aca9109cf8918b7cf026fab287591" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_name_table" kindref="compound">element_t</ref></type>
        <definition>element_t SSpop</definition>
        <argsstring>(SuperStack *stk ON_SUPERDEBUG(, SrcLocationInfo location))</argsstring>
        <name>SSpop</name>
        <param>
          <type><ref refid="struct_super_stack" kindref="compound">SuperStack</ref> *stk </type>
          <declname>ON_SUPERDEBUG</declname>
          <array>, SrcLocationInfo location</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/SuperStack/SuperStack.h" line="79" column="11" bodyfile="ATC/SuperStack/SuperStack.cpp" bodystart="123" bodyend="147" declfile="ATC/SuperStack/SuperStack.h" declline="79" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="_super_stack_8h_1a52b28076b2550a525c6ef21740ba4f15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_name_table" kindref="compound">element_t</ref></type>
        <definition>element_t SStop</definition>
        <argsstring>(SuperStack *stk ON_SUPERDEBUG(, SrcLocationInfo location))</argsstring>
        <name>SStop</name>
        <param>
          <type><ref refid="struct_super_stack" kindref="compound">SuperStack</ref> *stk </type>
          <declname>ON_SUPERDEBUG</declname>
          <array>, SrcLocationInfo location</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/SuperStack/SuperStack.h" line="82" column="11" bodyfile="ATC/SuperStack/SuperStack.cpp" bodystart="149" bodyend="161" declfile="ATC/SuperStack/SuperStack.h" declline="82" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="_super_stack_8h_1a25dc901fa32b48a05930150680c76794" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>ssize_t StackGetTop</definition>
        <argsstring>(SuperStack *stk)</argsstring>
        <name>StackGetTop</name>
        <param>
          <type><ref refid="struct_super_stack" kindref="compound">SuperStack</ref> *</type>
          <declname>stk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/SuperStack/SuperStack.h" line="86" column="12" bodyfile="ATC/SuperStack/SuperStack.cpp" bodystart="210" bodyend="214" declfile="ATC/SuperStack/SuperStack.h" declline="86" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="_super_stack_8h_1a5f92f834d260825b7142ba8c4f82e49e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_name_table" kindref="compound">element_t</ref></type>
        <definition>element_t StackLook</definition>
        <argsstring>(SuperStack *stk, ssize_t index)</argsstring>
        <name>StackLook</name>
        <param>
          <type><ref refid="struct_super_stack" kindref="compound">SuperStack</ref> *</type>
          <declname>stk</declname>
        </param>
        <param>
          <type>ssize_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/SuperStack/SuperStack.h" line="87" column="11" bodyfile="ATC/SuperStack/SuperStack.cpp" bodystart="216" bodyend="228" declfile="ATC/SuperStack/SuperStack.h" declline="87" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="_super_stack_8h_1a0cec4cca50420e57c5aaa0b0bf9ae56e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SSdump</definition>
        <argsstring>(SuperStack *negoden, unsigned flag_err ON_SUPERDEBUG(, SrcLocationInfo src_inf, const char *calling_func))</argsstring>
        <name>SSdump</name>
        <param>
          <type><ref refid="struct_super_stack" kindref="compound">SuperStack</ref> *</type>
          <declname>negoden</declname>
        </param>
        <param>
          <type>unsigned flag_err </type>
          <declname>ON_SUPERDEBUG</declname>
          <array>, SrcLocationInfo src_inf, const char *calling_func</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/SuperStack/SuperStack.h" line="104" column="10" declfile="ATC/SuperStack/SuperStack.h" declline="104" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="_super_stack_8h_1adb3a46072965c48248a2da346d48cb8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned MedComissionSS</definition>
        <argsstring>(SuperStack *prezyvnik)</argsstring>
        <name>MedComissionSS</name>
        <param>
          <type><ref refid="struct_super_stack" kindref="compound">SuperStack</ref> *</type>
          <declname>prezyvnik</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ATC/SuperStack/SuperStack.h" line="107" column="10" bodyfile="ATC/SuperStack/DebugFunctions.cpp" bodystart="6" bodyend="59" declfile="ATC/SuperStack/SuperStack.h" declline="107" declcolumn="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>SUPER_DUPER_MEGA_XUEGA_STACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SUPER_DUPER_MEGA_XUEGA_STACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wconversion&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor">#include<sp/>&quot;SuperStackConfig.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;my_safety.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;my_log.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ON_SUPERDEBUG(...)<sp/>__VA_ARGS__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ON_SUPERDEBUG(...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_HEAP_MIN_CAPACITY_<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_ELEMENT_T_SIZE_<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_name_table" kindref="compound">element_t</ref>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>super_stack_status</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>UNINITIALIZED,<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>INITIALIZED,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>INITIALIZATION_ERR,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DEAD,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>DESTRUCTOR_ERR,<sp/></highlight><highlight class="comment">//WALKING_DEAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>SuperStackCtorErr</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL_STK_PTR_CTR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-2,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>WRONG_CAPACITY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-3,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>INITIALIZED_STACK<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-4,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>ERROR_INITIALIZATION<sp/><sp/><sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>SUCCESS_INITIALIZATION<sp/>=<sp/><sp/>1,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>CANARY;</highlight></codeline>
<codeline lineno="44" refid="struct_super_stack" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_super_stack" kindref="compound">SuperStack</ref></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifndef<sp/>NCANARY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>CANARY<sp/>opening_canary;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_name_table" kindref="compound">element_t</ref>*<sp/>heap;</highlight><highlight class="comment">//<sp/>NULL<sp/>is<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>capacity;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>ssize_t<sp/><sp/><sp/><sp/>top;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status;</highlight><highlight class="comment">//<sp/>UNINITIALIZED<sp/>is<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifndef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>SrcLocationInfo<sp/>init_inf;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifndef<sp/>NHASH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>heapHash;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hash;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifndef<sp/>NCANARY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>CANARY<sp/>closing_canary;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>SuperStackCtor<sp/>(<ref refid="struct_super_stack" kindref="compound">SuperStack</ref>*<sp/>stk,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>capacity</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ON_SUPERDEBUG(<sp/>,<sp/>SrcLocationInfo<sp/>init_inf)<sp/><sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SuperStackDtor<sp/>(<ref refid="struct_super_stack" kindref="compound">SuperStack</ref>*<sp/>stk<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ON_SUPERDEBUG(<sp/>,<sp/>SrcLocationInfo<sp/>location)<sp/><sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SSpush<sp/><sp/><sp/><sp/>(<ref refid="struct_super_stack" kindref="compound">SuperStack</ref>*<sp/>stk,<sp/><ref refid="struct_name_table" kindref="compound">element_t</ref><sp/>value</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ON_SUPERDEBUG(<sp/>,<sp/>SrcLocationInfo<sp/><sp/>location)<sp/><sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="struct_name_table" kindref="compound">element_t</ref><sp/>SSpop<sp/><sp/><sp/><sp/><sp/>(<ref refid="struct_super_stack" kindref="compound">SuperStack</ref>*<sp/>stk</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ON_SUPERDEBUG(<sp/>,<sp/>SrcLocationInfo<sp/><sp/>location)<sp/><sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><ref refid="struct_name_table" kindref="compound">element_t</ref><sp/>SStop<sp/><sp/><sp/><sp/><sp/>(<ref refid="struct_super_stack" kindref="compound">SuperStack</ref>*<sp/>stk<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ded&apos;s<sp/>old<sp/>jokes:<sp/>{<sp/>return<sp/>ZZTop();<sp/>};<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ON_SUPERDEBUG(<sp/>,<sp/>SrcLocationInfo<sp/>location)<sp/><sp/><sp/>);<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">ssize_t<sp/><sp/><sp/><sp/>StackGetTop<sp/>(<ref refid="struct_super_stack" kindref="compound">SuperStack</ref>*<sp/>stk);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><ref refid="struct_name_table" kindref="compound">element_t</ref><sp/>StackLook<sp/><sp/><sp/>(<ref refid="struct_super_stack" kindref="compound">SuperStack</ref>*<sp/>stk,<sp/>ssize_t<sp/>index);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>StackCtor(stk_ptr,<sp/>capacity)<sp/>SuperStackCtor<sp/>(stk_ptr,<sp/>capacity<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ON_SUPERDEBUG(,<sp/>init_inf(stk_ptr))<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>StackDtor(stk_ptr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SuperStackDtor<sp/>(stk_ptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ON_SUPERDEBUG(,<sp/>src_loc(stk_ptr))<sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>StackPush(stk_ptr,<sp/>value)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SSpush<sp/><sp/><sp/><sp/><sp/>(stk_ptr,<sp/>value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ON_SUPERDEBUG(,<sp/>src_loc(stk_ptr))<sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>StackPop(stk_ptr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SSpop<sp/><sp/><sp/><sp/><sp/><sp/>(stk_ptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ON_SUPERDEBUG(,<sp/>src_loc(stk_ptr))<sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>StackTop(stk_ptr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SStop<sp/><sp/><sp/><sp/><sp/><sp/>(stk_ptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ON_SUPERDEBUG(,<sp/>src_loc(stk_ptr))<sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>SSdump<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct_super_stack" kindref="compound">SuperStack</ref>*<sp/>negoden,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>flag_err<sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ON_SUPERDEBUG(,<sp/>SrcLocationInfo<sp/>src_inf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>calling_func));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>MedComissionSS<sp/>(<ref refid="struct_super_stack" kindref="compound">SuperStack</ref>*<sp/>prezyvnik);<sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>fuckDump(stk)<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SSdump(stk,<sp/>MedComissionSS(stk),<sp/>init_inf(stk),<sp/>__func__)<sp/></highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="ATC/SuperStack/SuperStack.h"/>
  </compounddef>
</doxygen>
