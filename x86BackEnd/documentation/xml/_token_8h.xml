<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_token_8h" kind="file" language="C++">
    <compoundname>Token.h</compoundname>
    <includes refid="_name_table_8h" local="yes">NameTable.h</includes>
    <includedby refid="_lexical_ctx_8h" local="yes">src/Legacy/Common/LexicalCtx/LexicalCtx.h</includedby>
    <includedby refid="_program_8h" local="yes">src/Legacy/Common/Structures/Program/Program.h</includedby>
    <includedby refid="_tabels_8h" local="yes">src/Legacy/Common/Structures/Tabels/Tabels.h</includedby>
    <includedby refid="_token_8cpp" local="yes">src/Legacy/Common/Structures/Token/Token.cpp</includedby>
    <incdepgraph>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="2">
        <label>NameTable.h</label>
        <link refid="_name_table_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/Legacy/Common/Structures/Token/Token.h</label>
        <link refid="_token_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="9">
        <label>src/Legacy/SetTokenTree.h</label>
        <link refid="_set_token_tree_8h_source"/>
      </node>
      <node id="7">
        <label>src/Legacy/Common/Utils/DefGraphVis.h</label>
        <link refid="_def_graph_vis_8h_source"/>
      </node>
      <node id="14">
        <label>ATC/SuperStack/SuperStack.h</label>
        <link refid="_super_stack_8h_source"/>
      </node>
      <node id="2">
        <label>src/Legacy/Common/LexicalCtx/LexicalCtx.h</label>
        <link refid="_lexical_ctx_8h_source"/>
      </node>
      <node id="13">
        <label>ATC/SuperStack/DebugFunctions.h</label>
        <link refid="_debug_functions_8h_source"/>
      </node>
      <node id="11">
        <label>src/Legacy/Common/Structures/Tabels/Tabels.h</label>
        <link refid="_tabels_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/Legacy/Common/Utils/LangUtils.h</label>
        <link refid="_lang_utils_8h_source"/>
      </node>
      <node id="12">
        <label>src/Legacy/SuperStackConfig.h</label>
        <link refid="_super_stack_config_8h_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>src/Legacy/TranslateToAsm.h</label>
        <link refid="_translate_to_asm_8h_source"/>
      </node>
      <node id="6">
        <label>src/Legacy/Common/StandartAWP/StandartAWP.h</label>
        <link refid="_standart_a_w_p_8h_source"/>
      </node>
      <node id="1">
        <label>src/Legacy/Common/Structures/Token/Token.h</label>
        <link refid="_token_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/Legacy/Common/Structures/Program/Program.h</label>
        <link refid="_program_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/IR/AstToIR/AstToIR.h</label>
        <link refid="_ast_to_i_r_8h_source"/>
      </node>
      <node id="5">
        <label>src/Legacy/AsmCtx.h</label>
        <link refid="_asm_ctx_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="union_token_value" prot="public">TokenValue</innerclass>
    <innerclass refid="struct_token" prot="public">Token</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="_token_8h_1af22491067d3396cffafa623948899caa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_token" kindref="compound">Token</ref> *</type>
        <definition>Token* NewToken</definition>
        <argsstring>(int type=0, TokenValue value={0}, Token *left_child=nullptr, Token *right_child=nullptr)</argsstring>
        <name>NewToken</name>
        <param>
          <type>int</type>
          <declname>type</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="union_token_value" kindref="compound">TokenValue</ref></type>
          <declname>value</declname>
          <defval>{0}</defval>
        </param>
        <param>
          <type><ref refid="struct_token" kindref="compound">Token</ref> *</type>
          <declname>left_child</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type><ref refid="struct_token" kindref="compound">Token</ref> *</type>
          <declname>right_child</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Legacy/Common/Structures/Token/Token.h" line="42" column="7" bodyfile="src/Legacy/Common/Structures/Token/Token.cpp" bodystart="5" bodyend="20" declfile="src/Legacy/Common/Structures/Token/Token.h" declline="42" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="_token_8h_1a2df97003fd41c192f68df2d7e35868d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DeleteBranch</definition>
        <argsstring>(Token *def_node)</argsstring>
        <name>DeleteBranch</name>
        <param>
          <type><ref refid="struct_token" kindref="compound">Token</ref> *</type>
          <declname>def_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Legacy/Common/Structures/Token/Token.h" line="45" column="5" bodyfile="src/Legacy/Common/Structures/Token/Token.cpp" bodystart="22" bodyend="37" declfile="src/Legacy/Common/Structures/Token/Token.h" declline="45" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wlarger-than=&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>for<sp/>lasan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;NameTable.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="union_token_value" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="union_token_value" kindref="compound">TokenValue</ref></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>t_instruction;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/>t_operator;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t_constant;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>t_initializator;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>t_native_function;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>t_function_ret_type;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>char*<sp/><sp/>t_string;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/>t_name_ptr;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>t_name_id;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>t_number_of_variables;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>t_varible_number;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="struct_token" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_token" kindref="compound">Token</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_token" kindref="compound">Token</ref>*<sp/><sp/>left_child;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_token" kindref="compound">Token</ref>*<sp/>right_child;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type;<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="union_token_value" kindref="compound">TokenValue</ref><sp/>value;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_label" kindref="compound">Label</ref>*<sp/>t_label_ptr;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifndef<sp/>N_SRC_INFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr_to_src_code;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indent;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><ref refid="struct_token" kindref="compound">Token</ref>*<sp/>NewToken<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="union_token_value" kindref="compound">TokenValue</ref><sp/>value<sp/>=<sp/>{0},</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_token" kindref="compound">Token</ref>*<sp/>left_child<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/><ref refid="struct_token" kindref="compound">Token</ref>*<sp/><sp/><sp/><sp/><sp/>right_child<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DeleteBranch<sp/>(<ref refid="struct_token" kindref="compound">Token</ref>*<sp/>def_node);</highlight></codeline>
    </programlisting>
    <location file="src/Legacy/Common/Structures/Token/Token.h"/>
  </compounddef>
</doxygen>
