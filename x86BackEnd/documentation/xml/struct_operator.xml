<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="struct_operator" kind="struct" language="C++" prot="public">
    <compoundname>Operator</compoundname>
    <basecompoundref refid="class_instruction" prot="public" virt="non-virtual">Instruction</basecompoundref>
    <includes refid="_instructions_8h" local="no">Instructions.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_operator_1ab4b2821774d38b3a77f971a2e8d46035" prot="public" static="no" mutable="no">
        <type>enum OperatorType</type>
        <definition>enum OperatorType Operator::op_type</definition>
        <argsstring></argsstring>
        <name>op_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Instructions/Instructions.h" line="163" column="13" bodyfile="src/IR/Instructions/Instructions.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_operator_1aa4d7a66d96350b2dc6fbf0fed4614ffb" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_value" kindref="compound">Value</ref> *</type>
        <definition>const Value* Operator::left_op</definition>
        <argsstring></argsstring>
        <name>left_op</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Instructions/Instructions.h" line="189" column="21" bodyfile="src/IR/Instructions/Instructions.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_operator_1a3f962692ee98f861e577a40ded63fb8f" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_value" kindref="compound">Value</ref> *</type>
        <definition>const Value* Operator::right_op</definition>
        <argsstring></argsstring>
        <name>right_op</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Instructions/Instructions.h" line="190" column="21" bodyfile="src/IR/Instructions/Instructions.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_operator_1a7f81b636bded4f1af0b740676cce6d57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Operator::Operator</definition>
        <argsstring>(name_t name_param, enum OperatorType op_type_param, const Value *left_param, const Value *right_param)</argsstring>
        <name>Operator</name>
        <param>
          <type>name_t</type>
          <declname>name_param</declname>
        </param>
        <param>
          <type>enum OperatorType</type>
          <declname>op_type_param</declname>
        </param>
        <param>
          <type>const <ref refid="class_value" kindref="compound">Value</ref> *</type>
          <declname>left_param</declname>
        </param>
        <param>
          <type>const <ref refid="class_value" kindref="compound">Value</ref> *</type>
          <declname>right_param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Instructions/Instructions.h" line="193" column="9" bodyfile="src/IR/Instructions/Instruction.cpp" bodystart="126" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="struct_operator_1ace58f28108c18eb3b9480a6e70cdc354" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Operator::~Operator</definition>
        <argsstring>()=default</argsstring>
        <name>~Operator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Instructions/Instructions.h" line="196" column="8"/>
      </memberdef>
      <memberdef kind="function" id="struct_operator_1ab38ae88a168aa17a8227f5598a5a216a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Operator::dump</definition>
        <argsstring>() const override</argsstring>
        <name>dump</name>
        <reimplements refid="class_instruction_1a8b89720a9e81b5034f384acf2584fe74">dump</reimplements>
        <briefdescription>
<para>Print <ref refid="class_value" kindref="compound">Value</ref> in human-readable format to file DUMP. </para>
        </briefdescription>
        <detaileddescription>
<para>Print <ref refid="class_value" kindref="compound">Value</ref> in human-readable format to file DUMP. PRINT_NEW_LINES regulates if printed <ref refid="class_value" kindref="compound">Value</ref> generates extra new line chars </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Instructions/Instructions.h" line="198" column="24" bodyfile="src/IR/DumpIR/DumpIR.cpp" bodystart="159" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="struct_operator_1aa6d95336b6c990924a9a8c56cbc3b8d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>InstructionType</type>
        <definition>InstructionType Operator::get_instr_type</definition>
        <argsstring>() const override</argsstring>
        <name>get_instr_type</name>
        <reimplements refid="class_instruction_1a5794ed6986bad233a819137af502519a">get_instr_type</reimplements>
        <briefdescription>
<para>Get instr_type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>debug purpose only </para>
</simplesect>
<simplesect kind="return"><para>InstructionType </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Instructions/Instructions.h" line="199" column="24" bodyfile="src/IR/Instructions/Instruction.cpp" bodystart="136" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="struct_operator_1a980a9871f1ae7b2091a0893acee001c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Operator::translate_x86</definition>
        <argsstring>(Context *ctx) const override</argsstring>
        <name>translate_x86</name>
        <reimplements refid="class_instruction_1a490849f5712f281da374de8de683069b">translate_x86</reimplements>
        <param>
          <type><ref refid="struct_context" kindref="compound">Context</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Translate <ref refid="class_value" kindref="compound">Value</ref> to x86 code. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Instructions/Instructions.h" line="201" column="13" bodyfile="src/IR/TranslateTox86/TranslateIRTox86.cpp" bodystart="346" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="struct_operator_1a0e2f9342c0bbdaaee61db08fe34b9787" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Operator::set_storage</definition>
        <argsstring>() const override</argsstring>
        <name>set_storage</name>
        <reimplements refid="class_instruction_1a4d0dfb9af1468c0ad0c5e3b0b39df7ac">set_storage</reimplements>
        <briefdescription>
<para>Set the <emphasis>storage</emphasis> </para>
        </briefdescription>
        <detaileddescription>
<para>This functions sets <emphasis>storage_type</emphasis> for value In <ref refid="class_function" kindref="compound">Function</ref> and <ref refid="class_base_block" kindref="compound">BaseBlock</ref> this function call this this function for all objects from their ValueArr&lt;&gt; members <simplesect kind="note"><para>for <ref refid="class_constant" kindref="compound">Constant</ref> this function only checks <emphasis>storage_type</emphasis> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/IR/Instructions/Instructions.h" line="202" column="13" bodyfile="src/IR/Storage/Storage.cpp" bodystart="185" bodyend="191"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Math operation instruction. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Operator</label>
        <link refid="struct_operator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Instruction</label>
        <link refid="class_instruction"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>NoCopyable</label>
        <link refid="class_no_copyable"/>
      </node>
      <node id="3">
        <label>Value</label>
        <link refid="class_value"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>Storage</label>
        <link refid="class_storage"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Operator</label>
        <link refid="struct_operator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>left_op</edgelabel>
          <edgelabel>right_op</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>Instruction</label>
        <link refid="class_instruction"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>NoCopyable</label>
        <link refid="class_no_copyable"/>
      </node>
      <node id="3">
        <label>Value</label>
        <link refid="class_value"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>storage</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/IR/Instructions/Instructions.h" line="184" column="1" bodyfile="src/IR/Instructions/Instructions.h" bodystart="185" bodyend="203"/>
    <listofallmembers>
      <member refid="struct_operator_1ab38ae88a168aa17a8227f5598a5a216a" prot="public" virt="virtual"><scope>Operator</scope><name>dump</name></member>
      <member refid="struct_operator_1aa6d95336b6c990924a9a8c56cbc3b8d7" prot="public" virt="virtual"><scope>Operator</scope><name>get_instr_type</name></member>
      <member refid="class_value_1a86a3eef266571401ec6c189abaaf106d" prot="public" virt="non-virtual"><scope>Operator</scope><name>get_name</name></member>
      <member refid="class_value_1ad8439f42b7727f74160f4d4233300b73" prot="public" virt="non-virtual"><scope>Operator</scope><name>get_storage</name></member>
      <member refid="class_instruction_1a1834df9dd269df28fd946671d29e1e0d" prot="public" virt="virtual"><scope>Operator</scope><name>get_type</name></member>
      <member refid="class_instruction_1a84d2688e801420c6d6df3aec3e33fef7" prot="public" virt="non-virtual"><scope>Operator</scope><name>Instruction</name></member>
      <member refid="struct_operator_1aa4d7a66d96350b2dc6fbf0fed4614ffb" prot="public" virt="non-virtual"><scope>Operator</scope><name>left_op</name></member>
      <member refid="class_value_1a62d78645b07ba16cce8dbaec863b13ab" prot="protected" virt="non-virtual"><scope>Operator</scope><name>name</name></member>
      <member refid="class_no_copyable_1ade9c96e3484b122001dd4f42e6c28047" prot="public" virt="non-virtual"><scope>Operator</scope><name>NoCopyable</name></member>
      <member refid="class_no_copyable_1a00d3c509a77e0c5e25d92714551c54d1" prot="public" virt="non-virtual"><scope>Operator</scope><name>NoCopyable</name></member>
      <member refid="struct_operator_1ab4b2821774d38b3a77f971a2e8d46035" prot="public" virt="non-virtual"><scope>Operator</scope><name>op_type</name></member>
      <member refid="struct_operator_1a7f81b636bded4f1af0b740676cce6d57" prot="public" virt="non-virtual"><scope>Operator</scope><name>Operator</name></member>
      <member refid="class_no_copyable_1a976985434b31929677d366614d803157" prot="public" virt="non-virtual"><scope>Operator</scope><name>operator=</name></member>
      <member refid="class_value_1ab68f4bce225da0bdba8085c85b90ca0f" prot="public" virt="non-virtual"><scope>Operator</scope><name>put_to_reg</name></member>
      <member refid="struct_operator_1a3f962692ee98f861e577a40ded63fb8f" prot="public" virt="non-virtual"><scope>Operator</scope><name>right_op</name></member>
      <member refid="struct_operator_1a0e2f9342c0bbdaaee61db08fe34b9787" prot="public" virt="virtual"><scope>Operator</scope><name>set_storage</name></member>
      <member refid="class_value_1a3cb086c23a5174753c024a49ed180ab3" prot="protected" virt="non-virtual"><scope>Operator</scope><name>storage</name></member>
      <member refid="struct_operator_1a980a9871f1ae7b2091a0893acee001c6" prot="public" virt="virtual"><scope>Operator</scope><name>translate_x86</name></member>
      <member refid="class_instruction_1ab4921a8785d375412dfb1505a7265926" prot="protected" virt="non-virtual"><scope>Operator</scope><name>type</name></member>
      <member refid="class_value_1a34b3fd7da89c8da39158746671fff0f6" prot="public" virt="non-virtual"><scope>Operator</scope><name>Value</name></member>
      <member refid="class_instruction_1abb33fefaac04fc6794349ec8a6d68304" prot="public" virt="non-virtual"><scope>Operator</scope><name>~Instruction</name></member>
      <member refid="class_no_copyable_1a6704c3bd291a78054b26b83a63af0756" prot="public" virt="virtual"><scope>Operator</scope><name>~NoCopyable</name></member>
      <member refid="struct_operator_1ace58f28108c18eb3b9480a6e70cdc354" prot="public" virt="non-virtual"><scope>Operator</scope><name>~Operator</name></member>
      <member refid="class_value_1a71443c24b0e8b94a71c3315b11c30e98" prot="public" virt="virtual"><scope>Operator</scope><name>~Value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
