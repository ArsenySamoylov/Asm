.TH "src/IR/Value/Value.h" 3 "Mon Jun 5 2023" "x86Backend" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/IR/Value/Value.h \- This file contains declaration of \fBValue\fP class and its derived classes (only exception is \fBInstruction\fP; it declared in \fBInstructions\&.h\fP)  

.SH SYNOPSIS
.br
.PP
\fC#include <cstddef>\fP
.br
\fC#include 'ValueArrTemplate\&.h'\fP
.br
\fC#include 'Storage\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBValue\fP"
.br
.RI "Abstract class for IR object\&. "
.ti -1c
.RI "class \fBBaseBlock\fP"
.br
.RI "Block of Instructions\&. "
.ti -1c
.RI "class \fBConstant\fP"
.br
.RI "Double constant\&. "
.ti -1c
.RI "class \fBGlobalVar\fP"
.br
.RI "Global Variable\&. "
.ti -1c
.RI "class \fBFunction\fP"
.br
.RI "\fBFunction\fP\&. "
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum class \fBValueType\fP { \fBFunction\fP, \fBGlobalVar\fP, \fBBaseBlock\fP, \fBConstant\fP, \fBInstruction\fP, \fBValue\fP }"
.br
.ti -1c
.RI "enum class \fBVariableBaseType\fP { \fBDouble\fP, \fBInt\fP, \fBChar\fP }"
.br
.ti -1c
.RI "enum class \fBFunctionRetType\fP { \fBDouble\fP, \fBVoid\fP }"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const int \fBPRECISION\fP = 100"
.br
.ti -1c
.RI "const data_t \fBBAD_VALUE\fP = \-666"
.br
.in -1c
.SH "Detailed Description"
.PP 
This file contains declaration of \fBValue\fP class and its derived classes (only exception is \fBInstruction\fP; it declared in \fBInstructions\&.h\fP) 


.SH "Author"
.PP 
Generated automatically by Doxygen for x86Backend from the source code\&.
