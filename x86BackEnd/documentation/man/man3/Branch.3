.TH "Branch" 3 "Mon Jun 5 2023" "x86Backend" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Branch \- \fBInstruction\fP to pass control flow\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Instructions\&.h>\fP
.PP
Inherits \fBInstruction\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBBranch\fP (name_t name_param, const \fBValue\fP *condition_param, const \fBBaseBlock\fP *true_block_param, const \fBBaseBlock\fP *false_block_param)"
.br
.ti -1c
.RI "void \fBdump\fP () const override"
.br
.RI "Print \fBValue\fP in human-readable format to file DUMP\&. "
.ti -1c
.RI "InstructionType \fBget_instr_type\fP () const override"
.br
.RI "Get instr_type\&. "
.ti -1c
.RI "void \fBtranslate_x86\fP (\fBContext\fP *ctx) const override"
.br
.RI "Translate \fBValue\fP to x86 code\&. "
.ti -1c
.RI "void \fBset_storage\fP () const override"
.br
.RI "Set the \fIstorage\fP "
.ti -1c
.RI "void \fBset_true_block\fP (const \fBBaseBlock\fP *true_block_param)"
.br
.ti -1c
.RI "void \fBset_false_block\fP (const \fBBaseBlock\fP *false_block_param)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
\fBInstruction\fP to pass control flow\&. 
.SH "Member Function Documentation"
.PP 
.SS "void Branch::dump () const\fC [override]\fP, \fC [virtual]\fP"

.PP
Print \fBValue\fP in human-readable format to file DUMP\&. Print \fBValue\fP in human-readable format to file DUMP\&. PRINT_NEW_LINES regulates if printed \fBValue\fP generates extra new line chars 
.PP
Implements \fBInstruction\fP\&.
.SS "InstructionType Branch::get_instr_type () const\fC [override]\fP, \fC [virtual]\fP"

.PP
Get instr_type\&. 
.PP
\fBNote\fP
.RS 4
debug purpose only 
.RE
.PP
\fBReturns\fP
.RS 4
InstructionType 
.RE
.PP

.PP
Implements \fBInstruction\fP\&.
.SS "void Branch::set_storage () const\fC [override]\fP, \fC [virtual]\fP"

.PP
Set the \fIstorage\fP This functions sets \fIstorage_type\fP for value In \fBFunction\fP and \fBBaseBlock\fP this function call this this function for all objects from their ValueArr<> members 
.PP
\fBNote\fP
.RS 4
for \fBConstant\fP this function only checks \fIstorage_type\fP 
.RE
.PP

.PP
Implements \fBInstruction\fP\&.
.SS "void Branch::translate_x86 (\fBContext\fP * ctx) const\fC [override]\fP, \fC [virtual]\fP"

.PP
Translate \fBValue\fP to x86 code\&. 
.PP
\fBParameters\fP
.RS 4
\fIctx\fP 
.RE
.PP

.PP
Implements \fBInstruction\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for x86Backend from the source code\&.
