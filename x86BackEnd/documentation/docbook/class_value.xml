<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_value" xml:lang="en-US">
<title>Value Class Reference</title>
<indexterm><primary>Value</primary></indexterm>
<para>

<para>Abstract class for IR object. </para>
 
</para>
<para>
<computeroutput>#include &lt;Value.h&gt;</computeroutput>
</para>
Inheritance diagram for Value:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_value__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for Value:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_value__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_value_1a34b3fd7da89c8da39158746671fff0f6"/><emphasis role="strong">Value</emphasis> (ValueType type_param, name_t name_param)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_value_1a86a3eef266571401ec6c189abaaf106d"/>name_t <emphasis role="strong">get_name</emphasis> () const</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_value_1ad58adc30ecd6e33f8344b76bb94ad9a9">dump</link> () const =0</para>

<para>Print <link linkend="_class_value">Value</link> in human-readable format to file DUMP. </para>
</listitem>
            <listitem><para>virtual ValueType <link linkend="_class_value_1a81566c2e0f8d9c81fe18ad4ae251e471">get_type</link> () const =0</para>

<para>Get <link linkend="_class_value">Value</link> type. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_value_1a5c80febbb8171e7c60cdd1598c47fe53">translate_x86</link> (<link linkend="_struct_context">Context</link> *ctx) const =0</para>

<para>Translate <link linkend="_class_value">Value</link> to x86 code. </para>
</listitem>
            <listitem><para>GPRegisterNumber <link linkend="_class_value_1ab68f4bce225da0bdba8085c85b90ca0f">put_to_reg</link> (<link linkend="_struct_context">Context</link> *ctx) const</para>

<para>Puts <link linkend="_class_value">Value</link> to reg. </para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_value_1a8bc56c2cc9d6cb4aade7084277d9df26">set_storage</link> () const =0</para>

<para>Set the <emphasis>storage</emphasis> </para>
</listitem>
            <listitem><para><link linkend="_class_storage">Storage</link> * <link linkend="_class_value_1ad8439f42b7727f74160f4d4233300b73">get_storage</link> () const</para>

<para>Get the storage member. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_value_1a0353abaaf3f5a0bf5a01c8daad238449"/>enum ValueType <emphasis role="strong">type</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_value_1a62d78645b07ba16cce8dbaec863b13ab"/>const name_t <emphasis role="strong">name</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_class_value_1a3cb086c23a5174753c024a49ed180ab3"/><link linkend="_class_storage">Storage</link> <emphasis role="strong">storage</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Abstract class for IR object. </para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_value_1ad58adc30ecd6e33f8344b76bb94ad9a9"/>    <section>
    <title>dump()</title>
<indexterm><primary>dump</primary><secondary>Value</secondary></indexterm>
<indexterm><primary>Value</primary><secondary>dump</secondary></indexterm>
<para><computeroutput>virtual void Value::dump ( ) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Print <link linkend="_class_value">Value</link> in human-readable format to file DUMP. </para>
</para>

<para>Print <link linkend="_class_value">Value</link> in human-readable format to file DUMP. PRINT_NEW_LINES regulates if printed <link linkend="_class_value">Value</link> generates extra new line chars </para>
<para>
Implemented in <link linkend="_class_instruction_1a8b89720a9e81b5034f384acf2584fe74">Instruction</link>, <link linkend="_class_function_1aef307ac19141a13c5d3cbe9d6fad6551">Function</link>, <link linkend="_class_global_var_1a296cd305d43993d19d262c98f6c158cc">GlobalVar</link>, <link linkend="_class_constant_1afdecb02c8d897255c1c8884c6fa607a0">Constant</link>, <link linkend="_class_base_block_1ab90a362d8bcd71c015102a5965843d79">BaseBlock</link>, <link linkend="_struct_operator_1ab38ae88a168aa17a8227f5598a5a216a">Operator</link>, <link linkend="_struct_return_1ac88922f7e3bab1ece0eec23eefe4726b">Return</link>, <link linkend="_class_call_1a54ed26dbf1e6cc76bff3b57c9c696e10">Call</link>, <link linkend="_class_branch_1a14d5e915388e5a1a63b6ff33ba8e942f">Branch</link>, <link linkend="_class_load_1a2ffe39a4cc70a22934d4619754d8da5b">Load</link>, and <link linkend="_class_store_1af9f11c9b5e26c934fdc8d1cdf34069de">Store</link>.</para>
    </section><anchor xml:id="_class_value_1ad8439f42b7727f74160f4d4233300b73"/>    <section>
    <title>get_storage()</title>
<indexterm><primary>get_storage</primary><secondary>Value</secondary></indexterm>
<indexterm><primary>Value</primary><secondary>get_storage</secondary></indexterm>
<para><computeroutput><link linkend="_class_storage">Storage</link> * Value::get_storage ( ) const</computeroutput></para><para>

<para>Get the storage member. </para>
</para>

<para><formalpara><title>Returns</title>

<para>Storage* </para>
</formalpara>
</para>
    </section><anchor xml:id="_class_value_1a81566c2e0f8d9c81fe18ad4ae251e471"/>    <section>
    <title>get_type()</title>
<indexterm><primary>get_type</primary><secondary>Value</secondary></indexterm>
<indexterm><primary>Value</primary><secondary>get_type</secondary></indexterm>
<para><computeroutput>virtual ValueType Value::get_type ( ) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Get <link linkend="_class_value">Value</link> type. </para>
</para>

<para><note><title>Note</title>

<para>debug purpose only </para>
</note>
<formalpara><title>Returns</title>

<para>ValueType </para>
</formalpara>
</para>
<para>
Implemented in <link linkend="_class_instruction_1a1834df9dd269df28fd946671d29e1e0d">Instruction</link>, <link linkend="_class_function_1a6aa5d64a586011de3b15a82350538ae8">Function</link>, <link linkend="_class_global_var_1a568dd05f7dcd53d1533b143891bb6fc5">GlobalVar</link>, <link linkend="_class_constant_1a6abd835079904cba7f9a4271475facc1">Constant</link>, and <link linkend="_class_base_block_1ab680e5829bf197f7828b6261ac62e5f7">BaseBlock</link>.</para>
    </section><anchor xml:id="_class_value_1ab68f4bce225da0bdba8085c85b90ca0f"/>    <section>
    <title>put_to_reg()</title>
<indexterm><primary>put_to_reg</primary><secondary>Value</secondary></indexterm>
<indexterm><primary>Value</primary><secondary>put_to_reg</secondary></indexterm>
<para><computeroutput>GPRegisterNumber Value::put_to_reg (<link linkend="_struct_context">Context</link> * ctx) const</computeroutput></para><para>

<para>Puts <link linkend="_class_value">Value</link> to reg. </para>
</para>

<para>Depending on <emphasis>storage</emphasis> field this functions puts <link linkend="_class_value">Value</link> to register 
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>ctx</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>GPRegisterNumber </para>
</formalpara>
</para>
    </section><anchor xml:id="_class_value_1a8bc56c2cc9d6cb4aade7084277d9df26"/>    <section>
    <title>set_storage()</title>
<indexterm><primary>set_storage</primary><secondary>Value</secondary></indexterm>
<indexterm><primary>Value</primary><secondary>set_storage</secondary></indexterm>
<para><computeroutput>virtual void Value::set_storage ( ) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Set the <emphasis>storage</emphasis> </para>
</para>

<para>This functions sets <emphasis>storage_type</emphasis> for value In <link linkend="_class_function">Function</link> and <link linkend="_class_base_block">BaseBlock</link> this function call this this function for all objects from their ValueArr&lt;&gt; members <note><title>Note</title>

<para>for <link linkend="_class_constant">Constant</link> this function only checks <emphasis>storage_type</emphasis> </para>
</note>
</para>
<para>
Implemented in <link linkend="_class_instruction_1a4d0dfb9af1468c0ad0c5e3b0b39df7ac">Instruction</link>, <link linkend="_class_function_1a4e01eeef439880175f203f92f223213e">Function</link>, <link linkend="_class_global_var_1a2dd9e26d905287e8112b0a3e877326de">GlobalVar</link>, <link linkend="_class_constant_1a68fdf766ec2a3afb147835ffc6f9b12f">Constant</link>, <link linkend="_class_base_block_1aaf4bb16294f85cab75262a9fc80ca83c">BaseBlock</link>, <link linkend="_struct_operator_1a0e2f9342c0bbdaaee61db08fe34b9787">Operator</link>, <link linkend="_struct_return_1ab83a398c3a53e45be73a43534a6e5e19">Return</link>, <link linkend="_class_call_1a9839f2f2c88928629f80bd2df0f49cd3">Call</link>, <link linkend="_class_branch_1a5612f299d00d99a2499c961bb739aec5">Branch</link>, <link linkend="_class_load_1a1ca0f3a03d0885c059ca3516e9519e42">Load</link>, and <link linkend="_class_store_1ab07b234554d2c9ae8b7cd758077c9c1f">Store</link>.</para>
    </section><anchor xml:id="_class_value_1a5c80febbb8171e7c60cdd1598c47fe53"/>    <section>
    <title>translate_x86()</title>
<indexterm><primary>translate_x86</primary><secondary>Value</secondary></indexterm>
<indexterm><primary>Value</primary><secondary>translate_x86</secondary></indexterm>
<para><computeroutput>virtual void Value::translate_x86 (<link linkend="_struct_context">Context</link> * ctx) const<computeroutput>[pure virtual]</computeroutput></computeroutput></para><para>

<para>Translate <link linkend="_class_value">Value</link> to x86 code. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>ctx</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implemented in <link linkend="_class_instruction_1a490849f5712f281da374de8de683069b">Instruction</link>, <link linkend="_class_function_1afa24b0a4286dffad077c985708b97cbd">Function</link>, <link linkend="_class_global_var_1a07c47abeb2f0c4c18f2abaf2aca26cff">GlobalVar</link>, <link linkend="_class_constant_1a7308dce78679606aa72467fe63de5426">Constant</link>, <link linkend="_class_base_block_1ace2f438ad119bd610183103a39131101">BaseBlock</link>, <link linkend="_struct_operator_1a980a9871f1ae7b2091a0893acee001c6">Operator</link>, <link linkend="_struct_return_1aa83609e0489201eead089f31bdb4216d">Return</link>, <link linkend="_class_call_1a559c642d08f5d45404a4ab550714a91b">Call</link>, <link linkend="_class_branch_1a3139dda417192232452f7e330fe497dc">Branch</link>, <link linkend="_class_load_1a33776e091c7c4f20fa15a03c367c9acf">Load</link>, and <link linkend="_class_store_1a356cbb050d01381df30a3e135dfd4e3f">Store</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
src/IR/Value/<link linkend="__value_8h">Value.h</link>src/IR/TranslateTox86/TranslateIRTox86.cppsrc/IR/Value/Value.cpp</section>
</section>
