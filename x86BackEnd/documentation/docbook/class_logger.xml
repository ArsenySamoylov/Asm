<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_logger" xml:lang="en-US">
<title>Logger Class Reference</title>
<indexterm><primary>Logger</primary></indexterm>
Inheritance diagram for Logger:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_logger__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for Logger:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_logger__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_logger_1a4cde1d8ca535d67874f0ad44bbaae7a1"/>int <emphasis role="strong">getlevel</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_logger_1a607dadc2ecd86bd41d86aeae7902d1a6"/>int <emphasis role="strong">setlevel</emphasis> (int lvl)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_logger_1a6629ec8cecf76d82bfacd2a45ff350e7"/>int <emphasis role="strong">getindent</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_logger_1abee163d85d47f4987241a7e2ce07de5f"/>int <emphasis role="strong">setindent</emphasis> (int indnt)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_logger_1a9885276d1b1e4e6dd2993f2ff3a0be07"/>FILE * <emphasis role="strong">getlog</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_logger_1af960fc277810e8127ecdc98d6893d23a"/>void <emphasis role="strong">log</emphasis> (const char *format,...)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_logger_1ad0eb7e4d6845a4d9f93d29f674699d1b"/>void <emphasis role="strong">log_nolvl</emphasis> (const char *format,...)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_logger_1ac08e1c686879736ba7ce6fa0b1edfbab"/>void <emphasis role="strong">log_no_indent</emphasis> (const char *format,...)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_logger_1ae2215384ce7c16f3e70c20218439048d"/>void <emphasis role="strong">log_dup_console</emphasis> (const char *format,...)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_logger_1a2628d32511fba53c29168015536c7960"/>void <emphasis role="strong">logmsg</emphasis> (char *message)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_logger_1a24eaf8aebaf9695f358a1c83443202e9"/>void * <emphasis role="strong">CAL_LOG</emphasis> (size_t number_of_elmts, size_t size_of_elmts, const char *file, const char *func, int line)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_logger_1a1767e37972e7ae90ad2d9f84dfc16058"/>void <emphasis role="strong">FREE_LOG</emphasis> (void *break_free, const char *file, const char *func, int line)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_logger_1a644fcb73ab2cd3e21f2e528f26729b54"/>void * <emphasis role="strong">RECAL_LOG</emphasis> (void *ptr, size_t size, const char *file, const char *func, int line)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_logger_1a3bdfb2b4cbf3c49c14e891151ec87f21"/>void <emphasis role="strong">checkerrno</emphasis> (const char *format,...)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_logger_1accd72aaf8f579925d679562736135372"/>void <emphasis role="strong">logerror</emphasis> (int error_code, const char *format,...)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_logger_1a0b8b6f990bab8ab579508718cbdedad5"/>void <emphasis role="strong">logerrno</emphasis> (const char *format,...)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_logger_1a4c047a266fe18e29c4995905bee9e8c9"/>int <emphasis role="strong">LogMsgRet</emphasis> (int return_value, const char *format,...)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_logger_1ac6a15a4e249ffdde7de896cbdaa4a82c"/>void <emphasis role="strong">LogMsgNoRet</emphasis> (const char *format,...)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_logger_1aee76b8b7c5d34c108c35ffbfe456aced"/>std::nullptr_t <emphasis role="strong">LogMsgNullRet</emphasis> (const char *format,...)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_logger_1acebb37f5538780e6c14f13de6ec497bc"/>static <link linkend="_class_logger">Logger</link> &amp; <emphasis role="strong">getInstance</emphasis> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<para>
The documentation for this class was generated from the following files:</para>
ATC/Logger/Logger.hATC/Logger/Logger.cpp</section>
