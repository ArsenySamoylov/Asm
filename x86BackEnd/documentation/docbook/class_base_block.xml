<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_base_block" xml:lang="en-US">
<title>BaseBlock Class Reference</title>
<indexterm><primary>BaseBlock</primary></indexterm>
<para>

<para>Block of Instructions. </para>
 
</para>
<para>
<computeroutput>#include &lt;Value.h&gt;</computeroutput>
</para>
Inheritance diagram for BaseBlock:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_base_block__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for BaseBlock:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_base_block__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_base_block_1a9fd10bb1e3a87dfec36809ace3dccc35"/><emphasis role="strong">BaseBlock</emphasis> (name_t name_param)</para>
</listitem>
            <listitem><para>void <link linkend="_class_base_block_1ab90a362d8bcd71c015102a5965843d79">dump</link> () const override</para>

<para>Print <link linkend="_class_value">Value</link> in human-readable format to file DUMP. </para>
</listitem>
            <listitem><para>ValueType <link linkend="_class_base_block_1ab680e5829bf197f7828b6261ac62e5f7">get_type</link> () const override</para>

<para>Get <link linkend="_class_value">Value</link> type. </para>
</listitem>
            <listitem><para>void <link linkend="_class_base_block_1ace2f438ad119bd610183103a39131101">translate_x86</link> (<link linkend="_struct_context">Context</link> *ctx) const override</para>

<para>Translate <link linkend="_class_value">Value</link> to x86 code. </para>
</listitem>
            <listitem><para>void <link linkend="_class_base_block_1aaf4bb16294f85cab75262a9fc80ca83c">set_storage</link> () const override</para>

<para>Set the <emphasis>storage</emphasis> </para>
</listitem>
            <listitem><para><anchor xml:id="_class_base_block_1a496bc6a804fa84ecee9882e2970e17ba"/><link linkend="_class_instruction">Instruction</link> * <emphasis role="strong">add_instr</emphasis> (<link linkend="_class_instruction">Instruction</link> *instr)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_base_block_1af7028d741df123fdbaecf4bcd42cdd12"/>void <emphasis role="strong">set_address</emphasis> (address_t address) const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Block of Instructions. </para>



<para><link linkend="_class_base_block">BaseBlock</link> is array of Instructions that will be executed continuously. </para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_base_block_1ab90a362d8bcd71c015102a5965843d79"/>    <section>
    <title>dump()</title>
<indexterm><primary>dump</primary><secondary>BaseBlock</secondary></indexterm>
<indexterm><primary>BaseBlock</primary><secondary>dump</secondary></indexterm>
<para><computeroutput>void BaseBlock::dump ( ) const<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Print <link linkend="_class_value">Value</link> in human-readable format to file DUMP. </para>
</para>

<para>Print <link linkend="_class_value">Value</link> in human-readable format to file DUMP. PRINT_NEW_LINES regulates if printed <link linkend="_class_value">Value</link> generates extra new line chars </para>
<para>
Implements <link linkend="_class_value_1ad58adc30ecd6e33f8344b76bb94ad9a9">Value</link>.</para>
    </section><anchor xml:id="_class_base_block_1ab680e5829bf197f7828b6261ac62e5f7"/>    <section>
    <title>get_type()</title>
<indexterm><primary>get_type</primary><secondary>BaseBlock</secondary></indexterm>
<indexterm><primary>BaseBlock</primary><secondary>get_type</secondary></indexterm>
<para><computeroutput>ValueType BaseBlock::get_type ( ) const<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Get <link linkend="_class_value">Value</link> type. </para>
</para>

<para><note><title>Note</title>

<para>debug purpose only </para>
</note>
<formalpara><title>Returns</title>

<para>ValueType </para>
</formalpara>
</para>
<para>
Implements <link linkend="_class_value_1a81566c2e0f8d9c81fe18ad4ae251e471">Value</link>.</para>
    </section><anchor xml:id="_class_base_block_1aaf4bb16294f85cab75262a9fc80ca83c"/>    <section>
    <title>set_storage()</title>
<indexterm><primary>set_storage</primary><secondary>BaseBlock</secondary></indexterm>
<indexterm><primary>BaseBlock</primary><secondary>set_storage</secondary></indexterm>
<para><computeroutput>void BaseBlock::set_storage ( ) const<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Set the <emphasis>storage</emphasis> </para>
</para>

<para>This functions sets <emphasis>storage_type</emphasis> for value In <link linkend="_class_function">Function</link> and <link linkend="_class_base_block">BaseBlock</link> this function call this this function for all objects from their ValueArr&lt;&gt; members <note><title>Note</title>

<para>for <link linkend="_class_constant">Constant</link> this function only checks <emphasis>storage_type</emphasis> </para>
</note>
</para>
<para>
Implements <link linkend="_class_value_1a8bc56c2cc9d6cb4aade7084277d9df26">Value</link>.</para>
    </section><anchor xml:id="_class_base_block_1ace2f438ad119bd610183103a39131101"/>    <section>
    <title>translate_x86()</title>
<indexterm><primary>translate_x86</primary><secondary>BaseBlock</secondary></indexterm>
<indexterm><primary>BaseBlock</primary><secondary>translate_x86</secondary></indexterm>
<para><computeroutput>void BaseBlock::translate_x86 (<link linkend="_struct_context">Context</link> * ctx) const<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Translate <link linkend="_class_value">Value</link> to x86 code. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>ctx</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Implements <link linkend="_class_value_1a5c80febbb8171e7c60cdd1598c47fe53">Value</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
src/IR/Value/<link linkend="__value_8h">Value.h</link>src/IR/DumpIR/DumpIR.cppsrc/IR/Storage/Storage.cppsrc/IR/TranslateTox86/TranslateIRTox86.cppsrc/IR/Value/Value.cpp</section>
</section>
