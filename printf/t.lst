GAS LISTING test.s 			page 1


   1              	.extern puthcar
   2              	.extern exit
   3              	
   4              	.macro MOVE_ARGUMENT_TO_RAX
   5              	    mov (%rbp), %rax
   6              	    add $0x8, %rbp
   7              	.endm
   8              	
   9              	.macro PUTN buffer:req, cnt:req
  10              	    nop
  11              	
  12              	    mov $1, %rax         # write (buffer = rdi, descriptor = rdi, rdx = count
  13              	    mov %rbx, %rsi       #
  14              	    mov \buffer, %rdi    #
  15              	    mov \cnt, %rdx       #
  16              	    syscall              #
  17              	    
  18              	    nop
  19              	.endm
  20              	
  21              	.text
  22              	
  23              	    .globl main
  24              	    .type main, @function
  25              	
  26              	.data
  27 0000 31322025 	format: .ascii "12 %c"
  27      63
  28              	
  29              	.text
  30              	main:
  31 0000 6A4C     	    pushq $'L'
  32 0002 68000000 	    pushq $format
  32      00
  33 0007 E8000000 	    call my_printf
  33      00
  34 000c 4883C410 	    add $0x10, %rsp
  35              	
  36 0010 C3       	    ret
  37              	
  38              	.global my_printf
  39              	
  40              	my_printf:          // save rbp, rbx, r12, r13, r14, r15
  41 0011 55       	    push %rbp
  42 0012 4889E5   	    mov %rsp, %rbp
  43              	
  44 0015 488B5D10 	    mov 0x10(%rbp), %rbx   # rbx - format 
  45              	
  46              	.while_not_null:
  47 0019 803B00   	    cmpb $0, (%rbx)
  48 001c 0F846701 	    je .end_of_while_not_null
  48      0000
  49              	
  50 0022 4831C9   	    xor %rcx, %rcx    # rcx - counter
  51              	
  52              	        .while_not_null_and_not_percent:
  53 0025 8A040B   	            movb (%rbx, %rcx), %al
GAS LISTING test.s 			page 2


  54              	            
  55 0028 3C00     	            cmp $0x0, %al
  56 002a 7409     	            je .end_of_while_not_null_and_not_percent
  57              	
  58 002c 3C25     	            cmp $'%', %al
  59 002e 7405     	            je .end_of_while_not_null_and_not_percent
  60              	
  61 0030 48FFC1   	            inc %rcx
  62 0033 EBF0     	            jmp .while_not_null_and_not_percent
  63              	
  64              	    .end_of_while_not_null_and_not_percent:
  65              	
  66              	    ### putn
  67 0035 51       	    push %rcx
  68 0036 53       	    push %rbx
  69              	
  70 0037 48C7C001 	    mov $1, %rax    # write (buffer = rdi, descriptor = rdi, rdx = count
  70      000000
  71 003e 48C7C701 	    mov $1, %rdi    #
  71      000000
  72 0045 4889DE   	    mov %rbx, %rsi  #
  73 0048 4889CA   	    mov %rcx, %rdx  #
  74 004b 0F05     	    syscall         #
  75              	
  76 004d 5B       	    pop %rbx
  77 004e 59       	    pop %rcx
  78              	    # CHECK THAT REGISERS rcx and rbx safe !!!!!!!!!
  79              	    ###
  80              	
  81 004f 4801CB   	    add %rcx, %rbx  # rbx += rcx 
  82              	    
  83 0052 803B25   	    cmpb $'%', (%rbx)            # if (ax != '%') 
  84 0055 0F852E01 	    jne .end_of_while_not_null   #     .string 'break;'
  84      0000
  85              	
  86              	    
  87 005b 48FFC3   	    inc %rbx
  88              	
  89 005e 0FB603   	    movzxb (%rbx), %eax # eax = format char
  90 0061 83F825   	    cmp $'%', %eax
  91 0064 0F84D700 	    je .percent_spec_case
  91      0000
  92              	
  93 006a 83F878   	    cmp $'x', %eax
  94 006d 0F8F0E01 	    jg .default_case
  94      0000
  95              	
  96 0073 83F862   	    cmp $'b', %eax
  97 0076 0F8C0501 	    jl .default_case
  97      0000
  98              	
  99 007c 83E862   	    sub $'b', %eax 
 100 007f 488B04C5 	    mov jump_table(,%rax,8), %rax
 100      00000000 
 101 0087 FFE0     	    jmp *%rax
 102              	
 103              	
GAS LISTING test.s 			page 3


 104              	jump_table:
 105 0089 00000000 	    .quad   .binary_spec_case
 105      00000000 
 106 0091 00000000 	    .quad   .char_spec_case
 106      00000000 
 107 0099 00000000 	    .quad   .decimal_spec_case
 107      00000000 
 108              	
 109 00a1 00000000 	    .quad   .default_case
 109      00000000 
 110 00a9 00000000 	    .quad   .default_case
 110      00000000 
 111 00b1 00000000 	    .quad   .default_case
 111      00000000 
 112 00b9 00000000 	    .quad   .default_case
 112      00000000 
 113 00c1 00000000 	    .quad   .default_case
 113      00000000 
 114 00c9 00000000 	    .quad   .default_case
 114      00000000 
 115 00d1 00000000 	    .quad   .default_case
 115      00000000 
 116 00d9 00000000 	    .quad   .default_case
 116      00000000 
 117 00e1 00000000 	    .quad   .default_case
 117      00000000 
 118 00e9 00000000 	    .quad   .default_case
 118      00000000 
 119              	
 120 00f1 00000000 	    .quad   .oct_spec_case
 120      00000000 
 121              	
 122 00f9 00000000 	    .quad   .default_case
 122      00000000 
 123 0101 00000000 	    .quad   .default_case
 123      00000000 
 124 0109 00000000 	    .quad   .default_case
 124      00000000 
 125              	
 126 0111 00000000 	    .quad   .string_spec_case
 126      00000000 
 127              	    
 128 0119 00000000 	    .quad   .default_case
 128      00000000 
 129 0121 00000000 	    .quad   .default_case
 129      00000000 
 130 0129 00000000 	    .quad   .default_case
 130      00000000 
 131 0131 00000000 	    .quad   .default_case
 131      00000000 
 132              	    
 133 0139 00000000 	    .quad   .hex_spec_case
 133      00000000 
 134              	
 135              	
 136              	.percent_spec_case:
 137 0141 4883EC08 	    sub $0x8, %rsp
GAS LISTING test.s 			page 4


 138              	
 139 0145 BF250000 	    mov $'%', %edi      # change to system call    
 139      00
 140 014a E8000000 	    call putchar        # rcx - dead
 140      00
 141              	
 142 014f 4883C408 	    add $0x8, %rsp 
 143              	
 144 0153 EB2C     	    jmp .default_case #break;
 145              	
 146              	.binary_spec_case:
 147              	    // GET_ARGUMENT
 148              	    
 149 0155 B8FFFFFF 	    mov $-1, %eax   # eax - mask for 1 bit
 149      FF
 150              	
 151              	    // and 
 152 015a EB25     	    jmp .default_case #break;
 153              	
 154              	.char_spec_case:
 155              	    // MOVE_ARGUMENT_TO_RAX
 156              	    PUTN buffer = %rbp, cnt = 1 
 156 015c 90       	>  nop
 156              	> 
 156 015d 48C7C001 	>  mov $1,%rax
 156      000000
 156 0164 4889DE   	>  mov %rbx,%rsi
 156 0167 4889EF   	>  mov %rbp,%rdi
 156 016a 488B1425 	>  mov 1,%rdx
 156      01000000 
 156 0172 0F05     	>  syscall 
 156              	>  
 156 0174 90       	>  nop
 157 0175 0F05     	    syscall             #
 158              	
 159 0177 EB08     	    jmp .default_case #break;
 160              	
 161              	.decimal_spec_case:
 162 0179 EB06     	    jmp .default_case #break;
 163              	
 164              	.oct_spec_case:
 165 017b EB04     	    jmp .default_case #break;
 166              	
 167              	.string_spec_case:
 168 017d EB02     	    jmp .default_case #break;
 169              	
 170              	.hex_spec_case:
 171 017f EB00     	    jmp .default_case #break;
 172              	
 173              	.default_case:
 174              	
 175              	    // jmp .default_case #break;
 176              	
 177              	.end_of_switch:
 178 0181 48FFC3   	    inc %rbx
 179 0184 E990FEFF 	    jmp .while_not_null
 179      FF
GAS LISTING test.s 			page 5


 180              	
 181              	.end_of_while_not_null:
 182 0189 5D       	    pop %rbp
 183 018a C3       	    ret
 184              	
 185              	
 186              	
 187              	
 188              	.section    .bss
 189              	    .local buffer
 190              	    .comm buffer,8
 191              	
GAS LISTING test.s 			page 6


DEFINED SYMBOLS
              test.s:30     .text:0000000000000000 main
              test.s:27     .data:0000000000000000 format
              test.s:40     .text:0000000000000011 my_printf
              test.s:46     .text:0000000000000019 .while_not_null
              test.s:181    .text:0000000000000189 .end_of_while_not_null
              test.s:52     .text:0000000000000025 .while_not_null_and_not_percent
              test.s:64     .text:0000000000000035 .end_of_while_not_null_and_not_percent
              test.s:136    .text:0000000000000141 .percent_spec_case
              test.s:173    .text:0000000000000181 .default_case
              test.s:104    .text:0000000000000089 jump_table
              test.s:146    .text:0000000000000155 .binary_spec_case
              test.s:154    .text:000000000000015c .char_spec_case
              test.s:161    .text:0000000000000179 .decimal_spec_case
              test.s:164    .text:000000000000017b .oct_spec_case
              test.s:167    .text:000000000000017d .string_spec_case
              test.s:170    .text:000000000000017f .hex_spec_case
              test.s:177    .text:0000000000000181 .end_of_switch
                             .bss:0000000000000000 buffer

UNDEFINED SYMBOLS
putchar
