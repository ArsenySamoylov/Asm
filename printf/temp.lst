GAS LISTING test.s 			page 1


   1              	.extern puthcar
   2              	.extern exit
   3              	
   4              	.text
   5              	
   6              	    .globl main
   7              	    .type main, @function
   8              	
   9              	// .data
  10              	// Msg: .ascii "012345678\n"
  11              	
  12              	//     len = . - Msg
  13              	
  14              	.text
  15              	main:
  16 0000 55       	   push %rbp
  17 0001 4889E5   	   mov %rsp, %rbp
  18              	    // call my_printf
  19 0004 8B3C2525 	    mov '%', %edi
  19      000000
  20 000b E8000000 	    call putchar
  20      00
  21              	    
  22 0010 5D       	    pop %rbp
  23 0011 C3       	    ret
  24              	
  25              	.global my_printf
  26              	
  27              	my_printf:          // save rbp, rbx, r12, r13, r14, r15
  28 0012 55       	    push %rbp
  29 0013 4889E5   	    mov %rsp, %rbp
  30              	
  31 0016 488B5D08 	    mov 8(%rbp), %rbx   # rbx - format 
  32              	
  33              	.while_not_null:
  34 001a 803B00   	    cmpb $0, (%rbx)
  35 001d 0F845501 	    je .end_of_while_not_null
  35      0000
  36              	
  37 0023 4831C9   	    xor %rcx, %rcx    # rcx - counter
  38              	
  39              	    .while_not_null_and_not_percent:
  40 0026 8A040B   	        movb (%rbx, %rcx), %al
  41              	        
  42 0029 38042530 	        cmp %al, '\0'
  42      000000
  43 0030 75F4     	        jne .while_not_null_and_not_percent
  44              	
  45 0032 38042525 	        cmp %al, '%'
  45      000000
  46 0039 75EB     	        jne .while_not_null_and_not_percent
  47              	
  48              	    ### putn
  49 003b 48C7C001 	    mov $1, %rax    # write (buffer = rdi, descriptor = rdi, rdx = count
  49      000000
  50 0042 48C7C701 	    mov $1, %rdi    #
  50      000000
GAS LISTING test.s 			page 2


  51 0049 4889DE   	    mov %rbx, %rsi  #
  52 004c 4889D1   	    mov %rdx, %rcx  #
  53 004f 0F05     	    syscall         #
  54              	
  55              	    # CHECK THAT REGISERS rcx and rbx safe !!!!!!!!!
  56              	    ###
  57              	
  58 0051 4801CB   	    add %rcx, %rbx  # rbx += rcx 
  59              	    
  60 0054 803B25   	    cmpb $'%', (%rbx)            # if (ax != '%') 
  61 0057 0F851B01 	    jne .end_of_while_not_null   #     .string 'break;'
  61      0000
  62              	
  63              	    
  64 005d 48FFC3   	    inc %rbx
  65              	
  66 0060 0FB603   	    movzxb (%rbx), %eax # eax = format char
  67 0063 39042525 	    cmp %eax, '%'
  67      000000
  68 006a 0F84E300 	    je .percent_spec_case
  68      0000
  69              	
  70 0070 39042578 	    cmp %eax, 'x'
  70      000000
  71 0077 0F8FF300 	    jg .default_case
  71      0000
  72              	
  73 007d 39042562 	    cmp %eax, 'b'
  73      000000
  74 0084 0F8CE600 	    jl .default_case
  74      0000
  75              	
  76 008a 2B042516 	    sub 22, %eax 
  76      000000
  77 0091 488B04C5 	    mov jump_table(,%rax,8), %rax
  77      00000000 
  78 0099 FFE0     	    jmp *%rax
  79              	
  80              	
  81              	jump_table:
  82 009b 00000000 	    .quad   .binary_spec_case
  82      00000000 
  83 00a3 00000000 	    .quad   .char_spec_case
  83      00000000 
  84 00ab 00000000 	    .quad   .decimal_spec_case
  84      00000000 
  85              	
  86 00b3 00000000 	    .quad   .default_case
  86      00000000 
  87 00bb 00000000 	    .quad   .default_case
  87      00000000 
  88 00c3 00000000 	    .quad   .default_case
  88      00000000 
  89 00cb 00000000 	    .quad   .default_case
  89      00000000 
  90 00d3 00000000 	    .quad   .default_case
  90      00000000 
GAS LISTING test.s 			page 3


  91 00db 00000000 	    .quad   .default_case
  91      00000000 
  92 00e3 00000000 	    .quad   .default_case
  92      00000000 
  93 00eb 00000000 	    .quad   .default_case
  93      00000000 
  94 00f3 00000000 	    .quad   .default_case
  94      00000000 
  95 00fb 00000000 	    .quad   .default_case
  95      00000000 
  96              	
  97 0103 00000000 	    .quad   .oct_spec_case
  97      00000000 
  98              	
  99 010b 00000000 	    .quad   .default_case
  99      00000000 
 100 0113 00000000 	    .quad   .default_case
 100      00000000 
 101 011b 00000000 	    .quad   .default_case
 101      00000000 
 102              	
 103 0123 00000000 	    .quad   .string_spec_case
 103      00000000 
 104              	    
 105 012b 00000000 	    .quad   .default_case
 105      00000000 
 106 0133 00000000 	    .quad   .default_case
 106      00000000 
 107 013b 00000000 	    .quad   .default_case
 107      00000000 
 108 0143 00000000 	    .quad   .default_case
 108      00000000 
 109              	    
 110 014b 00000000 	    .quad   .hex_spec_case
 110      00000000 
 111              	
 112              	
 113              	.percent_spec_case:
 114 0153 BF250000 	    mov $'%', %edi
 114      00
 115 0158 E8000000 	    call putchar
 115      00
 116              	
 117 015d EB11     	    jmp .default_case #break;
 118              	
 119              	.binary_spec_case:
 120              	    // GET_ARGUMENT
 121              	    
 122 015f B8FFFFFF 	    mov $-1, %eax   # eax - mask for 1 bit
 122      FF
 123              	
 124              	    // and 
 125 0164 EB0A     	    jmp .default_case #break;
 126              	
 127              	.char_spec_case:
 128 0166 EB08     	    jmp .default_case #break;
 129              	
GAS LISTING test.s 			page 4


 130              	.decimal_spec_case:
 131 0168 EB06     	    jmp .default_case #break;
 132              	
 133              	.oct_spec_case:
 134 016a EB04     	    jmp .default_case #break;
 135              	
 136              	.string_spec_case:
 137 016c EB02     	    jmp .default_case #break;
 138              	
 139              	.hex_spec_case:
 140 016e EB00     	    jmp .default_case #break;
 141              	
 142              	.default_case:
 143              	
 144              	    // jmp .default_case #break;
 145              	
 146              	.end_of_switch:
 147 0170 48FFC3   	    inc %rbx
 148 0173 E9A2FEFF 	    jmp .while_not_null
 148      FF
 149              	
 150              	.end_of_while_not_null:
 151 0178 C3       	    ret
 152              	
 153              	.macro putchar
 154              	
 155              	.endm
 156              	
 157              	
 158              	.section    .bss
 159              	    .local buffer
 160              	    .comm buffer,8
 161              	
GAS LISTING test.s 			page 5


DEFINED SYMBOLS
              test.s:15     .text:0000000000000000 main
              test.s:27     .text:0000000000000012 my_printf
              test.s:33     .text:000000000000001a .while_not_null
              test.s:150    .text:0000000000000178 .end_of_while_not_null
              test.s:39     .text:0000000000000026 .while_not_null_and_not_percent
              test.s:113    .text:0000000000000153 .percent_spec_case
              test.s:142    .text:0000000000000170 .default_case
              test.s:81     .text:000000000000009b jump_table
              test.s:119    .text:000000000000015f .binary_spec_case
              test.s:127    .text:0000000000000166 .char_spec_case
              test.s:130    .text:0000000000000168 .decimal_spec_case
              test.s:133    .text:000000000000016a .oct_spec_case
              test.s:136    .text:000000000000016c .string_spec_case
              test.s:139    .text:000000000000016e .hex_spec_case
              test.s:146    .text:0000000000000170 .end_of_switch
                             .bss:0000000000000000 buffer

UNDEFINED SYMBOLS
putchar
