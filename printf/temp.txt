
k.out:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <put_binary_in_buffer+0x1>
 328:	78 38                	js     362 <put_binary_in_buffer+0xe>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	cs xor (%rax),%al

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	10 00                	adc    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	80 00 c0             	addb   $0xc0,(%rax)
 34c:	04 00                	add    $0x0,%al
 34e:	00 00                	add    %al,(%rax)
 350:	01 00                	add    %eax,(%rax)
 352:	00 00                	add    %al,(%rax)
 354:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    $0x0,%al
 35a:	00 00                	add    %al,(%rax)
 35c:	14 00                	adc    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	03 00                	add    (%rax),%eax
 362:	00 00                	add    %al,(%rax)
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push %rbp
 367:	00 eb                	add    %ch,%bl
 369:	b7 53                	mov    $0x53,%bh
 36b:	6d                   	insl   (%dx),%es:(%rdi)
 36c:	d6                   	(bad)  
 36d:	ca 64 da             	lret   $0xda64
 370:	f4                   	hlt    
 371:	7e a8                	jle    31b <put_decimal_in_buffer+0x8>
 373:	d8 89 ef 8b 15 36    	fmuls  0x36158bef(%rcx)
 379:	98                   	cwtl   
 37a:	61                   	(bad)  
 37b:	ff                   	.byte 0xff

Disassembly of section .note.ABI-tag:

000000000000037c <__abi_tag>:
 37c:	04 00                	add    $0x0,%al
 37e:	00 00                	add    %al,(%rax)
 380:	10 00                	adc    %al,(%rax)
 382:	00 00                	add    %al,(%rax)
 384:	01 00                	add    %eax,(%rax)
 386:	00 00                	add    %al,(%rax)
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push %rbp
 38b:	00 00                	add    %al,(%rax)
 38d:	00 00                	add    %al,(%rax)
 38f:	00 03                	add    %al,(%rbx)
 391:	00 00                	add    %al,(%rax)
 393:	00 02                	add    %al,(%rdx)
 395:	00 00                	add    %al,(%rax)
 397:	00 00                	add    %al,(%rax)
 399:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

00000000000003a0 <.gnu.hash>:
 3a0:	02 00                	add    (%rax),%al
 3a2:	00 00                	add    %al,(%rax)
 3a4:	05 00 00 00 01       	add    $0x1000000,%eax
 3a9:	00 00                	add    %al,(%rax)
 3ab:	00 06                	add    %al,(%rsi)
 3ad:	00 00                	add    %al,(%rax)
 3af:	00 00                	add    %al,(%rax)
 3b1:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 3b7:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3bd <put_hex_in_buffer+0x2e>
 3bd:	00 00                	add    %al,(%rax)
 3bf:	00 d1                	add    %dl,%cl
 3c1:	65 ce                	gs (bad) 
 3c3:	6d                   	insl   (%dx),%es:(%rdi)

Disassembly of section .dynsym:

00000000000003c8 <.dynsym>:
	...
 3e0:	10 00                	adc    %al,(%rax)
 3e2:	00 00                	add    %al,(%rax)
 3e4:	12 00                	adc    (%rax),%al
	...
 3f6:	00 00                	add    %al,(%rax)
 3f8:	43 00 00             	rex.XB add %al,(%r8)
 3fb:	00 20                	add    %ah,(%rax)
	...
 40d:	00 00                	add    %al,(%rax)
 40f:	00 5f 00             	add    %bl,0x0(%rdi)
 412:	00 00                	add    %al,(%rax)
 414:	20 00                	and    %al,(%rax)
	...
 426:	00 00                	add    %al,(%rax)
 428:	6e                   	outsb  %ds:(%rsi),(%dx)
 429:	00 00                	add    %al,(%rax)
 42b:	00 20                	add    %ah,(%rax)
	...
 43d:	00 00                	add    %al,(%rax)
 43f:	00 01                	add    %al,(%rcx)
 441:	00 00                	add    %al,(%rax)
 443:	00 22                	add    %ah,(%rdx)
	...

Disassembly of section .dynstr:

0000000000000458 <.dynstr>:
 458:	00 5f 5f             	add    %bl,0x5f(%rdi)
 45b:	63 78 61             	movsxd 0x61(%rax),%edi
 45e:	5f                   	pop    %rdi
 45f:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 465:	7a 65                	jp     4cc <put_hex_in_buffer+0x13d>
 467:	00 5f 5f             	add    %bl,0x5f(%rdi)
 46a:	6c                   	insb   (%dx),%es:(%rdi)
 46b:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 472:	72 74                	jb     4e8 <put_hex_in_buffer+0x159>
 474:	5f                   	pop    %rdi
 475:	6d                   	insl   (%dx),%es:(%rdi)
 476:	61                   	(bad)  
 477:	69 6e 00 6c 69 62 63 	imul   $0x6362696c,0x0(%rsi),%ebp
 47e:	2e 73 6f             	jae,pn 4f0 <put_hex_in_buffer+0x161>
 481:	2e 36 00 47 4c       	cs ss add %al,0x4c(%rdi)
 486:	49                   	rex.WB
 487:	42                   	rex.X
 488:	43 5f                	rex.XB pop %r15
 48a:	32 2e                	xor    (%rsi),%ch
 48c:	32 2e                	xor    (%rsi),%ch
 48e:	35 00 47 4c 49       	xor    $0x494c4700,%eax
 493:	42                   	rex.X
 494:	43 5f                	rex.XB pop %r15
 496:	32 2e                	xor    (%rsi),%ch
 498:	33 34 00             	xor    (%rax,%rax,1),%esi
 49b:	5f                   	pop    %rdi
 49c:	49 54                	rex.WB push %r12
 49e:	4d 5f                	rex.WRB pop %r15
 4a0:	64 65 72 65          	fs gs jb 509 <put_hex_in_buffer+0x17a>
 4a4:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 4ab:	4d 
 4ac:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 4ae:	6f                   	outsl  %ds:(%rsi),(%dx)
 4af:	6e                   	outsb  %ds:(%rsi),(%dx)
 4b0:	65 54                	gs push %rsp
 4b2:	61                   	(bad)  
 4b3:	62                   	(bad)  
 4b4:	6c                   	insb   (%dx),%es:(%rdi)
 4b5:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 4b9:	67 6d                	insl   (%dx),%es:(%edi)
 4bb:	6f                   	outsl  %ds:(%rsi),(%dx)
 4bc:	6e                   	outsb  %ds:(%rsi),(%dx)
 4bd:	5f                   	pop    %rdi
 4be:	73 74                	jae    534 <put_hex_in_buffer+0x1a5>
 4c0:	61                   	(bad)  
 4c1:	72 74                	jb     537 <put_hex_in_buffer+0x1a8>
 4c3:	5f                   	pop    %rdi
 4c4:	5f                   	pop    %rdi
 4c5:	00 5f 49             	add    %bl,0x49(%rdi)
 4c8:	54                   	push   %rsp
 4c9:	4d 5f                	rex.WRB pop %r15
 4cb:	72 65                	jb     532 <put_hex_in_buffer+0x1a3>
 4cd:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 4d4:	4d 
 4d5:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 4d7:	6f                   	outsl  %ds:(%rsi),(%dx)
 4d8:	6e                   	outsb  %ds:(%rsi),(%dx)
 4d9:	65 54                	gs push %rsp
 4db:	61                   	(bad)  
 4dc:	62                   	.byte 0x62
 4dd:	6c                   	insb   (%dx),%es:(%rdi)
 4de:	65                   	gs
	...

Disassembly of section .gnu.version:

00000000000004e0 <.gnu.version>:
 4e0:	00 00                	add    %al,(%rax)
 4e2:	02 00                	add    (%rax),%al
 4e4:	01 00                	add    %eax,(%rax)
 4e6:	01 00                	add    %eax,(%rax)
 4e8:	01 00                	add    %eax,(%rax)
 4ea:	03 00                	add    (%rax),%eax

Disassembly of section .gnu.version_r:

00000000000004f0 <.gnu.version_r>:
 4f0:	01 00                	add    %eax,(%rax)
 4f2:	02 00                	add    (%rax),%al
 4f4:	22 00                	and    (%rax),%al
 4f6:	00 00                	add    %al,(%rax)
 4f8:	10 00                	adc    %al,(%rax)
 4fa:	00 00                	add    %al,(%rax)
 4fc:	00 00                	add    %al,(%rax)
 4fe:	00 00                	add    %al,(%rax)
 500:	75 1a                	jne    51c <put_hex_in_buffer+0x18d>
 502:	69 09 00 00 03 00    	imul   $0x30000,(%rcx),%ecx
 508:	2c 00                	sub    $0x0,%al
 50a:	00 00                	add    %al,(%rax)
 50c:	10 00                	adc    %al,(%rax)
 50e:	00 00                	add    %al,(%rax)
 510:	b4 91                	mov    $0x91,%ah
 512:	96                   	xchg   %eax,%esi
 513:	06                   	(bad)  
 514:	00 00                	add    %al,(%rax)
 516:	02 00                	add    (%rax),%al
 518:	38 00                	cmp    %al,(%rax)
 51a:	00 00                	add    %al,(%rax)
 51c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000520 <.rela.dyn>:
 520:	f0 3d 00 00 00 00    	lock cmp $0x0,%eax
 526:	00 00                	add    %al,(%rax)
 528:	08 00                	or     %al,(%rax)
 52a:	00 00                	add    %al,(%rax)
 52c:	00 00                	add    %al,(%rax)
 52e:	00 00                	add    %al,(%rax)
 530:	20 11                	and    %dl,(%rcx)
 532:	00 00                	add    %al,(%rax)
 534:	00 00                	add    %al,(%rax)
 536:	00 00                	add    %al,(%rax)
 538:	f8                   	clc    
 539:	3d 00 00 00 00       	cmp    $0x0,%eax
 53e:	00 00                	add    %al,(%rax)
 540:	08 00                	or     %al,(%rax)
 542:	00 00                	add    %al,(%rax)
 544:	00 00                	add    %al,(%rax)
 546:	00 00                	add    %al,(%rax)
 548:	e0 10                	loopne 55a <put_hex_in_buffer+0x1cb>
 54a:	00 00                	add    %al,(%rax)
 54c:	00 00                	add    %al,(%rax)
 54e:	00 00                	add    %al,(%rax)
 550:	08 40 00             	or     %al,0x0(%rax)
 553:	00 00                	add    %al,(%rax)
 555:	00 00                	add    %al,(%rax)
 557:	00 08                	add    %cl,(%rax)
 559:	00 00                	add    %al,(%rax)
 55b:	00 00                	add    %al,(%rax)
 55d:	00 00                	add    %al,(%rax)
 55f:	00 08                	add    %cl,(%rax)
 561:	40 00 00             	rex add %al,(%rax)
 564:	00 00                	add    %al,(%rax)
 566:	00 00                	add    %al,(%rax)
 568:	d8 3f                	fdivrs (%rdi)
 56a:	00 00                	add    %al,(%rax)
 56c:	00 00                	add    %al,(%rax)
 56e:	00 00                	add    %al,(%rax)
 570:	06                   	(bad)  
 571:	00 00                	add    %al,(%rax)
 573:	00 01                	add    %al,(%rcx)
	...
 57d:	00 00                	add    %al,(%rax)
 57f:	00 e0                	add    %ah,%al
 581:	3f                   	(bad)  
 582:	00 00                	add    %al,(%rax)
 584:	00 00                	add    %al,(%rax)
 586:	00 00                	add    %al,(%rax)
 588:	06                   	(bad)  
 589:	00 00                	add    %al,(%rax)
 58b:	00 02                	add    %al,(%rdx)
	...
 595:	00 00                	add    %al,(%rax)
 597:	00 e8                	add    %ch,%al
 599:	3f                   	(bad)  
 59a:	00 00                	add    %al,(%rax)
 59c:	00 00                	add    %al,(%rax)
 59e:	00 00                	add    %al,(%rax)
 5a0:	06                   	(bad)  
 5a1:	00 00                	add    %al,(%rax)
 5a3:	00 03                	add    %al,(%rbx)
	...
 5ad:	00 00                	add    %al,(%rax)
 5af:	00 f0                	add    %dh,%al
 5b1:	3f                   	(bad)  
 5b2:	00 00                	add    %al,(%rax)
 5b4:	00 00                	add    %al,(%rax)
 5b6:	00 00                	add    %al,(%rax)
 5b8:	06                   	(bad)  
 5b9:	00 00                	add    %al,(%rax)
 5bb:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 5c6:	00 00                	add    %al,(%rax)
 5c8:	f8                   	clc    
 5c9:	3f                   	(bad)  
 5ca:	00 00                	add    %al,(%rax)
 5cc:	00 00                	add    %al,(%rax)
 5ce:	00 00                	add    %al,(%rax)
 5d0:	06                   	(bad)  
 5d1:	00 00                	add    %al,(%rax)
 5d3:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 5d9 <put_hex_in_buffer+0x24a>
 5d9:	00 00                	add    %al,(%rax)
 5db:	00 00                	add    %al,(%rax)
 5dd:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 a2 2f 00 00    	push   0x2fa2(%rip)        # 3fc8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 a4 2f 00 00    	jmp    *0x2fa4(%rip)        # 3fd0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

Disassembly of section .plt.got:

0000000000001030 <__cxa_finalize@plt>:
    1030:	ff 25 c2 2f 00 00    	jmp    *0x2fc2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1036:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001040 <_start>:
    1040:	f3 0f 1e fa          	endbr64 
    1044:	31 ed                	xor    %ebp,%ebp
    1046:	49 89 d1             	mov    %rdx,%r9
    1049:	5e                   	pop    %rsi
    104a:	48 89 e2             	mov    %rsp,%rdx
    104d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1051:	50                   	push   %rax
    1052:	54                   	push   %rsp
    1053:	45 31 c0             	xor    %r8d,%r8d
    1056:	31 c9                	xor    %ecx,%ecx
    1058:	48 8d 3d ca 00 00 00 	lea    0xca(%rip),%rdi        # 1129 <main>
    105f:	ff 15 73 2f 00 00    	call   *0x2f73(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1065:	f4                   	hlt    
    1066:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    106d:	00 00 00 

0000000000001070 <deregister_tm_clones>:
    1070:	48 8d 3d a9 2f 00 00 	lea    0x2fa9(%rip),%rdi        # 4020 <__TMC_END__>
    1077:	48 8d 05 a2 2f 00 00 	lea    0x2fa2(%rip),%rax        # 4020 <__TMC_END__>
    107e:	48 39 f8             	cmp    %rdi,%rax
    1081:	74 15                	je     1098 <deregister_tm_clones+0x28>
    1083:	48 8b 05 56 2f 00 00 	mov    0x2f56(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    108a:	48 85 c0             	test   %rax,%rax
    108d:	74 09                	je     1098 <deregister_tm_clones+0x28>
    108f:	ff e0                	jmp    *%rax
    1091:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1098:	c3                   	ret    
    1099:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010a0 <register_tm_clones>:
    10a0:	48 8d 3d 79 2f 00 00 	lea    0x2f79(%rip),%rdi        # 4020 <__TMC_END__>
    10a7:	48 8d 35 72 2f 00 00 	lea    0x2f72(%rip),%rsi        # 4020 <__TMC_END__>
    10ae:	48 29 fe             	sub    %rdi,%rsi
    10b1:	48 89 f0             	mov    %rsi,%rax
    10b4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10b8:	48 c1 f8 03          	sar    $0x3,%rax
    10bc:	48 01 c6             	add    %rax,%rsi
    10bf:	48 d1 fe             	sar    %rsi
    10c2:	74 14                	je     10d8 <register_tm_clones+0x38>
    10c4:	48 8b 05 25 2f 00 00 	mov    0x2f25(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    10cb:	48 85 c0             	test   %rax,%rax
    10ce:	74 08                	je     10d8 <register_tm_clones+0x38>
    10d0:	ff e0                	jmp    *%rax
    10d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    10d8:	c3                   	ret    
    10d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010e0 <__do_global_dtors_aux>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	80 3d 35 2f 00 00 00 	cmpb   $0x0,0x2f35(%rip)        # 4020 <__TMC_END__>
    10eb:	75 2b                	jne    1118 <__do_global_dtors_aux+0x38>
    10ed:	55                   	push   %rbp
    10ee:	48 83 3d 02 2f 00 00 	cmpq   $0x0,0x2f02(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10f5:	00 
    10f6:	48 89 e5             	mov    %rsp,%rbp
    10f9:	74 0c                	je     1107 <__do_global_dtors_aux+0x27>
    10fb:	48 8b 3d 06 2f 00 00 	mov    0x2f06(%rip),%rdi        # 4008 <__dso_handle>
    1102:	e8 29 ff ff ff       	call   1030 <__cxa_finalize@plt>
    1107:	e8 64 ff ff ff       	call   1070 <deregister_tm_clones>
    110c:	c6 05 0d 2f 00 00 01 	movb   $0x1,0x2f0d(%rip)        # 4020 <__TMC_END__>
    1113:	5d                   	pop    %rbp
    1114:	c3                   	ret    
    1115:	0f 1f 00             	nopl   (%rax)
    1118:	c3                   	ret    
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <frame_dummy>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	e9 77 ff ff ff       	jmp    10a0 <register_tm_clones>

0000000000001129 <main>:
    1129:	f3 0f 1e fa          	endbr64 
    112d:	55                   	push   %rbp
    112e:	48 89 e5             	mov    %rsp,%rbp
    1131:	be 66 00 00 00       	mov    $0x66,%esi
    1136:	48 8d 05 c7 0e 00 00 	lea    0xec7(%rip),%rax        # 2004 <_IO_stdin_used+0x4>
    113d:	48 89 c7             	mov    %rax,%rdi
    1140:	b8 00 00 00 00       	mov    $0x0,%eax
    1145:	e8 b6 ee ff ff       	call   0 <MY_PRINTF>
    114a:	b8 00 00 00 00       	mov    $0x0,%eax
    114f:	5d                   	pop    %rbp
    1150:	c3                   	ret    

Disassembly of section .fini:

0000000000001154 <_fini>:
    1154:	f3 0f 1e fa          	endbr64 
    1158:	48 83 ec 08          	sub    $0x8,%rsp
    115c:	48 83 c4 08          	add    $0x8,%rsp
    1160:	c3                   	ret    

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	48                   	rex.W
    2005:	65 6c                	gs insb (%dx),%es:(%rdi)
    2007:	6c                   	insb   (%dx),%es:(%rdi)
    2008:	6f                   	outsl  %ds:(%rsi),(%dx)
    2009:	20 77 6f             	and    %dh,0x6f(%rdi)
    200c:	72 6c                	jb     207a <__GNU_EH_FRAME_HDR+0x62>
    200e:	64 2c 20             	fs sub $0x20,%al
    2011:	25                   	.byte 0x25
    2012:	63 00                	movsxd (%rax),%eax
	...

Disassembly of section .eh_frame_hdr:

0000000000002018 <__GNU_EH_FRAME_HDR>:
    2018:	01 1b                	add    %ebx,(%rbx)
    201a:	03 3b                	add    (%rbx),%edi
    201c:	2c 00                	sub    $0x0,%al
    201e:	00 00                	add    %al,(%rax)
    2020:	04 00                	add    $0x0,%al
    2022:	00 00                	add    %al,(%rax)
    2024:	08 f0                	or     %dh,%al
    2026:	ff                   	(bad)  
    2027:	ff 60 00             	jmp    *0x0(%rax)
    202a:	00 00                	add    %al,(%rax)
    202c:	18 f0                	sbb    %dh,%al
    202e:	ff                   	(bad)  
    202f:	ff 88 00 00 00 28    	decl   0x28000000(%rax)
    2035:	f0 ff                	lock (bad) 
    2037:	ff 48 00             	decl   0x0(%rax)
    203a:	00 00                	add    %al,(%rax)
    203c:	11 f1                	adc    %esi,%ecx
    203e:	ff                   	(bad)  
    203f:	ff                   	(bad)  
    2040:	b8                   	.byte 0xb8
    2041:	00 00                	add    %al,(%rax)
	...

Disassembly of section .eh_frame:

0000000000002048 <__FRAME_END__-0xb4>:
    2048:	14 00                	adc    $0x0,%al
    204a:	00 00                	add    %al,(%rax)
    204c:	00 00                	add    %al,(%rax)
    204e:	00 00                	add    %al,(%rax)
    2050:	01 7a 52             	add    %edi,0x52(%rdx)
    2053:	00 01                	add    %al,(%rcx)
    2055:	78 10                	js     2067 <__GNU_EH_FRAME_HDR+0x4f>
    2057:	01 1b                	add    %ebx,(%rbx)
    2059:	0c 07                	or     $0x7,%al
    205b:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    2061:	00 00                	add    %al,(%rax)
    2063:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2066:	00 00                	add    %al,(%rax)
    2068:	d8 ef                	fsubr  %st(7),%st
    206a:	ff                   	(bad)  
    206b:	ff 26                	jmp    *(%rsi)
    206d:	00 00                	add    %al,(%rax)
    206f:	00 00                	add    %al,(%rax)
    2071:	44 07                	rex.R (bad) 
    2073:	10 00                	adc    %al,(%rax)
    2075:	00 00                	add    %al,(%rax)
    2077:	00 24 00             	add    %ah,(%rax,%rax,1)
    207a:	00 00                	add    %al,(%rax)
    207c:	34 00                	xor    $0x0,%al
    207e:	00 00                	add    %al,(%rax)
    2080:	a0 ef ff ff 10 00 00 	movabs 0x10ffffef,%al
    2087:	00 00 
    2089:	0e                   	(bad)  
    208a:	10 46 0e             	adc    %al,0xe(%rsi)
    208d:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    2090:	0b 77 08             	or     0x8(%rdi),%esi
    2093:	80 00 3f             	addb   $0x3f,(%rax)
    2096:	1a 3b                	sbb    (%rbx),%bh
    2098:	2a 33                	sub    (%rbx),%dh
    209a:	24 22                	and    $0x22,%al
    209c:	00 00                	add    %al,(%rax)
    209e:	00 00                	add    %al,(%rax)
    20a0:	14 00                	adc    $0x0,%al
    20a2:	00 00                	add    %al,(%rax)
    20a4:	5c                   	pop    %rsp
    20a5:	00 00                	add    %al,(%rax)
    20a7:	00 88 ef ff ff 08    	add    %cl,0x8ffffef(%rax)
	...
    20b5:	00 00                	add    %al,(%rax)
    20b7:	00 14 00             	add    %dl,(%rax,%rax,1)
    20ba:	00 00                	add    %al,(%rax)
    20bc:	00 00                	add    %al,(%rax)
    20be:	00 00                	add    %al,(%rax)
    20c0:	03 7a 52             	add    0x52(%rdx),%edi
    20c3:	00 01                	add    %al,(%rcx)
    20c5:	78 10                	js     20d7 <__GNU_EH_FRAME_HDR+0xbf>
    20c7:	01 1b                	add    %ebx,(%rbx)
    20c9:	0c 07                	or     $0x7,%al
    20cb:	08 90 01 00 00 28    	or     %dl,0x28000001(%rax)
    20d1:	00 00                	add    %al,(%rax)
    20d3:	00 1c 00             	add    %bl,(%rax,%rax,1)
    20d6:	00 00                	add    %al,(%rax)
    20d8:	51                   	push   %rcx
    20d9:	f0 ff                	lock (bad) 
    20db:	ff 28                	ljmp   *(%rax)
    20dd:	00 00                	add    %al,(%rax)
    20df:	00 00                	add    %al,(%rax)
    20e1:	04 05                	add    $0x5,%al
    20e3:	00 00                	add    %al,(%rax)
    20e5:	00 0e                	add    %cl,(%rsi)
    20e7:	10 86 02 04 03 00    	adc    %al,0x30402(%rsi)
    20ed:	00 00                	add    %al,(%rax)
    20ef:	0d 06 04 1f 00       	or     $0x1f0406,%eax
    20f4:	00 00                	add    %al,(%rax)
    20f6:	0c 07                	or     $0x7,%al
    20f8:	08 00                	or     %al,(%rax)
	...

00000000000020fc <__FRAME_END__>:
    20fc:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000003df0 <__frame_dummy_init_array_entry>:
    3df0:	20 11                	and    %dl,(%rcx)
    3df2:	00 00                	add    %al,(%rax)
    3df4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000003df8 <__do_global_dtors_aux_fini_array_entry>:
    3df8:	e0 10                	loopne 3e0a <_DYNAMIC+0xa>
    3dfa:	00 00                	add    %al,(%rax)
    3dfc:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000003e00 <_DYNAMIC>:
    3e00:	01 00                	add    %eax,(%rax)
    3e02:	00 00                	add    %al,(%rax)
    3e04:	00 00                	add    %al,(%rax)
    3e06:	00 00                	add    %al,(%rax)
    3e08:	22 00                	and    (%rax),%al
    3e0a:	00 00                	add    %al,(%rax)
    3e0c:	00 00                	add    %al,(%rax)
    3e0e:	00 00                	add    %al,(%rax)
    3e10:	0c 00                	or     $0x0,%al
    3e12:	00 00                	add    %al,(%rax)
    3e14:	00 00                	add    %al,(%rax)
    3e16:	00 00                	add    %al,(%rax)
    3e18:	00 10                	add    %dl,(%rax)
    3e1a:	00 00                	add    %al,(%rax)
    3e1c:	00 00                	add    %al,(%rax)
    3e1e:	00 00                	add    %al,(%rax)
    3e20:	0d 00 00 00 00       	or     $0x0,%eax
    3e25:	00 00                	add    %al,(%rax)
    3e27:	00 54 11 00          	add    %dl,0x0(%rcx,%rdx,1)
    3e2b:	00 00                	add    %al,(%rax)
    3e2d:	00 00                	add    %al,(%rax)
    3e2f:	00 19                	add    %bl,(%rcx)
    3e31:	00 00                	add    %al,(%rax)
    3e33:	00 00                	add    %al,(%rax)
    3e35:	00 00                	add    %al,(%rax)
    3e37:	00 f0                	add    %dh,%al
    3e39:	3d 00 00 00 00       	cmp    $0x0,%eax
    3e3e:	00 00                	add    %al,(%rax)
    3e40:	1b 00                	sbb    (%rax),%eax
    3e42:	00 00                	add    %al,(%rax)
    3e44:	00 00                	add    %al,(%rax)
    3e46:	00 00                	add    %al,(%rax)
    3e48:	08 00                	or     %al,(%rax)
    3e4a:	00 00                	add    %al,(%rax)
    3e4c:	00 00                	add    %al,(%rax)
    3e4e:	00 00                	add    %al,(%rax)
    3e50:	1a 00                	sbb    (%rax),%al
    3e52:	00 00                	add    %al,(%rax)
    3e54:	00 00                	add    %al,(%rax)
    3e56:	00 00                	add    %al,(%rax)
    3e58:	f8                   	clc    
    3e59:	3d 00 00 00 00       	cmp    $0x0,%eax
    3e5e:	00 00                	add    %al,(%rax)
    3e60:	1c 00                	sbb    $0x0,%al
    3e62:	00 00                	add    %al,(%rax)
    3e64:	00 00                	add    %al,(%rax)
    3e66:	00 00                	add    %al,(%rax)
    3e68:	08 00                	or     %al,(%rax)
    3e6a:	00 00                	add    %al,(%rax)
    3e6c:	00 00                	add    %al,(%rax)
    3e6e:	00 00                	add    %al,(%rax)
    3e70:	f5                   	cmc    
    3e71:	fe                   	(bad)  
    3e72:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e75:	00 00                	add    %al,(%rax)
    3e77:	00 a0 03 00 00 00    	add    %ah,0x3(%rax)
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e85 <_DYNAMIC+0x85>
    3e85:	00 00                	add    %al,(%rax)
    3e87:	00 58 04             	add    %bl,0x4(%rax)
    3e8a:	00 00                	add    %al,(%rax)
    3e8c:	00 00                	add    %al,(%rax)
    3e8e:	00 00                	add    %al,(%rax)
    3e90:	06                   	(bad)  
    3e91:	00 00                	add    %al,(%rax)
    3e93:	00 00                	add    %al,(%rax)
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 c8                	add    %cl,%al
    3e99:	03 00                	add    (%rax),%eax
    3e9b:	00 00                	add    %al,(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 0a                	add    %cl,(%rdx)
    3ea1:	00 00                	add    %al,(%rax)
    3ea3:	00 00                	add    %al,(%rax)
    3ea5:	00 00                	add    %al,(%rax)
    3ea7:	00 88 00 00 00 00    	add    %cl,0x0(%rax)
    3ead:	00 00                	add    %al,(%rax)
    3eaf:	00 0b                	add    %cl,(%rbx)
    3eb1:	00 00                	add    %al,(%rax)
    3eb3:	00 00                	add    %al,(%rax)
    3eb5:	00 00                	add    %al,(%rax)
    3eb7:	00 18                	add    %bl,(%rax)
    3eb9:	00 00                	add    %al,(%rax)
    3ebb:	00 00                	add    %al,(%rax)
    3ebd:	00 00                	add    %al,(%rax)
    3ebf:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3ec5 <_DYNAMIC+0xc5>
	...
    3ecd:	00 00                	add    %al,(%rax)
    3ecf:	00 03                	add    %al,(%rbx)
    3ed1:	00 00                	add    %al,(%rax)
    3ed3:	00 00                	add    %al,(%rax)
    3ed5:	00 00                	add    %al,(%rax)
    3ed7:	00 c0                	add    %al,%al
    3ed9:	3f                   	(bad)  
    3eda:	00 00                	add    %al,(%rax)
    3edc:	00 00                	add    %al,(%rax)
    3ede:	00 00                	add    %al,(%rax)
    3ee0:	07                   	(bad)  
    3ee1:	00 00                	add    %al,(%rax)
    3ee3:	00 00                	add    %al,(%rax)
    3ee5:	00 00                	add    %al,(%rax)
    3ee7:	00 20                	add    %ah,(%rax)
    3ee9:	05 00 00 00 00       	add    $0x0,%eax
    3eee:	00 00                	add    %al,(%rax)
    3ef0:	08 00                	or     %al,(%rax)
    3ef2:	00 00                	add    %al,(%rax)
    3ef4:	00 00                	add    %al,(%rax)
    3ef6:	00 00                	add    %al,(%rax)
    3ef8:	c0 00 00             	rolb   $0x0,(%rax)
    3efb:	00 00                	add    %al,(%rax)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 09                	add    %cl,(%rcx)
    3f01:	00 00                	add    %al,(%rax)
    3f03:	00 00                	add    %al,(%rax)
    3f05:	00 00                	add    %al,(%rax)
    3f07:	00 18                	add    %bl,(%rax)
    3f09:	00 00                	add    %al,(%rax)
    3f0b:	00 00                	add    %al,(%rax)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 1e                	add    %bl,(%rsi)
    3f11:	00 00                	add    %al,(%rax)
    3f13:	00 00                	add    %al,(%rax)
    3f15:	00 00                	add    %al,(%rax)
    3f17:	00 08                	add    %cl,(%rax)
    3f19:	00 00                	add    %al,(%rax)
    3f1b:	00 00                	add    %al,(%rax)
    3f1d:	00 00                	add    %al,(%rax)
    3f1f:	00 fb                	add    %bh,%bl
    3f21:	ff                   	(bad)  
    3f22:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f25:	00 00                	add    %al,(%rax)
    3f27:	00 01                	add    %al,(%rcx)
    3f29:	00 00                	add    %al,(%rax)
    3f2b:	08 00                	or     %al,(%rax)
    3f2d:	00 00                	add    %al,(%rax)
    3f2f:	00 fe                	add    %bh,%dh
    3f31:	ff                   	(bad)  
    3f32:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f35:	00 00                	add    %al,(%rax)
    3f37:	00 f0                	add    %dh,%al
    3f39:	04 00                	add    $0x0,%al
    3f3b:	00 00                	add    %al,(%rax)
    3f3d:	00 00                	add    %al,(%rax)
    3f3f:	00 ff                	add    %bh,%bh
    3f41:	ff                   	(bad)  
    3f42:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f45:	00 00                	add    %al,(%rax)
    3f47:	00 01                	add    %al,(%rcx)
    3f49:	00 00                	add    %al,(%rax)
    3f4b:	00 00                	add    %al,(%rax)
    3f4d:	00 00                	add    %al,(%rax)
    3f4f:	00 f0                	add    %dh,%al
    3f51:	ff                   	(bad)  
    3f52:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f55:	00 00                	add    %al,(%rax)
    3f57:	00 e0                	add    %ah,%al
    3f59:	04 00                	add    $0x0,%al
    3f5b:	00 00                	add    %al,(%rax)
    3f5d:	00 00                	add    %al,(%rax)
    3f5f:	00 f9                	add    %bh,%cl
    3f61:	ff                   	(bad)  
    3f62:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f65:	00 00                	add    %al,(%rax)
    3f67:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000003fc0 <_GLOBAL_OFFSET_TABLE_>:
    3fc0:	00 3e                	add    %bh,(%rsi)
	...

Disassembly of section .data:

0000000000004000 <__data_start>:
	...

0000000000004008 <__dso_handle>:
    4008:	08 40 00             	or     %al,0x0(%rax)
    400b:	00 00                	add    %al,(%rax)
    400d:	00 00                	add    %al,(%rax)
	...

0000000000004010 <hex_table>:
    4010:	30 31                	xor    %dh,(%rcx)
    4012:	32 33                	xor    (%rbx),%dh
    4014:	34 35                	xor    $0x35,%al
    4016:	36 37                	ss (bad) 
    4018:	38 39                	cmp    %bh,(%rcx)
    401a:	41                   	rex.B
    401b:	42                   	rex.X
    401c:	43                   	rex.XB
    401d:	44                   	rex.R
    401e:	45                   	rex.RB
    401f:	46                   	rex.RX

Disassembly of section .bss:

0000000000004020 <completed.0>:
	...

0000000000004021 <buffer>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <.end_of_while_not_null_and_not_percent+0x2c>
   a:	74 75                	je     81 <.end_of_while_not_null_and_not_percent+0x35>
   c:	20 31                	and    %dh,(%rcx)
   e:	31 2e                	xor    %ebp,(%rsi)
  10:	33 2e                	xor    (%rsi),%ebp
  12:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627549 <_end+0x756234e1>
  18:	6e                   	outsb  %ds:(%rsi),(%dx)
  19:	74 75                	je     90 <.end_of_while_not_null_and_not_percent+0x44>
  1b:	31 7e 32             	xor    %edi,0x32(%rsi)
  1e:	32 2e                	xor    (%rsi),%ch
  20:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  23:	20 31                	and    %dh,(%rcx)
  25:	31 2e                	xor    %ebp,(%rsi)
  27:	33 2e                	xor    (%rsi),%ebp
  29:	30 00                	xor    %al,(%rax)

Disassembly of section .code:

0000000000000000 <MY_PRINTF>:
   0:	4c 8b 1c 24          	mov    (%rsp),%r11
   4:	49 89 dc             	mov    %rbx,%r12
   7:	48 83 c4 08          	add    $0x8,%rsp
   b:	41 51                	push   %r9
   d:	41 50                	push   %r8
   f:	51                   	push   %rcx
  10:	52                   	push   %rdx
  11:	56                   	push   %rsi
  12:	57                   	push   %rdi
  13:	e8 0c 00 00 00       	call   24 <my_printf>
  18:	48 83 c4 30          	add    $0x30,%rsp
  1c:	4c 89 db             	mov    %r11,%rbx
  1f:	53                   	push   %rbx
  20:	4c 89 e3             	mov    %r12,%rbx
  23:	c3                   	ret    

0000000000000024 <my_printf>:
  24:	55                   	push   %rbp
  25:	48 89 e5             	mov    %rsp,%rbp
  28:	48 8b 5d 10          	mov    0x10(%rbp),%rbx
  2c:	48 83 c5 18          	add    $0x18,%rbp

0000000000000030 <.while_not_null>:
  30:	80 3b 00             	cmpb   $0x0,(%rbx)
  33:	0f 84 c8 02 00 00    	je     301 <.end_of_while_not_null>
  39:	48 31 c9             	xor    %rcx,%rcx

000000000000003c <.while_not_null_and_not_percent>:
  3c:	8a 04 0b             	mov    (%rbx,%rcx,1),%al
  3f:	3c 00                	cmp    $0x0,%al
  41:	74 09                	je     4c <.end_of_while_not_null_and_not_percent>
  43:	3c 25                	cmp    $0x25,%al
  45:	74 05                	je     4c <.end_of_while_not_null_and_not_percent>
  47:	48 ff c1             	inc    %rcx
  4a:	eb f0                	jmp    3c <.while_not_null_and_not_percent>

000000000000004c <.end_of_while_not_null_and_not_percent>:
  4c:	51                   	push   %rcx
  4d:	53                   	push   %rbx
  4e:	90                   	nop
  4f:	48 89 ca             	mov    %rcx,%rdx
  52:	48 89 de             	mov    %rbx,%rsi
  55:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
  5c:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
  63:	0f 05                	syscall 
  65:	90                   	nop
  66:	5b                   	pop    %rbx
  67:	59                   	pop    %rcx
  68:	48 01 cb             	add    %rcx,%rbx
  6b:	80 3b 25             	cmpb   $0x25,(%rbx)
  6e:	0f 85 8d 02 00 00    	jne    301 <.end_of_while_not_null>
  74:	48 ff c3             	inc    %rbx
  77:	0f b6 03             	movzbl (%rbx),%eax
  7a:	83 f8 25             	cmp    $0x25,%eax
  7d:	0f 84 d7 00 00 00    	je     15a <.percent_spec_case>
  83:	83 f8 78             	cmp    $0x78,%eax
  86:	0f 8f 49 02 00 00    	jg     2d5 <.default_case>
  8c:	83 f8 62             	cmp    $0x62,%eax
  8f:	0f 8c 40 02 00 00    	jl     2d5 <.default_case>
  95:	83 e8 62             	sub    $0x62,%eax
  98:	48 8b 04 c5 a2 00 00 	mov    0xa2(,%rax,8),%rax
  9f:	00 
  a0:	ff e0                	jmp    *%rax

00000000000000a2 <jump_table>:
  a2:	87 01                	xchg   %eax,(%rcx)
  a4:	00 00                	add    %al,(%rax)
  a6:	00 00                	add    %al,(%rax)
  a8:	00 00                	add    %al,(%rax)
  aa:	c7 01 00 00 00 00    	movl   $0x0,(%rcx)
  b0:	00 00                	add    %al,(%rax)
  b2:	ec                   	in     (%dx),%al
  b3:	01 00                	add    %eax,(%rax)
  b5:	00 00                	add    %al,(%rax)
  b7:	00 00                	add    %al,(%rax)
  b9:	00 d5                	add    %dl,%ch
  bb:	02 00                	add    (%rax),%al
  bd:	00 00                	add    %al,(%rax)
  bf:	00 00                	add    %al,(%rax)
  c1:	00 d5                	add    %dl,%ch
  c3:	02 00                	add    (%rax),%al
  c5:	00 00                	add    %al,(%rax)
  c7:	00 00                	add    %al,(%rax)
  c9:	00 d5                	add    %dl,%ch
  cb:	02 00                	add    (%rax),%al
  cd:	00 00                	add    %al,(%rax)
  cf:	00 00                	add    %al,(%rax)
  d1:	00 d5                	add    %dl,%ch
  d3:	02 00                	add    (%rax),%al
  d5:	00 00                	add    %al,(%rax)
  d7:	00 00                	add    %al,(%rax)
  d9:	00 d5                	add    %dl,%ch
  db:	02 00                	add    (%rax),%al
  dd:	00 00                	add    %al,(%rax)
  df:	00 00                	add    %al,(%rax)
  e1:	00 d5                	add    %dl,%ch
  e3:	02 00                	add    (%rax),%al
  e5:	00 00                	add    %al,(%rax)
  e7:	00 00                	add    %al,(%rax)
  e9:	00 d5                	add    %dl,%ch
  eb:	02 00                	add    (%rax),%al
  ed:	00 00                	add    %al,(%rax)
  ef:	00 00                	add    %al,(%rax)
  f1:	00 d5                	add    %dl,%ch
  f3:	02 00                	add    (%rax),%al
  f5:	00 00                	add    %al,(%rax)
  f7:	00 00                	add    %al,(%rax)
  f9:	00 d5                	add    %dl,%ch
  fb:	02 00                	add    (%rax),%al
  fd:	00 00                	add    %al,(%rax)
  ff:	00 00                	add    %al,(%rax)
 101:	00 d5                	add    %dl,%ch
 103:	02 00                	add    (%rax),%al
 105:	00 00                	add    %al,(%rax)
 107:	00 00                	add    %al,(%rax)
 109:	00 2c 02             	add    %ch,(%rdx,%rax,1)
 10c:	00 00                	add    %al,(%rax)
 10e:	00 00                	add    %al,(%rax)
 110:	00 00                	add    %al,(%rax)
 112:	d5                   	(bad)  
 113:	02 00                	add    (%rax),%al
 115:	00 00                	add    %al,(%rax)
 117:	00 00                	add    %al,(%rax)
 119:	00 d5                	add    %dl,%ch
 11b:	02 00                	add    (%rax),%al
 11d:	00 00                	add    %al,(%rax)
 11f:	00 00                	add    %al,(%rax)
 121:	00 d5                	add    %dl,%ch
 123:	02 00                	add    (%rax),%al
 125:	00 00                	add    %al,(%rax)
 127:	00 00                	add    %al,(%rax)
 129:	00 6c 02 00          	add    %ch,0x0(%rdx,%rax,1)
 12d:	00 00                	add    %al,(%rax)
 12f:	00 00                	add    %al,(%rax)
 131:	00 d5                	add    %dl,%ch
 133:	02 00                	add    (%rax),%al
 135:	00 00                	add    %al,(%rax)
 137:	00 00                	add    %al,(%rax)
 139:	00 d5                	add    %dl,%ch
 13b:	02 00                	add    (%rax),%al
 13d:	00 00                	add    %al,(%rax)
 13f:	00 00                	add    %al,(%rax)
 141:	00 d5                	add    %dl,%ch
 143:	02 00                	add    (%rax),%al
 145:	00 00                	add    %al,(%rax)
 147:	00 00                	add    %al,(%rax)
 149:	00 d5                	add    %dl,%ch
 14b:	02 00                	add    (%rax),%al
 14d:	00 00                	add    %al,(%rax)
 14f:	00 00                	add    %al,(%rax)
 151:	00 96 02 00 00 00    	add    %dl,0x2(%rsi)
 157:	00 00                	add    %al,(%rax)
	...

000000000000015a <.percent_spec_case>:
 15a:	c6 04 25 21 40 00 00 	movb   $0x25,0x4021
 161:	25 
 162:	90                   	nop
 163:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
 16a:	48 c7 c6 21 40 00 00 	mov    $0x4021,%rsi
 171:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
 178:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
 17f:	0f 05                	syscall 
 181:	90                   	nop
 182:	e9 72 01 00 00       	jmp    2f9 <.end_of_switch>

0000000000000187 <.binary_spec_case>:
 187:	90                   	nop
 188:	48 8b 45 00          	mov    0x0(%rbp),%rax
 18c:	48 83 c5 08          	add    $0x8,%rbp
 190:	48 c7 c6 60 40 00 00 	mov    $0x4060,%rsi
 197:	e8 b8 01 00 00       	call   354 <put_binary_in_buffer>
 19c:	48 c7 c0 60 40 00 00 	mov    $0x4060,%rax
 1a3:	48 29 f0             	sub    %rsi,%rax
 1a6:	48 ff c6             	inc    %rsi
 1a9:	90                   	nop
 1aa:	48 89 c2             	mov    %rax,%rdx
 1ad:	48 89 f6             	mov    %rsi,%rsi
 1b0:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
 1b7:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
 1be:	0f 05                	syscall 
 1c0:	90                   	nop
 1c1:	90                   	nop
 1c2:	e9 32 01 00 00       	jmp    2f9 <.end_of_switch>

00000000000001c7 <.char_spec_case>:
 1c7:	90                   	nop
 1c8:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
 1cf:	48 89 ee             	mov    %rbp,%rsi
 1d2:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
 1d9:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
 1e0:	0f 05                	syscall 
 1e2:	90                   	nop
 1e3:	48 83 c5 08          	add    $0x8,%rbp
 1e7:	e9 0d 01 00 00       	jmp    2f9 <.end_of_switch>

00000000000001ec <.decimal_spec_case>:
 1ec:	90                   	nop
 1ed:	48 8b 45 00          	mov    0x0(%rbp),%rax
 1f1:	48 83 c5 08          	add    $0x8,%rbp
 1f5:	48 c7 c6 60 40 00 00 	mov    $0x4060,%rsi
 1fc:	e8 12 01 00 00       	call   313 <put_decimal_in_buffer>
 201:	48 c7 c0 60 40 00 00 	mov    $0x4060,%rax
 208:	48 29 f0             	sub    %rsi,%rax
 20b:	48 ff c6             	inc    %rsi
 20e:	90                   	nop
 20f:	48 89 c2             	mov    %rax,%rdx
 212:	48 89 f6             	mov    %rsi,%rsi
 215:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
 21c:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
 223:	0f 05                	syscall 
 225:	90                   	nop
 226:	90                   	nop
 227:	e9 cd 00 00 00       	jmp    2f9 <.end_of_switch>

000000000000022c <.oct_spec_case>:
 22c:	90                   	nop
 22d:	48 8b 45 00          	mov    0x0(%rbp),%rax
 231:	48 83 c5 08          	add    $0x8,%rbp
 235:	48 c7 c6 60 40 00 00 	mov    $0x4060,%rsi
 23c:	e8 30 01 00 00       	call   371 <put_oct_in_buffer>
 241:	48 c7 c0 60 40 00 00 	mov    $0x4060,%rax
 248:	48 29 f0             	sub    %rsi,%rax
 24b:	48 ff c6             	inc    %rsi
 24e:	90                   	nop
 24f:	48 89 c2             	mov    %rax,%rdx
 252:	48 89 f6             	mov    %rsi,%rsi
 255:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
 25c:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
 263:	0f 05                	syscall 
 265:	90                   	nop
 266:	90                   	nop
 267:	e9 8d 00 00 00       	jmp    2f9 <.end_of_switch>

000000000000026c <.string_spec_case>:
 26c:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
 270:	b0 00                	mov    $0x0,%al
 272:	e8 8c 00 00 00       	call   303 <str_len>
 277:	90                   	nop
 278:	48 89 ca             	mov    %rcx,%rdx
 27b:	48 8b 75 00          	mov    0x0(%rbp),%rsi
 27f:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
 286:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
 28d:	0f 05                	syscall 
 28f:	90                   	nop
 290:	48 83 c5 08          	add    $0x8,%rbp
 294:	eb 63                	jmp    2f9 <.end_of_switch>

0000000000000296 <.hex_spec_case>:
 296:	53                   	push   %rbx
 297:	90                   	nop
 298:	48 8b 45 00          	mov    0x0(%rbp),%rax
 29c:	48 83 c5 08          	add    $0x8,%rbp
 2a0:	48 c7 c6 60 40 00 00 	mov    $0x4060,%rsi
 2a7:	e8 e3 00 00 00       	call   38f <put_hex_in_buffer>
 2ac:	48 c7 c0 60 40 00 00 	mov    $0x4060,%rax
 2b3:	48 29 f0             	sub    %rsi,%rax
 2b6:	48 ff c6             	inc    %rsi
 2b9:	90                   	nop
 2ba:	48 89 c2             	mov    %rax,%rdx
 2bd:	48 89 f6             	mov    %rsi,%rsi
 2c0:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
 2c7:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
 2ce:	0f 05                	syscall 
 2d0:	90                   	nop
 2d1:	90                   	nop
 2d2:	5b                   	pop    %rbx
 2d3:	eb 24                	jmp    2f9 <.end_of_switch>

00000000000002d5 <.default_case>:
 2d5:	48 ff cb             	dec    %rbx
 2d8:	90                   	nop
 2d9:	48 c7 c2 02 00 00 00 	mov    $0x2,%rdx
 2e0:	48 89 de             	mov    %rbx,%rsi
 2e3:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
 2ea:	48 c7 c7 01 00 00 00 	mov    $0x1,%rdi
 2f1:	0f 05                	syscall 
 2f3:	90                   	nop
 2f4:	48 ff c3             	inc    %rbx
 2f7:	eb 00                	jmp    2f9 <.end_of_switch>

00000000000002f9 <.end_of_switch>:
 2f9:	48 ff c3             	inc    %rbx
 2fc:	e9 2f fd ff ff       	jmp    30 <.while_not_null>

0000000000000301 <.end_of_while_not_null>:
 301:	5d                   	pop    %rbp
 302:	c3                   	ret    

0000000000000303 <str_len>:
 303:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
 30a:	48 ff c1             	inc    %rcx
 30d:	38 04 0f             	cmp    %al,(%rdi,%rcx,1)
 310:	75 0e                	jne    320 <put_decimal_in_buffer+0xd>
 312:	c3                   	ret    

0000000000000313 <put_decimal_in_buffer>:
 313:	89 c1                	mov    %eax,%ecx
 315:	e8 0d 00 00 00       	call   327 <put_abs_decimal_in_buffer>
 31a:	83 f9 00             	cmp    $0x0,%ecx
 31d:	7c 01                	jl     320 <put_decimal_in_buffer+0xd>
 31f:	c3                   	ret    
 320:	c6 06 2d             	movb   $0x2d,(%rsi)
 323:	48 ff ce             	dec    %rsi
 326:	c3                   	ret    

0000000000000327 <put_abs_decimal_in_buffer>:
 327:	48 c7 c7 0a 00 00 00 	mov    $0xa,%rdi
 32e:	83 f8 00             	cmp    $0x0,%eax
 331:	7c 16                	jl     349 <put_abs_decimal_in_buffer+0x22>
 333:	48 31 d2             	xor    %rdx,%rdx
 336:	48 f7 f7             	div    %rdi
 339:	48 83 c2 30          	add    $0x30,%rdx
 33d:	88 16                	mov    %dl,(%rsi)
 33f:	48 ff ce             	dec    %rsi
 342:	48 83 f8 00          	cmp    $0x0,%rax
 346:	75 eb                	jne    333 <put_abs_decimal_in_buffer+0xc>
 348:	c3                   	ret    
 349:	89 c2                	mov    %eax,%edx
 34b:	c1 fa 1f             	sar    $0x1f,%edx
 34e:	31 d0                	xor    %edx,%eax
 350:	29 d0                	sub    %edx,%eax
 352:	eb df                	jmp    333 <put_abs_decimal_in_buffer+0xc>

0000000000000354 <put_binary_in_buffer>:
 354:	48 c7 c2 01 00 00 00 	mov    $0x1,%rdx
 35b:	48 21 c2             	and    %rax,%rdx
 35e:	48 83 c2 30          	add    $0x30,%rdx
 362:	88 16                	mov    %dl,(%rsi)
 364:	48 ff ce             	dec    %rsi
 367:	48 d1 e8             	shr    %rax
 36a:	48 83 f8 00          	cmp    $0x0,%rax
 36e:	75 e4                	jne    354 <put_binary_in_buffer>
 370:	c3                   	ret    

0000000000000371 <put_oct_in_buffer>:
 371:	48 c7 c2 07 00 00 00 	mov    $0x7,%rdx
 378:	48 21 c2             	and    %rax,%rdx
 37b:	48 83 c2 30          	add    $0x30,%rdx
 37f:	88 16                	mov    %dl,(%rsi)
 381:	48 ff ce             	dec    %rsi
 384:	48 c1 e8 03          	shr    $0x3,%rax
 388:	48 83 f8 00          	cmp    $0x0,%rax
 38c:	75 e3                	jne    371 <put_oct_in_buffer>
 38e:	c3                   	ret    

000000000000038f <put_hex_in_buffer>:
 38f:	48 c7 c3 10 40 00 00 	mov    $0x4010,%rbx
 396:	48 92                	xchg   %rax,%rdx
 398:	48 c7 c0 0f 00 00 00 	mov    $0xf,%rax
 39f:	48 21 d0             	and    %rdx,%rax
 3a2:	d7                   	xlat   %ds:(%rbx)
 3a3:	88 06                	mov    %al,(%rsi)
 3a5:	48 ff ce             	dec    %rsi
 3a8:	48 c1 ea 04          	shr    $0x4,%rdx
 3ac:	48 83 fa 00          	cmp    $0x0,%rdx
 3b0:	75 e6                	jne    398 <put_hex_in_buffer+0x9>
 3b2:	c3                   	ret    
